{"version":3,"file":"5945.ac36a0c51cf7581a7f9f.js","mappings":"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","sources":["webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/utils/makeClassES5Compatible.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/types/datasource.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/types/plugin.ts","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Button/Button.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/CustomScrollbar/ScrollIndicators.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/CustomScrollbar/CustomScrollbar.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Forms/FieldValidationMessage.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Forms/InlineLabel.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Forms/InlineField.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Forms/Label.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Forms/commonStyles.ts","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Icon/Icon.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Icon/utils.ts","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/IconButton/IconButton.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Input/Input.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/LoadingPlaceholder/LoadingPlaceholder.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/utils/useAsyncDependency.ts","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/ErrorBoundary/ErrorWithStack.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Monaco/ReactMonacoEditorLazy.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Monaco/types.ts","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Monaco/suggestions.ts","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Monaco/CodeEditor.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Select/DropdownIndicator.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Select/IndicatorsContainer.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Select/InputControl.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Select/MultiValue.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Select/SelectMenu.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Select/SelectOptionGroup.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/utils/useDelayedSwitch.ts","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/transitions/SlideOutTransition.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Select/SingleValue.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Select/ValueContainer.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Select/resetSelectStyles.ts","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Select/utils.ts","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Select/SelectBase.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Select/Select.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Select/SelectContainer.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Select/getSelectStyles.ts","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/types/icon.ts","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Spinner/Spinner.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Switch/Switch.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/utils/tooltipUtils.ts","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Portal/Portal.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Tooltip/Tooltip.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/transitions/FadeTransition.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/themes/ThemeContext.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/themes/mixins.ts","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/themes/stylesFactory.ts","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/utils/reactUtils.ts"],"sourcesContent":["/**\n * @beta\n * Proxies a ES6 class so that it can be used as a base class for an ES5 class\n */\nexport function makeClassES5Compatible<T extends abstract new (...args: ConstructorParameters<T>) => InstanceType<T>>(\n  ES6Class: T\n): T {\n  return new Proxy(ES6Class, {\n    // ES5 code will call it like a function using super\n    apply(target, self, argumentsList) {\n      if (typeof Reflect === 'undefined' || !Reflect.construct) {\n        alert('Browser is too old');\n      }\n\n      return Reflect.construct(target, argumentsList, self.constructor);\n    },\n  });\n}\n","import { ComponentType } from 'react';\nimport { Observable } from 'rxjs';\n\nimport { makeClassES5Compatible } from '../utils/makeClassES5Compatible';\n\nimport { ScopedVars } from './ScopedVars';\nimport { AnnotationEvent, AnnotationQuery, AnnotationSupport } from './annotations';\nimport { CoreApp } from './app';\nimport { KeyValue, LoadingState, TableData, TimeSeries } from './data';\nimport { DataFrame, DataFrameDTO } from './dataFrame';\nimport { PanelData } from './panel';\nimport { GrafanaPlugin, PluginMeta } from './plugin';\nimport { DataQuery } from './query';\nimport { RawTimeRange, TimeRange } from './time';\nimport { CustomVariableSupport, DataSourceVariableSupport, StandardVariableSupport } from './variables';\n\nimport { AdHocVariableFilter, DataSourceRef, WithAccessControlMetadata } from '.';\n\nexport interface DataSourcePluginOptionsEditorProps<\n  JSONData extends DataSourceJsonData = DataSourceJsonData,\n  SecureJSONData = {},\n> {\n  options: DataSourceSettings<JSONData, SecureJSONData>;\n  onOptionsChange: (options: DataSourceSettings<JSONData, SecureJSONData>) => void;\n}\n\n// Utility type to extract the query type TQuery from a class extending DataSourceApi<TQuery, TOptions>\nexport type DataSourceQueryType<DSType> = DSType extends DataSourceApi<infer TQuery, any> ? TQuery : never;\n\n// Utility type to extract the options type TOptions from a class extending DataSourceApi<TQuery, TOptions>\nexport type DataSourceOptionsType<DSType> = DSType extends DataSourceApi<any, infer TOptions> ? TOptions : never;\n\nexport class DataSourcePlugin<\n  DSType extends DataSourceApi<TQuery, TOptions>,\n  TQuery extends DataQuery = DataSourceQueryType<DSType>,\n  TOptions extends DataSourceJsonData = DataSourceOptionsType<DSType>,\n  TSecureOptions = {},\n> extends GrafanaPlugin<DataSourcePluginMeta<TOptions>> {\n  components: DataSourcePluginComponents<DSType, TQuery, TOptions, TSecureOptions> = {};\n\n  constructor(public DataSourceClass: DataSourceConstructor<DSType, TQuery, TOptions>) {\n    super();\n  }\n\n  setConfigEditor(editor: ComponentType<DataSourcePluginOptionsEditorProps<TOptions, TSecureOptions>>) {\n    this.components.ConfigEditor = editor;\n    return this;\n  }\n\n  setConfigCtrl(ConfigCtrl: any) {\n    this.angularConfigCtrl = ConfigCtrl;\n    return this;\n  }\n\n  setQueryCtrl(QueryCtrl: any) {\n    this.components.QueryCtrl = QueryCtrl;\n    return this;\n  }\n\n  /** @deprecated -- register the annotation support in the instance constructor */\n  setAnnotationQueryCtrl(AnnotationsQueryCtrl: any) {\n    this.components.AnnotationsQueryCtrl = AnnotationsQueryCtrl;\n    return this;\n  }\n\n  setQueryEditor(QueryEditor: ComponentType<QueryEditorProps<DSType, TQuery, TOptions>>) {\n    this.components.QueryEditor = QueryEditor;\n    return this;\n  }\n\n  /** @deprecated Use `setQueryEditor` instead. When using Explore `props.app` is equal to `CoreApp.Explore` */\n  setExploreQueryField(ExploreQueryField: ComponentType<QueryEditorProps<DSType, TQuery, TOptions>>) {\n    this.components.ExploreQueryField = ExploreQueryField;\n    return this;\n  }\n\n  /** @deprecated Use `setQueryEditor` instead. */\n  setExploreMetricsQueryField(ExploreQueryField: ComponentType<QueryEditorProps<DSType, TQuery, TOptions>>) {\n    this.components.ExploreMetricsQueryField = ExploreQueryField;\n    return this;\n  }\n\n  /** @deprecated Use `setQueryEditor` instead. */\n  setExploreLogsQueryField(ExploreQueryField: ComponentType<QueryEditorProps<DSType, TQuery, TOptions>>) {\n    this.components.ExploreLogsQueryField = ExploreQueryField;\n    return this;\n  }\n\n  setQueryEditorHelp(QueryEditorHelp: ComponentType<QueryEditorHelpProps<TQuery>>) {\n    this.components.QueryEditorHelp = QueryEditorHelp;\n    return this;\n  }\n\n  /**\n   * @deprecated prefer using `setQueryEditorHelp`\n   */\n  setExploreStartPage(ExploreStartPage: ComponentType<QueryEditorHelpProps<TQuery>>) {\n    return this.setQueryEditorHelp(ExploreStartPage);\n  }\n\n  /**\n   * @deprecated -- prefer using {@link StandardVariableSupport} or {@link CustomVariableSupport} or {@link DataSourceVariableSupport} in data source instead\n   */\n  setVariableQueryEditor(VariableQueryEditor: any) {\n    this.components.VariableQueryEditor = VariableQueryEditor;\n    return this;\n  }\n\n  setMetadataInspector(MetadataInspector: ComponentType<MetadataInspectorProps<DSType, TQuery, TOptions>>) {\n    this.components.MetadataInspector = MetadataInspector;\n    return this;\n  }\n\n  setComponentsFromLegacyExports(pluginExports: any) {\n    this.angularConfigCtrl = pluginExports.ConfigCtrl;\n\n    this.components.QueryCtrl = pluginExports.QueryCtrl;\n    this.components.AnnotationsQueryCtrl = pluginExports.AnnotationsQueryCtrl;\n    this.components.ExploreQueryField = pluginExports.ExploreQueryField;\n    this.components.QueryEditor = pluginExports.QueryEditor;\n    this.components.QueryEditorHelp = pluginExports.QueryEditorHelp;\n    this.components.VariableQueryEditor = pluginExports.VariableQueryEditor;\n  }\n}\n\nexport interface DataSourcePluginMeta<T extends KeyValue = {}> extends PluginMeta<T> {\n  builtIn?: boolean; // Is this for all\n  metrics?: boolean;\n  logs?: boolean;\n  annotations?: boolean;\n  alerting?: boolean;\n  tracing?: boolean;\n  mixed?: boolean;\n  hasQueryHelp?: boolean;\n  category?: string;\n  queryOptions?: PluginMetaQueryOptions;\n  sort?: number;\n  streaming?: boolean;\n  unlicensed?: boolean;\n  backend?: boolean;\n  isBackend?: boolean;\n}\n\ninterface PluginMetaQueryOptions {\n  cacheTimeout?: boolean;\n  maxDataPoints?: boolean;\n  minInterval?: boolean;\n}\ninterface PluginQueryCachingConfig {\n  enabled?: boolean;\n  TTLMs?: number;\n}\n\nexport interface DataSourcePluginComponents<\n  DSType extends DataSourceApi<TQuery, TOptions>,\n  TQuery extends DataQuery = DataQuery,\n  TOptions extends DataSourceJsonData = DataSourceJsonData,\n  TSecureOptions = {},\n> {\n  QueryCtrl?: any;\n  AnnotationsQueryCtrl?: any;\n  VariableQueryEditor?: any;\n  QueryEditor?: ComponentType<QueryEditorProps<DSType, TQuery, TOptions>>;\n  /** @deprecated it will be removed in a future release and `QueryEditor` will be used instead. */\n  ExploreQueryField?: ComponentType<QueryEditorProps<DSType, TQuery, TOptions>>;\n  /** @deprecated it will be removed in a future release and `QueryEditor` will be used instead. */\n  ExploreMetricsQueryField?: ComponentType<QueryEditorProps<DSType, TQuery, TOptions>>;\n  /** @deprecated it will be removed in a future release and `QueryEditor` will be used instead. */\n  ExploreLogsQueryField?: ComponentType<QueryEditorProps<DSType, TQuery, TOptions>>;\n  QueryEditorHelp?: ComponentType<QueryEditorHelpProps<TQuery>>;\n  ConfigEditor?: ComponentType<DataSourcePluginOptionsEditorProps<TOptions, TSecureOptions>>;\n  MetadataInspector?: ComponentType<MetadataInspectorProps<DSType, TQuery, TOptions>>;\n}\n\n// Only exported for tests\nexport interface DataSourceConstructor<\n  DSType extends DataSourceApi<TQuery, TOptions>,\n  TQuery extends DataQuery = DataQuery,\n  TOptions extends DataSourceJsonData = DataSourceJsonData,\n> {\n  new (instanceSettings: DataSourceInstanceSettings<TOptions>, ...args: any[]): DSType;\n}\n\n// VariableSupport is hoisted up to its own type to fix the wonky intermittent\n// 'variables is references directly or indirectly' error\ntype VariableSupport<TQuery extends DataQuery, TOptions extends DataSourceJsonData> =\n  | StandardVariableSupport<DataSourceApi<TQuery, TOptions>>\n  | CustomVariableSupport<DataSourceApi<TQuery, TOptions>>\n  | DataSourceVariableSupport<DataSourceApi<TQuery, TOptions>>;\n\n/**\n * The main data source abstraction interface, represents an instance of a data source\n *\n * Although this is a class, datasource implementations do not *yet* need to extend it.\n * As such, we can not yet add functions with default implementations.\n */\nabstract class DataSourceApi<\n  TQuery extends DataQuery = DataQuery,\n  TOptions extends DataSourceJsonData = DataSourceJsonData,\n  TQueryImportConfiguration extends Record<string, object> = {},\n> {\n  /**\n   *  Set in constructor\n   */\n  readonly name: string;\n\n  /**\n   *  Set in constructor\n   */\n  readonly id: number;\n\n  /**\n   *  Set in constructor\n   */\n  readonly type: string;\n\n  /**\n   *  Set in constructor\n   */\n  readonly uid: string;\n\n  /**\n   *  min interval range\n   */\n  interval?: string;\n\n  constructor(instanceSettings: DataSourceInstanceSettings<TOptions>) {\n    this.name = instanceSettings.name;\n    this.id = instanceSettings.id;\n    this.type = instanceSettings.type;\n    this.meta = instanceSettings.meta;\n    this.cachingConfig = instanceSettings.cachingConfig;\n    this.uid = instanceSettings.uid;\n  }\n\n  /**\n   * @deprecated use DataSourceWithQueryImportSupport and DataSourceWithQueryExportSupport\n   */\n  async importQueries?(queries: DataQuery[], originDataSource: DataSourceApi<DataQuery>): Promise<TQuery[]>;\n\n  /**\n   * Returns configuration for importing queries from other data sources\n   */\n  getImportQueryConfiguration?(): TQueryImportConfiguration;\n\n  /**\n   * Initializes a datasource after instantiation\n   */\n  init?: () => void;\n\n  /**\n   * Query for data, and optionally stream results\n   */\n  abstract query(request: DataQueryRequest<TQuery>): Promise<DataQueryResponse> | Observable<DataQueryResponse>;\n\n  /**\n   * Test & verify datasource settings & connection details (returning TestingStatus)\n   *\n   * When verification fails - errors specific to the data source should be handled here and converted to\n   * a TestingStatus object. Unknown errors and HTTP errors can be re-thrown and will be handled here:\n   * public/app/features/datasources/state/actions.ts\n   */\n  abstract testDatasource(): Promise<TestDataSourceResponse>;\n\n  /**\n   * This function is not called automatically unless running within the DataSourceWithBackend\n   *\n   * @deprecated\n   */\n  filterQuery?(query: TQuery): boolean;\n\n  /**\n   *  Get hints for query improvements\n   */\n  getQueryHints?(query: TQuery, results: any[], ...rest: any): QueryHint[];\n\n  /**\n   * Convert a query to a simple text string\n   */\n  getQueryDisplayText?(query: TQuery): string;\n\n  /**\n   * Variable query action.\n   */\n  metricFindQuery?(query: any, options?: LegacyMetricFindQueryOptions): Promise<MetricFindValue[]>;\n\n  /**\n   * Get tag keys for adhoc filters\n   */\n  getTagKeys?(options?: DataSourceGetTagKeysOptions): Promise<MetricFindValue[]>;\n\n  /**\n   * Get tag values for adhoc filters\n   */\n  getTagValues?(options: DataSourceGetTagValuesOptions): Promise<MetricFindValue[]>;\n\n  /**\n   * Set after constructor call, as the data source instance is the most common thing to pass around\n   * we attach the components to this instance for easy access\n   */\n  components?: DataSourcePluginComponents<DataSourceApi<TQuery, TOptions>, TQuery, TOptions>;\n\n  /**\n   * static information about the datasource\n   */\n  meta: DataSourcePluginMeta;\n\n  /**\n   * Information about the datasource's query caching configuration\n   * When the caching feature is disabled, this config will always be falsy\n   */\n  cachingConfig?: PluginQueryCachingConfig;\n\n  /**\n   * Used by alerting to check if query contains template variables\n   */\n  targetContainsTemplate?(query: TQuery): boolean;\n\n  /**\n   * Used in explore\n   */\n  modifyQuery?(query: TQuery, action: QueryFixAction): TQuery;\n\n  /** Get an identifier object for this datasource instance */\n  getRef(): DataSourceRef {\n    return { type: this.type, uid: this.uid };\n  }\n\n  /**\n   * Used in explore\n   */\n  languageProvider?: any;\n\n  getVersion?(optionalOptions?: any): Promise<string>;\n\n  interpolateVariablesInQueries?(queries: TQuery[], scopedVars: ScopedVars, filters?: AdHocVariableFilter[]): TQuery[];\n\n  /**\n   * An annotation processor allows explicit control for how annotations are managed.\n   *\n   * It is only necessary to configure an annotation processor if the default behavior is not desirable\n   */\n  annotations?: AnnotationSupport<TQuery>;\n\n  /**\n   * Can be optionally implemented to allow datasource to be a source of annotations for dashboard.\n   * This function will only be called if an angular {@link AnnotationsQueryCtrl} is configured and\n   * the {@link annotations} is undefined\n   *\n   * @deprecated -- prefer using {@link AnnotationSupport}\n   */\n  annotationQuery?(options: AnnotationQueryRequest<TQuery>): Promise<AnnotationEvent[]>;\n\n  /**\n   * Defines new variable support\n   * @alpha -- experimental\n   */\n  variables?: VariableSupport<TQuery, TOptions>;\n\n  /*\n   * Optionally, use this method to set default values for a query\n   * @alpha -- experimental\n   */\n  getDefaultQuery?(app: CoreApp): Partial<TQuery>;\n}\n\n/**\n * Options argument to DataSourceAPI.getTagKeys\n */\nexport interface DataSourceGetTagKeysOptions {\n  /**\n   * The other existing filters or base filters. New in v10.3\n   */\n  filters: AdHocVariableFilter[];\n  /**\n   * Context time range. New in v10.3\n   */\n  timeRange?: TimeRange;\n}\n\n/**\n * Options argument to DataSourceAPI.getTagValues\n */\nexport interface DataSourceGetTagValuesOptions {\n  key: string;\n  /**\n   * The other existing filters or base filters. New in v10.3\n   */\n  filters: AdHocVariableFilter[];\n  /**\n   * Context time range. New in v10.3\n   */\n  timeRange?: TimeRange;\n}\n\nexport interface MetadataInspectorProps<\n  DSType extends DataSourceApi<TQuery, TOptions>,\n  TQuery extends DataQuery = DataQuery,\n  TOptions extends DataSourceJsonData = DataSourceJsonData,\n> {\n  datasource: DSType;\n\n  // All Data from this DataSource\n  data: DataFrame[];\n}\n\nexport interface LegacyMetricFindQueryOptions {\n  searchFilter?: string;\n  scopedVars?: ScopedVars;\n  range?: TimeRange;\n  variable?: { name: string };\n}\n\nexport interface QueryEditorProps<\n  DSType extends DataSourceApi<TQuery, TOptions>,\n  TQuery extends DataQuery = DataQuery,\n  TOptions extends DataSourceJsonData = DataSourceJsonData,\n  TVQuery extends DataQuery = TQuery,\n> {\n  datasource: DSType;\n  query: TVQuery;\n  onRunQuery: () => void;\n  onChange: (value: TVQuery) => void;\n  onBlur?: () => void;\n  onAddQuery?: (query: TQuery) => void;\n  /**\n   * Contains query response filtered by refId of QueryResultBase and possible query error\n   */\n  data?: PanelData;\n  range?: TimeRange;\n  /**\n   * @deprecated This is not used anymore and will be removed in a future release.\n   */\n  exploreId?: string;\n  history?: Array<HistoryItem<TQuery>>;\n  queries?: DataQuery[];\n  app?: CoreApp;\n}\n\n// TODO: not really needed but used as type in some data sources and in DataQueryRequest\nexport enum ExploreMode {\n  Logs = 'Logs',\n  Metrics = 'Metrics',\n  Tracing = 'Tracing',\n}\n\n/**\n * @deprecated use QueryEditorProps instead\n */\nexport type ExploreQueryFieldProps<\n  DSType extends DataSourceApi<TQuery, TOptions>,\n  TQuery extends DataQuery = DataQuery,\n  TOptions extends DataSourceJsonData = DataSourceJsonData,\n> = QueryEditorProps<DSType, TQuery, TOptions>;\n\nexport interface QueryEditorHelpProps<TQuery extends DataQuery = DataQuery> {\n  datasource: DataSourceApi<TQuery>;\n  query: TQuery;\n  onClickExample: (query: TQuery) => void;\n  exploreId?: any;\n}\n\n/**\n * Starting in v6.2 DataFrame can represent both TimeSeries and TableData\n */\nexport type LegacyResponseData = TimeSeries | TableData | any;\n\nexport type DataQueryResponseData = DataFrame | DataFrameDTO | LegacyResponseData;\n\nexport interface DataQueryResponse {\n  /**\n   * The response data.  When streaming, this may be empty\n   * or a partial result set\n   */\n  data: DataQueryResponseData[];\n\n  /**\n   * When returning multiple partial responses or streams\n   * Use this key to inform Grafana how to combine the partial responses\n   * Multiple responses with same key are replaced (latest used)\n   */\n  key?: string;\n\n  /**\n   * Optionally include error info along with the response data\n   * @deprecated use errors instead -- will be removed in Grafana 10+\n   */\n  error?: DataQueryError;\n\n  /**\n   * Optionally include multiple errors for different targets\n   */\n  errors?: DataQueryError[];\n\n  /**\n   * Use this to control which state the response should have\n   * Defaults to LoadingState.Done if state is not defined\n   */\n  state?: LoadingState;\n\n  /**\n   * traceIds related to the response, if available\n   */\n  traceIds?: string[];\n}\n\nexport interface TestDataSourceResponse {\n  status: string;\n  message: string;\n  error?: Error;\n  details?: { message?: string; verboseMessage?: string };\n}\n\nexport enum DataQueryErrorType {\n  Cancelled = 'cancelled',\n  Timeout = 'timeout',\n  Unknown = 'unknown',\n}\n\nexport interface DataQueryError {\n  data?: {\n    /**\n     * Short information about the error\n     */\n    message?: string;\n    /**\n     * Detailed information about the error. Only returned when app_mode is development.\n     */\n    error?: string;\n  };\n  message?: string;\n  status?: number;\n  statusText?: string;\n  refId?: string;\n  traceId?: string;\n  type?: DataQueryErrorType;\n}\n\nexport interface DataQueryRequest<TQuery extends DataQuery = DataQuery> {\n  requestId: string; // Used to identify results and optionally cancel the request in backendSrv\n\n  interval: string;\n  intervalMs: number;\n  maxDataPoints?: number;\n  range: TimeRange;\n  scopedVars: ScopedVars;\n  targets: TQuery[];\n  timezone: string;\n  app: CoreApp | string;\n\n  cacheTimeout?: string | null;\n  queryCachingTTL?: number | null;\n  skipQueryCache?: boolean;\n  rangeRaw?: RawTimeRange;\n  timeInfo?: string; // The query time description (blue text in the upper right)\n  panelId?: number;\n  dashboardUID?: string;\n\n  /** Filters to dynamically apply to all queries */\n  filters?: AdHocVariableFilter[];\n\n  // Request Timing\n  startTime: number;\n  endTime?: number;\n\n  // Explore state used by various datasources\n  liveStreaming?: boolean;\n\n  // Make it possible to hide support queries from the inspector\n  hideFromInspector?: boolean;\n\n  // Used to correlate multiple related requests\n  queryGroupId?: string;\n}\n\nexport interface DataQueryTimings {\n  dataProcessingTime: number;\n}\n\nexport interface QueryFix {\n  title?: string;\n  label: string;\n  action?: QueryFixAction;\n}\n\nexport type QueryFixType = 'ADD_FILTER' | 'ADD_FILTER_OUT' | 'ADD_STRING_FILTER' | 'ADD_STRING_FILTER_OUT';\nexport interface QueryFixAction {\n  query?: string;\n  preventSubmit?: boolean;\n  /**\n   * The type of action to perform. Will be passed to the data source to handle.\n   */\n  type: QueryFixType | string;\n  /**\n   * A key value map of options that will be passed. Usually used to pass e.g. the label and value.\n   */\n  options?: KeyValue<string>;\n  /**\n   * An optional single row data frame containing the row that triggered the the QueryFixAction.\n   */\n  frame?: DataFrame;\n}\n\nexport interface QueryHint {\n  type: string;\n  label: string;\n  fix?: QueryFix;\n}\n\nexport interface MetricFindValue {\n  text: string;\n  value?: string | number;\n  expandable?: boolean;\n}\n\nexport interface DataSourceJsonData {\n  authType?: string;\n  defaultRegion?: string;\n  profile?: string;\n  manageAlerts?: boolean;\n  alertmanagerUid?: string;\n}\n\n/**\n * Data Source instance edit model.  This is returned from:\n *  /api/datasources\n */\nexport interface DataSourceSettings<T extends DataSourceJsonData = DataSourceJsonData, S = {}>\n  extends WithAccessControlMetadata {\n  id: number;\n  uid: string;\n  orgId: number;\n  name: string;\n  typeLogoUrl: string;\n  type: string;\n  typeName: string;\n  access: string;\n  url: string;\n  user: string;\n  /**\n   *  @deprecated -- use jsonData to store information related to database.\n   *  This field should only be used by Elasticsearch and Influxdb.\n   */\n  database: string;\n  basicAuth: boolean;\n  basicAuthUser: string;\n  isDefault: boolean;\n  jsonData: T;\n  secureJsonData?: S;\n  secureJsonFields: KeyValue<boolean>;\n  readOnly: boolean;\n  withCredentials: boolean;\n  version?: number;\n}\n\n/**\n * Frontend settings model that is passed to Datasource constructor. This differs a bit from the model above\n * as this data model is available to every user who has access to a data source (Viewers+).  This is loaded\n * in bootData (on page load), or from: /api/frontend/settings\n */\nexport interface DataSourceInstanceSettings<T extends DataSourceJsonData = DataSourceJsonData> {\n  id: number;\n  uid: string;\n  type: string;\n  name: string;\n  meta: DataSourcePluginMeta;\n  cachingConfig?: PluginQueryCachingConfig;\n  readOnly: boolean;\n  url?: string;\n  jsonData: T;\n  username?: string;\n  password?: string; // when access is direct, for some legacy datasources\n  /**\n   *  @deprecated -- use jsonData to store information related to database.\n   *  This field should only be used by Elasticsearch and Influxdb.\n   */\n  database?: string;\n  isDefault?: boolean;\n  access: 'direct' | 'proxy'; // Currently we support 2 options - direct (browser) and proxy (server)\n\n  /**\n   * This is the full Authorization header if basic auth is enabled.\n   * Only available here when access is Browser (direct), when access is Server (proxy)\n   * The basic auth header, username & password is never exposed to browser/Frontend\n   * so this will be empty then.\n   */\n  basicAuth?: string;\n  withCredentials?: boolean;\n\n  /** When the name+uid are based on template variables, maintain access to the real values */\n  rawRef?: DataSourceRef;\n}\n\n/**\n * @deprecated -- use {@link DataSourceInstanceSettings} instead\n */\nexport interface DataSourceSelectItem {\n  name: string;\n  value: string | null;\n  meta: DataSourcePluginMeta;\n}\n\n/**\n * Options passed to the datasource.annotationQuery method. See docs/plugins/developing/datasource.md\n *\n * @deprecated -- use {@link AnnotationSupport}\n */\nexport interface AnnotationQueryRequest<MoreOptions = {}> {\n  range: TimeRange;\n  rangeRaw: RawTimeRange;\n  // Should be DataModel but cannot import that here from the main app. Needs to be moved to package first.\n  dashboard: any;\n  annotation: AnnotationQuery;\n}\n\nexport interface HistoryItem<TQuery extends DataQuery = DataQuery> {\n  ts: number;\n  query: TQuery;\n}\n\nabstract class LanguageProvider {\n  abstract datasource: DataSourceApi<any, any>;\n  abstract request: (url: string, params?: any) => Promise<any>;\n\n  /**\n   * Returns startTask that resolves with a task list when main syntax is loaded.\n   * Task list consists of secondary promises that load more detailed language features.\n   */\n  abstract start: (timeRange?: TimeRange) => Promise<Array<Promise<any>>>;\n  startTask?: Promise<any[]>;\n}\n\n//@ts-ignore\nLanguageProvider = makeClassES5Compatible(LanguageProvider);\nexport { LanguageProvider };\n\n//@ts-ignore\nDataSourceApi = makeClassES5Compatible(DataSourceApi);\n\nexport { DataSourceApi };\n","import { ComponentType } from 'react';\n\nimport { KeyValue } from './data';\nimport { IconName } from './icon';\n\n/** Describes plugins life cycle status */\nexport enum PluginState {\n  alpha = 'alpha', // Only included if `enable_alpha` config option is true\n  beta = 'beta', // Will show a warning banner\n  stable = 'stable', // Will not show anything\n  deprecated = 'deprecated', // Will continue to work -- but not show up in the options to add\n}\n\n/** Describes {@link https://grafana.com/docs/grafana/latest/plugins | type of plugin} */\nexport enum PluginType {\n  panel = 'panel',\n  datasource = 'datasource',\n  app = 'app',\n  renderer = 'renderer',\n  secretsmanager = 'secretsmanager',\n}\n\n/** Describes status of {@link https://grafana.com/docs/grafana/latest/plugins/plugin-signatures/ | plugin signature} */\nexport enum PluginSignatureStatus {\n  internal = 'internal', // core plugin, no signature\n  valid = 'valid', // signed and accurate MANIFEST\n  invalid = 'invalid', // invalid signature\n  modified = 'modified', // valid signature, but content mismatch\n  missing = 'missing', // missing signature file\n}\n\n/** Describes level of {@link https://grafana.com/docs/grafana/latest/plugins/plugin-signatures/#plugin-signature-levels/ | plugin signature level} */\nexport enum PluginSignatureType {\n  grafana = 'grafana',\n  commercial = 'commercial',\n  community = 'community',\n  private = 'private',\n  core = 'core',\n}\n\n/** Describes error code returned from Grafana plugins API call */\nexport enum PluginErrorCode {\n  missingSignature = 'signatureMissing',\n  invalidSignature = 'signatureInvalid',\n  modifiedSignature = 'signatureModified',\n}\n\n/** Describes error returned from Grafana plugins API call */\nexport interface PluginError {\n  errorCode: PluginErrorCode;\n  pluginId: string;\n  pluginType?: PluginType;\n}\n\nexport interface AngularMeta {\n  detected: boolean;\n  hideDeprecation: boolean;\n}\n\nexport interface PluginMeta<T extends KeyValue = {}> {\n  id: string;\n  name: string;\n  type: PluginType;\n  info: PluginMetaInfo;\n  includes?: PluginInclude[];\n  state?: PluginState;\n  aliasIDs?: string[];\n\n  // System.load & relative URLS\n  module: string;\n  baseUrl: string;\n\n  // Define plugin requirements\n  dependencies?: PluginDependencies;\n\n  // Filled in by the backend\n  jsonData?: T;\n  secureJsonData?: KeyValue;\n  secureJsonFields?: KeyValue<boolean>;\n  enabled?: boolean;\n  defaultNavUrl?: string;\n  hasUpdate?: boolean;\n  enterprise?: boolean;\n  latestVersion?: string;\n  pinned?: boolean;\n  signature?: PluginSignatureStatus;\n  signatureType?: PluginSignatureType;\n  signatureOrg?: string;\n  live?: boolean;\n  angular?: AngularMeta;\n}\n\ninterface PluginDependencyInfo {\n  id: string;\n  name: string;\n  version: string;\n  type: PluginType;\n}\n\nexport interface PluginDependencies {\n  grafanaDependency?: string;\n  grafanaVersion: string;\n  plugins: PluginDependencyInfo[];\n}\n\nexport enum PluginIncludeType {\n  dashboard = 'dashboard',\n  page = 'page',\n\n  // Only valid for apps\n  panel = 'panel',\n  datasource = 'datasource',\n}\n\nexport interface PluginInclude {\n  type: PluginIncludeType;\n  name: string;\n  path?: string;\n  icon?: string;\n\n  // \"Admin\", \"Editor\" or \"Viewer\". If set then the include will only show up in the navigation if the user has the required roles.\n  role?: string;\n\n  // Adds the \"page\" or \"dashboard\" type includes to the navigation if set to `true`.\n  addToNav?: boolean;\n\n  // Angular app pages\n  component?: string;\n}\n\ninterface PluginMetaInfoLink {\n  name: string;\n  url: string;\n  target?: '_blank' | '_self' | '_parent' | '_top';\n}\n\nexport interface PluginBuildInfo {\n  time?: number;\n  repo?: string;\n  branch?: string;\n  hash?: string;\n  number?: number;\n  pr?: number;\n}\n\nexport interface ScreenshotInfo {\n  name: string;\n  path: string;\n}\n\nexport interface PluginMetaInfo {\n  author: {\n    name: string;\n    url?: string;\n  };\n  description: string;\n  links: PluginMetaInfoLink[];\n  logos: {\n    large: string;\n    small: string;\n  };\n  build?: PluginBuildInfo;\n  screenshots: ScreenshotInfo[];\n  updated: string;\n  version: string;\n}\n\nexport interface PluginConfigPageProps<T extends PluginMeta> {\n  plugin: GrafanaPlugin<T>;\n  query: KeyValue; // The URL query parameters\n}\n\nexport interface PluginConfigPage<T extends PluginMeta> {\n  title: string; // Display\n  icon?: IconName;\n  id: string; // Unique, in URL\n\n  body: ComponentType<PluginConfigPageProps<T>>;\n}\n\nexport class GrafanaPlugin<T extends PluginMeta = PluginMeta> {\n  // Meta is filled in by the plugin loading system\n  meta: T;\n\n  // This is set if the plugin system had errors loading the plugin\n  loadError?: boolean;\n\n  // Config control (app/datasource)\n  angularConfigCtrl?: any;\n\n  // Show configuration tabs on the plugin page\n  configPages?: Array<PluginConfigPage<T>>;\n\n  // Tabs on the plugin page\n  addConfigPage(tab: PluginConfigPage<T>) {\n    if (!this.configPages) {\n      this.configPages = [];\n    }\n    this.configPages.push(tab);\n    return this;\n  }\n\n  /**\n   * @deprecated -- this is no longer necessary and will be removed\n   */\n  setChannelSupport() {\n    console.warn('[deprecation] plugin is using ignored option: setChannelSupport', this.meta);\n    return this;\n  }\n\n  constructor() {\n    this.meta = {} as T;\n  }\n}\n","import { css, CSSObject, cx } from '@emotion/css';\nimport React, { AnchorHTMLAttributes, ButtonHTMLAttributes } from 'react';\n\nimport { GrafanaTheme2, ThemeRichColor } from '@grafana/data';\n\nimport { useTheme2 } from '../../themes';\nimport { getFocusStyles, getMouseFocusStyles } from '../../themes/mixins';\nimport { ComponentSize } from '../../types';\nimport { IconName } from '../../types/icon';\nimport { getPropertiesForButtonSize } from '../Forms/commonStyles';\nimport { Icon } from '../Icon/Icon';\nimport { PopoverContent, Tooltip, TooltipPlacement } from '../Tooltip';\n\nexport type ButtonVariant = 'primary' | 'secondary' | 'destructive' | 'success';\nexport const allButtonVariants: ButtonVariant[] = ['primary', 'secondary', 'destructive'];\nexport type ButtonFill = 'solid' | 'outline' | 'text';\nexport const allButtonFills: ButtonFill[] = ['solid', 'outline', 'text'];\n\ntype CommonProps = {\n  size?: ComponentSize;\n  variant?: ButtonVariant;\n  fill?: ButtonFill;\n  icon?: IconName;\n  className?: string;\n  children?: React.ReactNode;\n  fullWidth?: boolean;\n  type?: string;\n  /** Tooltip content to display on hover */\n  tooltip?: PopoverContent;\n  /** Position of the tooltip */\n  tooltipPlacement?: TooltipPlacement;\n};\n\nexport type ButtonProps = CommonProps & ButtonHTMLAttributes<HTMLButtonElement>;\n\nexport const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      variant = 'primary',\n      size = 'md',\n      fill = 'solid',\n      icon,\n      fullWidth,\n      children,\n      className,\n      type = 'button',\n      tooltip,\n      tooltipPlacement,\n      ...otherProps\n    },\n    ref\n  ) => {\n    const theme = useTheme2();\n    const styles = getButtonStyles({\n      theme,\n      size,\n      variant,\n      fill,\n      fullWidth,\n      iconOnly: !children,\n    });\n\n    // In order to standardise Button please always consider using IconButton when you need a button with an icon only\n    // When using tooltip, ref is forwarded to Tooltip component instead for https://github.com/grafana/grafana/issues/65632\n    const button = (\n      <button className={cx(styles.button, className)} type={type} {...otherProps} ref={tooltip ? undefined : ref}>\n        {icon && <Icon name={icon} size={size} className={styles.icon} />}\n        {children && <span className={styles.content}>{children}</span>}\n      </button>\n    );\n\n    if (tooltip) {\n      return (\n        <Tooltip ref={ref} content={tooltip} placement={tooltipPlacement}>\n          {button}\n        </Tooltip>\n      );\n    }\n\n    return button;\n  }\n);\n\nButton.displayName = 'Button';\n\nexport type ButtonLinkProps = CommonProps &\n  ButtonHTMLAttributes<HTMLButtonElement> &\n  AnchorHTMLAttributes<HTMLAnchorElement>;\n\nexport const LinkButton = React.forwardRef<HTMLAnchorElement, ButtonLinkProps>(\n  (\n    {\n      variant = 'primary',\n      size = 'md',\n      fill = 'solid',\n      icon,\n      fullWidth,\n      children,\n      className,\n      onBlur,\n      onFocus,\n      disabled,\n      tooltip,\n      tooltipPlacement,\n      ...otherProps\n    },\n    ref\n  ) => {\n    const theme = useTheme2();\n    const styles = getButtonStyles({\n      theme,\n      fullWidth,\n      size,\n      variant,\n      fill,\n      iconOnly: !children,\n    });\n\n    const linkButtonStyles = cx(\n      styles.button,\n      {\n        [css(styles.disabled, {\n          pointerEvents: 'none',\n        })]: disabled,\n      },\n      className\n    );\n\n    // When using tooltip, ref is forwarded to Tooltip component instead for https://github.com/grafana/grafana/issues/65632\n    const button = (\n      <a\n        className={linkButtonStyles}\n        {...otherProps}\n        tabIndex={disabled ? -1 : 0}\n        aria-disabled={disabled}\n        ref={tooltip ? undefined : ref}\n      >\n        {icon && <Icon name={icon} size={size} className={styles.icon} />}\n        {children && <span className={styles.content}>{children}</span>}\n      </a>\n    );\n\n    if (tooltip) {\n      return (\n        <Tooltip ref={ref} content={tooltip} placement={tooltipPlacement}>\n          {button}\n        </Tooltip>\n      );\n    }\n\n    return button;\n  }\n);\n\nLinkButton.displayName = 'LinkButton';\n\nexport interface StyleProps {\n  size: ComponentSize;\n  variant: ButtonVariant;\n  fill?: ButtonFill;\n  iconOnly?: boolean;\n  theme: GrafanaTheme2;\n  fullWidth?: boolean;\n  narrow?: boolean;\n}\n\nexport const getButtonStyles = (props: StyleProps) => {\n  const { theme, variant, fill = 'solid', size, iconOnly, fullWidth } = props;\n  const { height, padding, fontSize } = getPropertiesForButtonSize(size, theme);\n  const variantStyles = getPropertiesForVariant(theme, variant, fill);\n  const disabledStyles = getPropertiesForDisabled(theme, variant, fill);\n  const focusStyle = getFocusStyles(theme);\n  const paddingMinusBorder = theme.spacing.gridSize * padding - 1;\n\n  return {\n    button: css({\n      label: 'button',\n      display: 'inline-flex',\n      alignItems: 'center',\n      fontSize: fontSize,\n      fontWeight: theme.typography.fontWeightMedium,\n      fontFamily: theme.typography.fontFamily,\n      padding: `0 ${paddingMinusBorder}px`,\n      height: theme.spacing(height),\n      // Deduct border from line-height for perfect vertical centering on windows and linux\n      lineHeight: `${theme.spacing.gridSize * height - 2}px`,\n      verticalAlign: 'middle',\n      cursor: 'pointer',\n      borderRadius: theme.shape.radius.default,\n      '&:focus': focusStyle,\n      '&:focus-visible': focusStyle,\n      '&:focus:not(:focus-visible)': getMouseFocusStyles(theme),\n      ...(fullWidth && {\n        flexGrow: 1,\n        justifyContent: 'center',\n      }),\n      ...variantStyles,\n      ':disabled': disabledStyles,\n      '&[disabled]': disabledStyles,\n    }),\n    disabled: css(disabledStyles),\n    img: css({\n      width: '16px',\n      height: '16px',\n      margin: theme.spacing(0, 1, 0, 0.5),\n    }),\n    icon: iconOnly\n      ? css({\n          // Important not to set margin bottom here as it would override internal icon bottom margin\n          marginRight: theme.spacing(-padding / 2),\n          marginLeft: theme.spacing(-padding / 2),\n        })\n      : css({\n          marginRight: theme.spacing(padding / 2),\n        }),\n    content: css({\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      height: '100%',\n    }),\n  };\n};\n\nfunction getButtonVariantStyles(theme: GrafanaTheme2, color: ThemeRichColor, fill: ButtonFill): CSSObject {\n  let outlineBorderColor = color.border;\n  let borderColor = 'transparent';\n  let hoverBorderColor = 'transparent';\n\n  // Secondary button has some special rules as we lack theem color token to\n  // specify border color for normal button vs border color for outline button\n  if (color.name === 'secondary') {\n    borderColor = color.border;\n    hoverBorderColor = theme.colors.emphasize(color.border, 0.25);\n    outlineBorderColor = theme.colors.border.strong;\n  }\n\n  if (fill === 'outline') {\n    return {\n      background: 'transparent',\n      color: color.text,\n      border: `1px solid ${outlineBorderColor}`,\n      transition: theme.transitions.create(['background-color', 'border-color', 'color'], {\n        duration: theme.transitions.duration.short,\n      }),\n\n      '&:hover': {\n        background: color.transparent,\n        borderColor: theme.colors.emphasize(outlineBorderColor, 0.25),\n        color: color.text,\n      },\n    };\n  }\n\n  if (fill === 'text') {\n    return {\n      background: 'transparent',\n      color: color.text,\n      border: '1px solid transparent',\n      transition: theme.transitions.create(['background-color', 'color'], {\n        duration: theme.transitions.duration.short,\n      }),\n\n      '&:focus': {\n        outline: 'none',\n        textDecoration: 'none',\n      },\n\n      '&:hover': {\n        background: color.transparent,\n        textDecoration: 'none',\n      },\n    };\n  }\n\n  return {\n    background: color.main,\n    color: color.contrastText,\n    border: `1px solid ${borderColor}`,\n    transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color', 'color'], {\n      duration: theme.transitions.duration.short,\n    }),\n\n    '&:hover': {\n      background: color.shade,\n      color: color.contrastText,\n      boxShadow: theme.shadows.z1,\n      borderColor: hoverBorderColor,\n    },\n  };\n}\n\nfunction getPropertiesForDisabled(theme: GrafanaTheme2, variant: ButtonVariant, fill: ButtonFill) {\n  const disabledStyles: CSSObject = {\n    cursor: 'not-allowed',\n    boxShadow: 'none',\n    color: theme.colors.text.disabled,\n    transition: 'none',\n  };\n\n  if (fill === 'text') {\n    return {\n      ...disabledStyles,\n      background: 'transparent',\n      border: `1px solid transparent`,\n    };\n  }\n\n  if (fill === 'outline') {\n    return {\n      ...disabledStyles,\n      background: 'transparent',\n      border: `1px solid ${theme.colors.border.weak}`,\n    };\n  }\n\n  return {\n    ...disabledStyles,\n    background: theme.colors.action.disabledBackground,\n    border: `1px solid transparent`,\n  };\n}\n\nexport function getPropertiesForVariant(theme: GrafanaTheme2, variant: ButtonVariant, fill: ButtonFill) {\n  switch (variant) {\n    case 'secondary':\n      // The seconday button has some special handling as it's outline border is it's default color border\n      return getButtonVariantStyles(theme, theme.colors.secondary, fill);\n\n    case 'destructive':\n      return getButtonVariantStyles(theme, theme.colors.error, fill);\n\n    case 'success':\n      return getButtonVariantStyles(theme, theme.colors.success, fill);\n\n    case 'primary':\n    default:\n      return getButtonVariantStyles(theme, theme.colors.primary, fill);\n  }\n}\n\nexport const clearButtonStyles = (theme: GrafanaTheme2) => {\n  return css({\n    background: 'transparent',\n    color: theme.colors.text.primary,\n    border: 'none',\n    padding: 0,\n  });\n};\n\nexport const clearLinkButtonStyles = (theme: GrafanaTheme2) => {\n  return css({\n    background: 'transparent',\n    border: 'none',\n    padding: 0,\n    fontFamily: 'inherit',\n    color: 'inherit',\n    height: '100%',\n    '&:hover': {\n      background: 'transparent',\n      color: 'inherit',\n    },\n  });\n};\n","import { css, cx } from '@emotion/css';\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\n\nexport const ScrollIndicators = ({ children }: React.PropsWithChildren<{}>) => {\n  const [showScrollTopIndicator, setShowTopScrollIndicator] = useState(false);\n  const [showScrollBottomIndicator, setShowBottomScrollIndicator] = useState(false);\n  const scrollTopMarker = useRef<HTMLDivElement>(null);\n  const scrollBottomMarker = useRef<HTMLDivElement>(null);\n  const styles = useStyles2(getStyles);\n\n  // Here we observe the top and bottom markers to determine if we should show the scroll indicators\n  useEffect(() => {\n    const intersectionObserver = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.target === scrollTopMarker.current) {\n          setShowTopScrollIndicator(!entry.isIntersecting);\n        } else if (entry.target === scrollBottomMarker.current) {\n          setShowBottomScrollIndicator(!entry.isIntersecting);\n        }\n      });\n    });\n    [scrollTopMarker, scrollBottomMarker].forEach((ref) => {\n      if (ref.current) {\n        intersectionObserver.observe(ref.current);\n      }\n    });\n    return () => intersectionObserver.disconnect();\n  }, []);\n\n  return (\n    <>\n      <div\n        className={cx(styles.scrollIndicator, styles.scrollTopIndicator, {\n          [styles.scrollIndicatorVisible]: showScrollTopIndicator,\n        })}\n      />\n      <div className={styles.scrollContent}>\n        <div ref={scrollTopMarker} />\n        {children}\n        <div ref={scrollBottomMarker} />\n      </div>\n      <div\n        className={cx(styles.scrollIndicator, styles.scrollBottomIndicator, {\n          [styles.scrollIndicatorVisible]: showScrollBottomIndicator,\n        })}\n      />\n    </>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    scrollContent: css({\n      flex: 1,\n      position: 'relative',\n    }),\n    scrollIndicator: css({\n      height: theme.spacing(6),\n      left: 0,\n      opacity: 0,\n      pointerEvents: 'none',\n      position: 'absolute',\n      right: 0,\n      transition: theme.transitions.create('opacity'),\n      zIndex: 1,\n    }),\n    scrollTopIndicator: css({\n      background: `linear-gradient(0deg, transparent, ${theme.colors.background.canvas})`,\n      top: 0,\n    }),\n    scrollBottomIndicator: css({\n      background: `linear-gradient(180deg, transparent, ${theme.colors.background.canvas})`,\n      bottom: 0,\n    }),\n    scrollIndicatorVisible: css({\n      opacity: 1,\n    }),\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport React, { RefCallback, useCallback, useEffect, useRef } from 'react';\nimport Scrollbars, { positionValues } from 'react-custom-scrollbars-2';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\n\nimport { ScrollIndicators } from './ScrollIndicators';\n\nexport type ScrollbarPosition = positionValues;\n\ninterface Props {\n  className?: string;\n  testId?: string;\n  autoHide?: boolean;\n  autoHideTimeout?: number;\n  autoHeightMax?: string;\n  hideTracksWhenNotNeeded?: boolean;\n  hideHorizontalTrack?: boolean;\n  hideVerticalTrack?: boolean;\n  scrollRefCallback?: RefCallback<HTMLDivElement>;\n  scrollTop?: number;\n  setScrollTop?: (position: ScrollbarPosition) => void;\n  showScrollIndicators?: boolean;\n  autoHeightMin?: number | string;\n  updateAfterMountMs?: number;\n  onScroll?: React.UIEventHandler;\n}\n\n/**\n * Wraps component into <Scrollbars> component from `react-custom-scrollbars`\n */\nexport const CustomScrollbar = ({\n  autoHide = false,\n  autoHideTimeout = 200,\n  setScrollTop,\n  className,\n  testId,\n  autoHeightMin = '0',\n  autoHeightMax = '100%',\n  hideTracksWhenNotNeeded = false,\n  hideHorizontalTrack,\n  hideVerticalTrack,\n  scrollRefCallback,\n  showScrollIndicators = false,\n  updateAfterMountMs,\n  scrollTop,\n  onScroll,\n  children,\n}: React.PropsWithChildren<Props>) => {\n  const ref = useRef<Scrollbars & { view: HTMLDivElement; update: () => void }>(null);\n  const styles = useStyles2(getStyles);\n\n  useEffect(() => {\n    if (ref.current && scrollRefCallback) {\n      scrollRefCallback(ref.current.view);\n    }\n  }, [ref, scrollRefCallback]);\n\n  useEffect(() => {\n    if (ref.current && scrollTop != null) {\n      ref.current.scrollTop(scrollTop);\n    }\n  }, [scrollTop]);\n\n  /**\n   * Special logic for doing a update a few milliseconds after mount to check for\n   * updated height due to dynamic content\n   */\n  useEffect(() => {\n    if (!updateAfterMountMs) {\n      return;\n    }\n    setTimeout(() => {\n      const scrollbar = ref.current;\n      if (scrollbar?.update) {\n        scrollbar.update();\n      }\n    }, updateAfterMountMs);\n  }, [updateAfterMountMs]);\n\n  function renderTrack(className: string, hideTrack: boolean | undefined, passedProps: JSX.IntrinsicElements['div']) {\n    if (passedProps.style && hideTrack) {\n      passedProps.style.display = 'none';\n    }\n\n    return <div {...passedProps} className={className} />;\n  }\n\n  const renderTrackHorizontal = useCallback(\n    (passedProps: JSX.IntrinsicElements['div']) => {\n      return renderTrack('track-horizontal', hideHorizontalTrack, passedProps);\n    },\n    [hideHorizontalTrack]\n  );\n\n  const renderTrackVertical = useCallback(\n    (passedProps: JSX.IntrinsicElements['div']) => {\n      return renderTrack('track-vertical', hideVerticalTrack, passedProps);\n    },\n    [hideVerticalTrack]\n  );\n\n  const renderThumbHorizontal = useCallback((passedProps: JSX.IntrinsicElements['div']) => {\n    return <div {...passedProps} className=\"thumb-horizontal\" />;\n  }, []);\n\n  const renderThumbVertical = useCallback((passedProps: JSX.IntrinsicElements['div']) => {\n    return <div {...passedProps} className=\"thumb-vertical\" />;\n  }, []);\n\n  const renderView = useCallback((passedProps: JSX.IntrinsicElements['div']) => {\n    // fixes issues of visibility on safari and ios devices\n    if (passedProps.style && passedProps.style['WebkitOverflowScrolling'] === 'touch') {\n      passedProps.style['WebkitOverflowScrolling'] = 'auto';\n    }\n\n    return <div {...passedProps} className=\"scrollbar-view\" />;\n  }, []);\n\n  const onScrollStop = useCallback(() => {\n    ref.current && setScrollTop && setScrollTop(ref.current.getValues());\n  }, [setScrollTop]);\n\n  return (\n    <Scrollbars\n      data-testid={testId}\n      ref={ref}\n      className={cx(styles.customScrollbar, className, {\n        [styles.scrollbarWithScrollIndicators]: showScrollIndicators,\n      })}\n      onScrollStop={onScrollStop}\n      autoHeight={true}\n      autoHide={autoHide}\n      autoHideTimeout={autoHideTimeout}\n      hideTracksWhenNotNeeded={hideTracksWhenNotNeeded}\n      // These autoHeightMin & autoHeightMax options affect firefox and chrome differently.\n      // Before these where set to inherit but that caused problems with cut of legends in firefox\n      autoHeightMax={autoHeightMax}\n      autoHeightMin={autoHeightMin}\n      renderTrackHorizontal={renderTrackHorizontal}\n      renderTrackVertical={renderTrackVertical}\n      renderThumbHorizontal={renderThumbHorizontal}\n      renderThumbVertical={renderThumbVertical}\n      renderView={renderView}\n      onScroll={onScroll}\n    >\n      {showScrollIndicators ? <ScrollIndicators>{children}</ScrollIndicators> : children}\n    </Scrollbars>\n  );\n};\n\nexport default CustomScrollbar;\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    customScrollbar: css({\n      // Fix for Firefox. For some reason sometimes .view container gets a height of its content, but in order to\n      // make scroll working it should fit outer container size (scroll appears only when inner container size is\n      // greater than outer one).\n      display: 'flex',\n      flexGrow: 1,\n      '.scrollbar-view': {\n        display: 'flex',\n        flexGrow: 1,\n        flexDirection: 'column',\n      },\n      '.track-vertical': {\n        borderRadius: theme.shape.borderRadius(2),\n        width: `${theme.spacing(1)} !important`,\n        right: 0,\n        bottom: theme.spacing(0.25),\n        top: theme.spacing(0.25),\n      },\n      '.track-horizontal': {\n        borderRadius: theme.shape.borderRadius(2),\n        height: `${theme.spacing(1)} !important`,\n        right: theme.spacing(0.25),\n        bottom: theme.spacing(0.25),\n        left: theme.spacing(0.25),\n      },\n      '.thumb-vertical': {\n        background: theme.colors.action.focus,\n        borderRadius: theme.shape.borderRadius(2),\n        opacity: 0,\n      },\n      '.thumb-horizontal': {\n        background: theme.colors.action.focus,\n        borderRadius: theme.shape.borderRadius(2),\n        opacity: 0,\n      },\n      '&:hover': {\n        '.thumb-vertical, .thumb-horizontal': {\n          opacity: 1,\n          transition: 'opacity 0.3s ease-in-out',\n        },\n      },\n    }),\n    // override the scroll container position so that the scroll indicators\n    // are positioned at the top and bottom correctly.\n    // react-custom-scrollbars doesn't provide any way for us to hook in nicely,\n    // so we have to override with !important. feelsbad.\n    scrollbarWithScrollIndicators: css({\n      '.scrollbar-view': {\n        // Need type assertion here due to the use of !important\n        // see https://github.com/frenic/csstype/issues/114#issuecomment-697201978\n        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n        position: 'static !important' as 'static',\n      },\n    }),\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { Icon } from '../Icon/Icon';\n\nexport interface FieldValidationMessageProps {\n  /** Override component style */\n  className?: string;\n  horizontal?: boolean;\n}\n\nexport const FieldValidationMessage = ({\n  children,\n  horizontal,\n  className,\n}: React.PropsWithChildren<FieldValidationMessageProps>) => {\n  const styles = useStyles2(getFieldValidationMessageStyles);\n  const cssName = cx(horizontal ? styles.horizontal : styles.vertical, className);\n\n  return (\n    <div role=\"alert\" className={cssName}>\n      <Icon className={styles.fieldValidationMessageIcon} name=\"exclamation-triangle\" />\n      {children}\n    </div>\n  );\n};\n\nexport const getFieldValidationMessageStyles = (theme: GrafanaTheme2) => {\n  const baseStyle = `\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.fontWeightMedium};\n      padding: ${theme.spacing(0.5, 1)};\n      color: ${theme.colors.error.contrastText};\n      background: ${theme.colors.error.main};\n      border-radius: ${theme.shape.radius.default};\n      position: relative;\n      display: inline-block;\n      align-self: flex-start;\n\n      a {\n        color: ${theme.colors.error.contrastText};\n        text-decoration: underline;\n      }\n\n      a:hover {\n        text-decoration: none;\n      }\n    `;\n\n  return {\n    vertical: css(baseStyle, {\n      margin: theme.spacing(0.5, 0, 0, 0),\n\n      '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        left: '9px',\n        top: '-5px',\n        width: 0,\n        height: 0,\n        borderWidth: '0 4px 5px 4px',\n        borderColor: `transparent transparent ${theme.colors.error.main} transparent`,\n        borderStyle: 'solid',\n      },\n    }),\n    horizontal: css(baseStyle, {\n      marginLeft: '10px',\n\n      '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        left: '-5px',\n        top: '9px',\n        width: 0,\n        height: 0,\n        borderWidth: '4px 5px 4px 0',\n        borderColor: 'transparent #e02f44 transparent transparent',\n        borderStyle: 'solid',\n      },\n    }),\n    fieldValidationMessageIcon: css({\n      marginRight: theme.spacing(),\n    }),\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { Icon } from '../Icon/Icon';\nimport { PopoverContent, Tooltip } from '../Tooltip';\n\nimport { LabelProps } from './Label';\n\nexport interface Props extends Omit<LabelProps, 'css' | 'description' | 'category'> {\n  /** Content for the labels tooltip. If provided, an info icon with the tooltip content\n   * will be displayed */\n  tooltip?: PopoverContent;\n  /** Custom width for the label */\n  width?: number | 'auto';\n  /** Make labels's background transparent */\n  transparent?: boolean;\n  /** Make tooltip interactive */\n  interactive?: boolean;\n  /** @beta */\n  /** Controls which element the InlineLabel should be rendered into */\n  as?: React.ElementType;\n}\n\nexport const InlineLabel = ({\n  children,\n  className,\n  tooltip,\n  width,\n  transparent,\n  interactive,\n  as: Component = 'label',\n  ...rest\n}: Props) => {\n  const styles = useStyles2(getInlineLabelStyles, transparent, width);\n\n  return (\n    <Component className={cx(styles.label, className)} {...rest}>\n      {children}\n      {tooltip && (\n        <Tooltip interactive={interactive} placement=\"top\" content={tooltip} theme=\"info\">\n          <Icon tabIndex={0} name=\"info-circle\" size=\"sm\" className={styles.icon} />\n        </Tooltip>\n      )}\n    </Component>\n  );\n};\n\nexport const getInlineLabelStyles = (theme: GrafanaTheme2, transparent = false, width?: number | 'auto') => {\n  return {\n    label: css({\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      flexShrink: 0,\n      padding: theme.spacing(0, 1),\n      fontWeight: theme.typography.fontWeightMedium,\n      fontSize: theme.typography.size.sm,\n      backgroundColor: transparent ? 'transparent' : theme.colors.background.secondary,\n      height: theme.spacing(theme.components.height.md),\n      lineHeight: theme.spacing(theme.components.height.md),\n      marginRight: theme.spacing(0.5),\n      borderRadius: theme.shape.radius.default,\n      border: 'none',\n      width: width ? (width !== 'auto' ? `${8 * width}px` : width) : '100%',\n      color: theme.colors.text.primary,\n    }),\n    icon: css({\n      color: theme.colors.text.secondary,\n      marginLeft: '10px',\n\n      ':hover': {\n        color: theme.colors.text.primary,\n      },\n    }),\n  };\n};\n","import { cx, css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useTheme2 } from '../../themes';\nimport { getChildId } from '../../utils/reactUtils';\nimport { PopoverContent } from '../Tooltip';\n\nimport { FieldProps } from './Field';\nimport { FieldValidationMessage } from './FieldValidationMessage';\nimport { InlineLabel } from './InlineLabel';\n\nexport interface Props extends Omit<FieldProps, 'css' | 'horizontal' | 'description' | 'error'> {\n  /** Content for the label's tooltip */\n  tooltip?: PopoverContent;\n  /** Custom width for the label as a multiple of 8px */\n  labelWidth?: number | 'auto';\n  /** Make the field's child to fill the width of the row. Equivalent to setting `flex-grow:1` on the field */\n  grow?: boolean;\n  /** Make the field's child shrink with width of the row. Equivalent to setting `flex-shrink:1` on the field */\n  shrink?: boolean;\n  /** Make field's background transparent */\n  transparent?: boolean;\n  /** Error message to display */\n  error?: string | null;\n  htmlFor?: string;\n  /** Make tooltip interactive */\n  interactive?: boolean;\n}\n\nexport const InlineField = ({\n  children,\n  label,\n  tooltip,\n  labelWidth = 'auto',\n  invalid,\n  loading,\n  disabled,\n  required,\n  className,\n  htmlFor,\n  grow,\n  shrink,\n  error,\n  transparent,\n  interactive,\n  ...htmlProps\n}: Props) => {\n  const theme = useTheme2();\n  const styles = getStyles(theme, grow, shrink);\n  const inputId = htmlFor ?? getChildId(children);\n\n  const labelElement =\n    typeof label === 'string' ? (\n      <InlineLabel\n        interactive={interactive}\n        width={labelWidth}\n        tooltip={tooltip}\n        htmlFor={inputId}\n        transparent={transparent}\n      >\n        {`${label}${required ? ' *' : ''}`}\n      </InlineLabel>\n    ) : (\n      label\n    );\n\n  return (\n    <div className={cx(styles.container, className)} {...htmlProps}>\n      {labelElement}\n      <div className={styles.childContainer}>\n        {React.cloneElement(children, { invalid, disabled, loading })}\n        {invalid && error && (\n          <div className={cx(styles.fieldValidationWrapper)}>\n            <FieldValidationMessage>{error}</FieldValidationMessage>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nInlineField.displayName = 'InlineField';\n\nconst getStyles = (theme: GrafanaTheme2, grow?: boolean, shrink?: boolean) => {\n  return {\n    container: css({\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'flex-start',\n      textAlign: 'left',\n      position: 'relative',\n      flex: `${grow ? 1 : 0} ${shrink ? 1 : 0} auto`,\n      margin: `0 ${theme.spacing(0.5)} ${theme.spacing(0.5)} 0`,\n    }),\n    childContainer: css({\n      flex: `${grow ? 1 : 0} ${shrink ? 1 : 0} auto`,\n    }),\n    fieldValidationWrapper: css({\n      marginTop: theme.spacing(0.5),\n    }),\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { Icon } from '../Icon/Icon';\n\nexport interface LabelProps extends React.LabelHTMLAttributes<HTMLLabelElement> {\n  children: React.ReactNode;\n  description?: React.ReactNode;\n  category?: React.ReactNode[];\n}\n\nexport const Label = ({ children, description, className, category, ...labelProps }: LabelProps) => {\n  const styles = useStyles2(getLabelStyles);\n  const categories = category?.map((c, i) => {\n    return (\n      <span className={styles.categories} key={`${c}/${i}`}>\n        <span>{c}</span>\n        <Icon name=\"angle-right\" className={styles.chevron} />\n      </span>\n    );\n  });\n\n  return (\n    <div className={cx(styles.label, className)}>\n      <label {...labelProps}>\n        <div className={styles.labelContent}>\n          {categories}\n          {children}\n        </div>\n        {description && <span className={styles.description}>{description}</span>}\n      </label>\n    </div>\n  );\n};\n\nexport const getLabelStyles = (theme: GrafanaTheme2) => ({\n  label: css({\n    label: 'Label',\n    fontSize: theme.typography.size.sm,\n    fontWeight: theme.typography.fontWeightMedium,\n    lineHeight: 1.25,\n    marginBottom: theme.spacing(0.5),\n    color: theme.colors.text.primary,\n    maxWidth: '480px',\n  }),\n  labelContent: css({\n    display: 'flex',\n    alignItems: 'center',\n  }),\n  description: css({\n    label: 'Label-description',\n    color: theme.colors.text.secondary,\n    fontSize: theme.typography.size.sm,\n    fontWeight: theme.typography.fontWeightRegular,\n    marginTop: theme.spacing(0.25),\n    display: 'block',\n  }),\n  categories: css({\n    label: 'Label-categories',\n    display: 'inline-flex',\n    alignItems: 'center',\n  }),\n  chevron: css({\n    margin: theme.spacing(0, 0.25),\n  }),\n});\n","import { css, cx } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { getFocusStyles } from '../../themes/mixins';\nimport { ComponentSize } from '../../types/size';\n\nexport const getFocusStyle = (theme: GrafanaTheme2) =>\n  css({\n    '&:focus': getFocusStyles(theme),\n  });\n\nexport const sharedInputStyle = (theme: GrafanaTheme2, invalid = false) => {\n  const borderColor = invalid ? theme.colors.error.border : theme.components.input.borderColor;\n  const borderColorHover = invalid ? theme.colors.error.shade : theme.components.input.borderHover;\n  const background = theme.components.input.background;\n  const textColor = theme.components.input.text;\n\n  // Cannot use our normal borders for this color for some reason due the alpha values in them.\n  // Need to colors without alpha channel\n  const autoFillBorder = theme.isDark ? '#2e2f35' : '#bab4ca';\n\n  return cx(\n    inputPadding(theme),\n    css({\n      background,\n      lineHeight: theme.typography.body.lineHeight,\n      fontSize: theme.typography.size.md,\n      color: textColor,\n      border: `1px solid ${borderColor}`,\n\n      '&:-webkit-autofill, &:-webkit-autofill:hover': {\n        /* Welcome to 2005. This is a HACK to get rid od Chromes default autofill styling */\n        boxShadow: `inset 0 0 0 1px rgba(255, 255, 255, 0), inset 0 0 0 100px ${background}!important`,\n        WebkitTextFillColor: `${textColor} !important`,\n        borderColor: autoFillBorder,\n      },\n\n      '&:-webkit-autofill:focus': {\n        /* Welcome to 2005. This is a HACK to get rid od Chromes default autofill styling */\n        boxShadow: `0 0 0 2px ${theme.colors.background.primary}, 0 0 0px 4px ${theme.colors.primary.main}, inset 0 0 0 1px rgba(255, 255, 255, 0), inset 0 0 0 100px ${background}!important`,\n        WebkitTextFillColor: `${textColor} !important`,\n      },\n\n      '&:hover': {\n        borderColor: borderColorHover,\n      },\n\n      '&:focus': {\n        outline: 'none',\n      },\n\n      '&:disabled': {\n        backgroundColor: theme.colors.action.disabledBackground,\n        color: theme.colors.action.disabledText,\n        border: `1px solid ${theme.colors.action.disabledBackground}`,\n\n        '&:hover': {\n          borderColor,\n        },\n      },\n\n      '&::placeholder': {\n        color: theme.colors.text.disabled,\n        opacity: 1,\n      },\n    })\n  );\n};\n\nexport const inputPadding = (theme: GrafanaTheme2) => {\n  return css({\n    padding: theme.spacing(0, 1, 0, 1),\n  });\n};\n\nexport const inputSizes = () => {\n  return {\n    sm: css({\n      width: inputSizesPixels('sm'),\n    }),\n    md: css({\n      width: inputSizesPixels('md'),\n    }),\n    lg: css({\n      width: inputSizesPixels('lg'),\n    }),\n    auto: css({\n      width: inputSizesPixels('auto'),\n    }),\n  };\n};\n\nexport const inputSizesPixels = (size: string) => {\n  switch (size) {\n    case 'sm':\n      return '200px';\n    case 'md':\n      return '320px';\n    case 'lg':\n      return '580px';\n    case 'auto':\n    default:\n      return 'auto';\n  }\n};\n\nexport function getPropertiesForButtonSize(size: ComponentSize, theme: GrafanaTheme2) {\n  switch (size) {\n    case 'sm':\n      return {\n        padding: 1,\n        fontSize: theme.typography.size.sm,\n        height: theme.components.height.sm,\n      };\n\n    case 'lg':\n      return {\n        padding: 3,\n        fontSize: theme.typography.size.lg,\n        height: theme.components.height.lg,\n      };\n    case 'md':\n    default:\n      return {\n        padding: 2,\n        fontSize: theme.typography.size.md,\n        height: theme.components.height.md,\n      };\n  }\n}\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\nimport SVG from 'react-inlinesvg';\n\nimport { GrafanaTheme2, isIconName } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes/ThemeContext';\nimport { IconName, IconType, IconSize } from '../../types/icon';\n\nimport { getIconRoot, getIconSubDir, getSvgSize } from './utils';\n\nexport interface IconProps extends Omit<React.SVGProps<SVGElement>, 'onLoad' | 'onError' | 'ref'> {\n  name: IconName;\n  size?: IconSize;\n  type?: IconType;\n  title?: string;\n}\n\nconst getIconStyles = (theme: GrafanaTheme2) => {\n  return {\n    icon: css({\n      display: 'inline-block',\n      fill: 'currentColor',\n      flexShrink: 0,\n      label: 'Icon',\n      // line-height: 0; is needed for correct icon alignment in Safari\n      lineHeight: 0,\n      verticalAlign: 'middle',\n    }),\n    orange: css({\n      fill: theme.v1.palette.orange,\n    }),\n  };\n};\n\nexport const Icon = React.forwardRef<SVGElement, IconProps>(\n  ({ size = 'md', type = 'default', name, className, style, title = '', ...rest }, ref) => {\n    const styles = useStyles2(getIconStyles);\n\n    if (!isIconName(name)) {\n      console.warn('Icon component passed an invalid icon name', name);\n    }\n\n    // handle the deprecated 'fa fa-spinner'\n    const iconName: IconName = name === 'fa fa-spinner' ? 'spinner' : name;\n\n    const iconRoot = getIconRoot();\n    const svgSize = getSvgSize(size);\n    const svgHgt = svgSize;\n    const svgWid = name.startsWith('gf-bar-align') ? 16 : name.startsWith('gf-interp') ? 30 : svgSize;\n    const subDir = getIconSubDir(iconName, type);\n    const svgPath = `${iconRoot}${subDir}/${iconName}.svg`;\n\n    const composedClassName = cx(\n      styles.icon,\n      className,\n      type === 'mono' ? { [styles.orange]: name === 'favorite' } : '',\n      iconName === 'spinner' && 'fa-spin'\n    );\n\n    return (\n      <SVG\n        innerRef={ref}\n        src={svgPath}\n        width={svgWid}\n        height={svgHgt}\n        title={title}\n        className={composedClassName}\n        style={style}\n        {...rest}\n      />\n    );\n  }\n);\n\nIcon.displayName = 'Icon';\n","import { IconName, IconSize } from '../../types/icon';\n\nconst alwaysMonoIcons: IconName[] = [\n  'grafana',\n  'favorite',\n  'heart-break',\n  'heart',\n  'panel-add',\n  'library-panel',\n  'circle-mono',\n];\n\nexport function getIconSubDir(name: IconName, type: string): string {\n  if (name?.startsWith('gf-')) {\n    return 'custom';\n  } else if (alwaysMonoIcons.includes(name)) {\n    return 'mono';\n  } else if (type === 'default') {\n    return 'unicons';\n  } else if (type === 'solid') {\n    return 'solid';\n  } else {\n    return 'mono';\n  }\n}\n\n/* Transform string with px to number and add 2 pxs as path in svg is 2px smaller */\nexport function getSvgSize(size: IconSize) {\n  switch (size) {\n    case 'xs':\n      return 12;\n    case 'sm':\n      return 14;\n    case 'md':\n      return 16;\n    case 'lg':\n      return 18;\n    case 'xl':\n      return 24;\n    case 'xxl':\n      return 36;\n    case 'xxxl':\n      return 48;\n  }\n}\n\nlet iconRoot: string | undefined;\n\nexport function getIconRoot(): string {\n  if (iconRoot) {\n    return iconRoot;\n  }\n\n  const grafanaPublicPath = typeof window !== 'undefined' && window.__grafana_public_path__;\n  if (grafanaPublicPath) {\n    iconRoot = grafanaPublicPath + 'img/icons/';\n  } else {\n    iconRoot = 'public/img/icons/';\n  }\n\n  return iconRoot;\n}\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2, colorManipulator, deprecationWarning } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { getFocusStyles, getMouseFocusStyles } from '../../themes/mixins';\nimport { ComponentSize } from '../../types';\nimport { IconName, IconSize, IconType } from '../../types/icon';\nimport { Icon } from '../Icon/Icon';\nimport { getSvgSize } from '../Icon/utils';\nimport { TooltipPlacement, PopoverContent, Tooltip } from '../Tooltip';\n\nexport type IconButtonVariant = 'primary' | 'secondary' | 'destructive';\n\ntype LimitedIconSize = ComponentSize | 'xl';\n\ninterface BaseProps extends Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, 'aria-label'> {\n  /** Name of the icon **/\n  name: IconName;\n  /** Icon size - sizes xxl and xxxl are deprecated and when used being decreased to xl*/\n  size?: IconSize;\n  /** Type of the icon - mono or default */\n  iconType?: IconType;\n  /** Variant to change the color of the Icon */\n  variant?: IconButtonVariant;\n}\n\nexport interface BasePropsWithTooltip extends BaseProps {\n  /** Tooltip content to display on hover and as the aria-label */\n  tooltip: PopoverContent;\n  /** Position of the tooltip */\n  tooltipPlacement?: TooltipPlacement;\n}\n\ninterface BasePropsWithAriaLabel extends BaseProps {\n  /** @deprecated use aria-label instead*/\n  ariaLabel?: string;\n  /** Text available only for screen readers. No tooltip will be set in this case. */\n  ['aria-label']: string;\n}\n\nexport type Props = BasePropsWithTooltip | BasePropsWithAriaLabel;\n\nexport const IconButton = React.forwardRef<HTMLButtonElement, Props>((props, ref) => {\n  const { size = 'md', variant = 'secondary' } = props;\n  let limitedIconSize: LimitedIconSize;\n\n  // very large icons (xl to xxxl) are unified to size xl\n  if (size === 'xxl' || size === 'xxxl') {\n    deprecationWarning('IconButton', 'size=\"xxl\" and size=\"xxxl\"', 'size=\"xl\"');\n    limitedIconSize = 'xl';\n  } else {\n    limitedIconSize = size;\n  }\n\n  const styles = useStyles2(getStyles, limitedIconSize, variant);\n\n  let ariaLabel: string | undefined;\n  let buttonRef: typeof ref | undefined;\n\n  if ('tooltip' in props) {\n    const { tooltip } = props;\n    ariaLabel = typeof tooltip === 'string' ? tooltip : undefined;\n  } else if ('ariaLabel' in props || 'aria-label' in props) {\n    const { ariaLabel: deprecatedAriaLabel, ['aria-label']: ariaLabelProp } = props;\n    ariaLabel = ariaLabelProp || deprecatedAriaLabel;\n    buttonRef = ref;\n  }\n\n  // When using tooltip, ref is forwarded to Tooltip component instead for https://github.com/grafana/grafana/issues/65632\n  if ('tooltip' in props) {\n    const { name, iconType, className, tooltip, tooltipPlacement, ...restProps } = props;\n    return (\n      <Tooltip ref={ref} content={tooltip} placement={tooltipPlacement}>\n        <button\n          {...restProps}\n          ref={buttonRef}\n          aria-label={ariaLabel}\n          className={cx(styles.button, className)}\n          type=\"button\"\n        >\n          <Icon name={name} size={limitedIconSize} className={styles.icon} type={iconType} />\n        </button>\n      </Tooltip>\n    );\n  } else {\n    const { name, iconType, className, ...restProps } = props;\n    return (\n      <button\n        {...restProps}\n        ref={buttonRef}\n        aria-label={ariaLabel}\n        className={cx(styles.button, className)}\n        type=\"button\"\n      >\n        <Icon name={name} size={limitedIconSize} className={styles.icon} type={iconType} />\n      </button>\n    );\n  }\n});\n\nIconButton.displayName = 'IconButton';\n\nconst getStyles = (theme: GrafanaTheme2, size: IconSize, variant: IconButtonVariant) => {\n  // overall size of the IconButton on hover\n  // theme.spacing.gridSize originates from 2*4px for padding and letting the IconSize generally decide on the hoverSize\n  const hoverSize = getSvgSize(size) + theme.spacing.gridSize;\n\n  let iconColor = theme.colors.text.primary;\n\n  if (variant === 'primary') {\n    iconColor = theme.colors.primary.text;\n  } else if (variant === 'destructive') {\n    iconColor = theme.colors.error.text;\n  }\n\n  return {\n    button: css({\n      zIndex: 0,\n      position: 'relative',\n      margin: `0 ${theme.spacing.x0_5} 0 0`,\n      boxShadow: 'none',\n      border: 'none',\n      display: 'inline-flex',\n      background: 'transparent',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: 0,\n      color: iconColor,\n\n      '&[disabled], &:disabled': {\n        cursor: 'not-allowed',\n        color: theme.colors.action.disabledText,\n        opacity: 0.65,\n      },\n\n      '&:before': {\n        zIndex: -1,\n        position: 'absolute',\n        opacity: 0,\n        width: `${hoverSize}px`,\n        height: `${hoverSize}px`,\n        borderRadius: theme.shape.radius.default,\n        content: '\"\"',\n        transitionDuration: '0.2s',\n        transitionTimingFunction: 'cubic-bezier(0.4, 0, 0.2, 1)',\n        transitionProperty: 'opacity',\n      },\n\n      '&:focus, &:focus-visible': getFocusStyles(theme),\n\n      '&:focus:not(:focus-visible)': getMouseFocusStyles(theme),\n\n      '&:hover': {\n        '&:before': {\n          backgroundColor:\n            variant === 'secondary' ? theme.colors.action.hover : colorManipulator.alpha(iconColor, 0.12),\n          opacity: 1,\n        },\n      },\n    }),\n    icon: css({\n      verticalAlign: 'baseline',\n    }),\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport React, { HTMLProps, ReactNode } from 'react';\nimport useMeasure from 'react-use/lib/useMeasure';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory, useTheme2 } from '../../themes';\nimport { getFocusStyle, sharedInputStyle } from '../Forms/commonStyles';\nimport { Spinner } from '../Spinner/Spinner';\n\nexport interface Props extends Omit<HTMLProps<HTMLInputElement>, 'prefix' | 'size'> {\n  /** Sets the width to a multiple of 8px. Should only be used with inline forms. Setting width of the container is preferred in other cases.*/\n  width?: number;\n  /** Show an invalid state around the input */\n  invalid?: boolean;\n  /** Show an icon as a prefix in the input */\n  prefix?: ReactNode;\n  /** Show an icon as a suffix in the input */\n  suffix?: ReactNode;\n  /** Show a loading indicator as a suffix in the input */\n  loading?: boolean;\n  /** Add a component as an addon before the input  */\n  addonBefore?: ReactNode;\n  /** Add a component as an addon after the input */\n  addonAfter?: ReactNode;\n}\n\ninterface StyleDeps {\n  theme: GrafanaTheme2;\n  invalid?: boolean;\n  width?: number;\n}\n\nexport const Input = React.forwardRef<HTMLInputElement, Props>((props, ref) => {\n  const { className, addonAfter, addonBefore, prefix, suffix, invalid, loading, width = 0, ...restProps } = props;\n  /**\n   * Prefix & suffix are positioned absolutely within inputWrapper. We use client rects below to apply correct padding to the input\n   * when prefix/suffix is larger than default (28px = 16px(icon) + 12px(left/right paddings)).\n   * Thanks to that prefix/suffix do not overflow the input element itself.\n   */\n  const [prefixRef, prefixRect] = useMeasure<HTMLDivElement>();\n  const [suffixRef, suffixRect] = useMeasure<HTMLDivElement>();\n\n  const theme = useTheme2();\n  const styles = getInputStyles({ theme, invalid: !!invalid, width });\n\n  return (\n    <div className={cx(styles.wrapper, className)} data-testid={'input-wrapper'}>\n      {!!addonBefore && <div className={styles.addon}>{addonBefore}</div>}\n\n      <div className={styles.inputWrapper}>\n        {prefix && (\n          <div className={styles.prefix} ref={prefixRef}>\n            {prefix}\n          </div>\n        )}\n\n        <input\n          ref={ref}\n          className={styles.input}\n          {...restProps}\n          style={{\n            paddingLeft: prefix ? prefixRect.width + 12 : undefined,\n            paddingRight: suffix || loading ? suffixRect.width + 12 : undefined,\n          }}\n        />\n\n        {(suffix || loading) && (\n          <div className={styles.suffix} ref={suffixRef}>\n            {loading && <Spinner className={styles.loadingIndicator} inline={true} />}\n            {suffix}\n          </div>\n        )}\n      </div>\n\n      {!!addonAfter && <div className={styles.addon}>{addonAfter}</div>}\n    </div>\n  );\n});\n\nInput.displayName = 'Input';\n\nexport const getInputStyles = stylesFactory(({ theme, invalid = false, width }: StyleDeps) => {\n  const prefixSuffixStaticWidth = '28px';\n  const prefixSuffix = css({\n    position: 'absolute',\n    top: 0,\n    zIndex: 1,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 0,\n    flexShrink: 0,\n    fontSize: theme.typography.size.md,\n    height: '100%',\n    /* Min width specified for prefix/suffix classes used outside React component*/\n    minWidth: prefixSuffixStaticWidth,\n    color: theme.colors.text.secondary,\n  });\n\n  return {\n    // Wraps inputWrapper and addons\n    wrapper: cx(\n      css({\n        label: 'input-wrapper',\n        display: 'flex',\n        width: width ? theme.spacing(width) : '100%',\n        height: theme.spacing(theme.components.height.md),\n        borderRadius: theme.shape.radius.default,\n        '&:hover': {\n          '> .prefix, .suffix, .input': {\n            borderColor: invalid ? theme.colors.error.border : theme.colors.primary.border,\n          },\n\n          // only show number buttons on hover\n          \"input[type='number']\": {\n            appearance: 'textfield',\n          },\n\n          \"input[type='number']::-webkit-inner-spin-button, input[type='number']::-webkit-outer-spin-button\": {\n            // Need type assertion here due to the use of !important\n            // see https://github.com/frenic/csstype/issues/114#issuecomment-697201978\n            // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n            WebkitAppearance: 'inner-spin-button !important' as 'inner-spin-button',\n            opacity: 1,\n          },\n        },\n      })\n    ),\n    // Wraps input and prefix/suffix\n    inputWrapper: css({\n      label: 'input-inputWrapper',\n      position: 'relative',\n      flexGrow: 1,\n      /* we want input to be above addons, especially for focused state */\n      zIndex: 1,\n\n      /* when input rendered with addon before only*/\n      '&:not(:first-child):last-child': {\n        '> input': {\n          borderLeft: 'none',\n          borderTopLeftRadius: 0,\n          borderBottomLeftRadius: 0,\n        },\n      },\n\n      /* when input rendered with addon after only*/\n      '&:first-child:not(:last-child)': {\n        '> input': {\n          borderRight: 'none',\n          borderTopRightRadius: 0,\n          borderBottomRightRadius: 0,\n        },\n      },\n\n      /* when rendered with addon before and after */\n      '&:not(:first-child):not(:last-child)': {\n        '> input': {\n          borderRight: 'none',\n          borderTopRightRadius: 0,\n          borderBottomRightRadius: 0,\n          borderTopLeftRadius: 0,\n          borderBottomLeftRadius: 0,\n        },\n      },\n\n      input: {\n        /* paddings specified for classes used outside React component */\n        '&:not(:first-child)': {\n          paddingLeft: prefixSuffixStaticWidth,\n        },\n        '&:not(:last-child)': {\n          paddingRight: prefixSuffixStaticWidth,\n        },\n        '&[readonly]': {\n          cursor: 'default',\n        },\n      },\n    }),\n\n    input: cx(\n      getFocusStyle(theme),\n      sharedInputStyle(theme, invalid),\n      css({\n        label: 'input-input',\n        position: 'relative',\n        zIndex: 0,\n        flexGrow: 1,\n        borderRadius: theme.shape.radius.default,\n        height: '100%',\n        width: '100%',\n      })\n    ),\n    inputDisabled: css({\n      backgroundColor: theme.colors.action.disabledBackground,\n      color: theme.colors.action.disabledText,\n      border: `1px solid ${theme.colors.action.disabledBackground}`,\n      '&:focus': {\n        boxShadow: 'none',\n      },\n    }),\n    addon: css({\n      label: 'input-addon',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexGrow: 0,\n      flexShrink: 0,\n      position: 'relative',\n\n      '&:first-child': {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0,\n        '> :last-child': {\n          borderTopRightRadius: 0,\n          borderBottomRightRadius: 0,\n        },\n      },\n\n      '&:last-child': {\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0,\n        '> :first-child': {\n          borderTopLeftRadius: 0,\n          borderBottomLeftRadius: 0,\n        },\n      },\n      '> *:focus': {\n        /* we want anything that has focus and is an addon to be above input */\n        zIndex: 2,\n      },\n    }),\n    prefix: cx(\n      prefixSuffix,\n      css({\n        label: 'input-prefix',\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(0.5),\n        borderRight: 'none',\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0,\n      })\n    ),\n    suffix: cx(\n      prefixSuffix,\n      css({\n        label: 'input-suffix',\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        marginBottom: '-2px',\n        borderLeft: 'none',\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0,\n        right: 0,\n      })\n    ),\n    loadingIndicator: css({\n      '& + *': {\n        marginLeft: theme.spacing(0.5),\n      },\n    }),\n  };\n});\n","import { css, cx } from '@emotion/css';\nimport React, { HTMLAttributes } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { Spinner } from '../Spinner/Spinner';\n\n/**\n * @public\n */\nexport interface LoadingPlaceholderProps extends HTMLAttributes<HTMLDivElement> {\n  text: React.ReactNode;\n}\n\n/**\n * @public\n */\nexport const LoadingPlaceholder = ({ text, className, ...rest }: LoadingPlaceholderProps) => {\n  const styles = useStyles2(getStyles);\n  return (\n    <div className={cx(styles.container, className)} {...rest}>\n      {text} <Spinner inline={true} />\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css({\n      marginBottom: theme.spacing(4),\n    }),\n  };\n};\n","import { useAsync } from 'react-use';\n\n// Allows simple dynamic imports in the components\nexport const useAsyncDependency = (importStatement: Promise<any>) => {\n  const state = useAsync(async () => {\n    return await importStatement;\n  });\n\n  return {\n    ...state,\n    dependency: state.value,\n  };\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { useStyles2 } from '../../themes';\n\nimport { ErrorBoundaryApi } from './ErrorBoundary';\n\nexport interface Props extends ErrorBoundaryApi {\n  title: string;\n}\n\nexport const ErrorWithStack = ({ error, errorInfo, title }: Props) => {\n  const style = useStyles2(getStyles);\n\n  return (\n    <div className={style}>\n      <h2>{title}</h2>\n      <details style={{ whiteSpace: 'pre-wrap' }}>\n        {error && error.toString()}\n        <br />\n        {errorInfo && errorInfo.componentStack}\n      </details>\n    </div>\n  );\n};\n\nErrorWithStack.displayName = 'ErrorWithStack';\n\nconst getStyles = () => {\n  return css({\n    width: '500px',\n    margin: '64px auto',\n  });\n};\n","import React from 'react';\n\nimport { useAsyncDependency } from '../../utils/useAsyncDependency';\nimport { ErrorWithStack } from '../ErrorBoundary/ErrorWithStack';\nimport { LoadingPlaceholder } from '../LoadingPlaceholder/LoadingPlaceholder';\n\n// we only use import type so it will not be included in the bundle\nimport type { ReactMonacoEditorProps } from './types';\n\n/**\n * @internal\n * Experimental export\n **/\nexport const ReactMonacoEditorLazy = (props: ReactMonacoEditorProps) => {\n  const { loading, error, dependency } = useAsyncDependency(\n    import(/* webpackChunkName: \"react-monaco-editor\" */ './ReactMonacoEditor')\n  );\n\n  if (loading) {\n    return <LoadingPlaceholder text={''} />;\n  }\n\n  if (error) {\n    return (\n      <ErrorWithStack\n        title=\"React Monaco Editor failed to load\"\n        error={error}\n        errorInfo={{ componentStack: error?.stack || '' }}\n      />\n    );\n  }\n\n  const ReactMonacoEditor = dependency.ReactMonacoEditor;\n  return <ReactMonacoEditor {...props} />;\n};\n","// We use `import type` to guarantee it'll be erased from the JS and it doesnt accidently bundle monaco\nimport type { EditorProps } from '@monaco-editor/react';\nimport type * as monacoType from 'monaco-editor/esm/vs/editor/editor.api';\n\n// we do not allow customizing the theme.\n// (theme is complicated in Monaco, right now there is\n// a limitation where all monaco editors must have\n// the same theme, see\n// https://github.com/microsoft/monaco-editor/issues/338#issuecomment-274837186\n// )\nexport type ReactMonacoEditorProps = Omit<EditorProps, 'theme'>;\n\nexport type CodeEditorChangeHandler = (value: string) => void;\nexport type CodeEditorSuggestionProvider = () => CodeEditorSuggestionItem[];\n\nexport type { monacoType as monacoTypes };\nexport type Monaco = typeof monacoType;\nexport type MonacoEditor = monacoType.editor.IStandaloneCodeEditor;\nexport type MonacoOptions = MonacoOptionsWithGrafanaDefaults;\n\nexport interface CodeEditorProps {\n  value: string;\n  language: string;\n  width?: number | string;\n  height?: number | string;\n\n  readOnly?: boolean;\n  showMiniMap?: boolean;\n  showLineNumbers?: boolean;\n  monacoOptions?: MonacoOptions;\n\n  /**\n   * Callback before the editor has mounted that gives you raw access to monaco\n   */\n  onBeforeEditorMount?: (monaco: Monaco) => void;\n\n  /**\n   * Callback after the editor has mounted that gives you raw access to monaco\n   */\n  onEditorDidMount?: (editor: MonacoEditor, monaco: Monaco) => void;\n\n  /** Callback before the edior has unmounted */\n  onEditorWillUnmount?: () => void;\n\n  /** Handler to be performed when editor is blurred */\n  onBlur?: CodeEditorChangeHandler;\n\n  /** Handler to be performed when editor is focused */\n  onFocus?: CodeEditorChangeHandler;\n\n  /** Handler to be performed whenever the text inside the editor changes */\n  onChange?: CodeEditorChangeHandler;\n\n  /** Handler to be performed when Cmd/Ctrl+S is pressed */\n  onSave?: CodeEditorChangeHandler;\n\n  /**\n   * Language agnostic suggestion completions -- typically for template variables\n   */\n  getSuggestions?: CodeEditorSuggestionProvider;\n\n  containerStyles?: string;\n}\n\n/**\n * @alpha\n */\nexport enum CodeEditorSuggestionItemKind {\n  Method = 'method',\n  Field = 'field',\n  Property = 'property',\n  Constant = 'constant',\n  Text = 'text',\n}\n\n/**\n * @alpha\n */\nexport interface CodeEditorSuggestionItem {\n  /**\n   * The label of this completion item. By default\n   * this is also the text that is inserted when selecting\n   * this completion.\n   */\n  label: string;\n\n  /**\n   * The kind of this completion item. An icon is chosen\n   * by the editor based on the kind.\n   */\n  kind?: CodeEditorSuggestionItemKind;\n\n  /**\n   * A human-readable string with additional information\n   * about this item, like type or symbol information.\n   */\n  detail?: string;\n\n  /**\n   * A human-readable string that represents a doc-comment.\n   */\n  documentation?: string; // | IMarkdownString;\n\n  /**\n   * A string or snippet that should be inserted in a document when selecting\n   * this completion. When `falsy` the `label` is used.\n   */\n  insertText?: string;\n}\n\n/**\n * This interface will extend the original Monaco editor options interface\n * but changing the code comments to contain the proper default values to\n * prevent the consumer of the CodeEditor to get incorrect documentation in editor.\n */\nexport interface MonacoOptionsWithGrafanaDefaults extends monacoType.editor.IStandaloneEditorConstructionOptions {\n  /**\n   * Enable custom contextmenu.\n   * Defaults to false.\n   */\n  contextmenu?: boolean;\n  /**\n   * The number of spaces a tab is equal to.\n   * This setting is overridden based on the file contents when `detectIndentation` is on.\n   * Defaults to 4.\n   */\n  tabSize?: number;\n  /**\n   * Show code lens\n   * Defaults to false.\n   */\n  codeLens?: boolean;\n  /**\n   * Control the width of line numbers, by reserving horizontal space for rendering at least an amount of digits.\n   * Defaults to 4.\n   */\n  lineNumbersMinChars?: number;\n  /**\n   * The width reserved for line decorations (in px).\n   * Line decorations are placed between line numbers and the editor content.\n   * You can pass in a string in the format floating point followed by \"ch\". e.g. 1.3ch.\n   * Defaults to 1 * theme.spacing.gridSize.\n   */\n  lineDecorationsWidth?: number | string;\n  /**\n   * Controls if a border should be drawn around the overview ruler.\n   * Defaults to `false`.\n   */\n  overviewRulerBorder?: boolean;\n  /**\n   * Enable that the editor will install an interval to check if its container dom node size has changed.\n   * Enabling this might have a severe performance impact.\n   * Defaults to true.\n   */\n  automaticLayout?: boolean;\n\n  /**\n   * Always consume mouse wheel events (always call preventDefault() and stopPropagation() on the browser events).\n   * Always consuming mouse wheel events will prevent the page from scrolling if the cursor is over the editor.\n   * Defaults to `false`.\n   */\n  alwaysConsumeMouseWheel?: boolean;\n}\n","import type * as monacoType from 'monaco-editor/esm/vs/editor/editor.api';\n\nimport { CodeEditorSuggestionItem, CodeEditorSuggestionItemKind, CodeEditorSuggestionProvider, Monaco } from './types';\n\n/**\n * @internal -- only exported for tests\n */\nexport function findInsertIndex(line: string): { index: number; prefix: string } {\n  for (let i = line.length - 1; i > 0; i--) {\n    const ch = line.charAt(i);\n    if (ch === '$') {\n      return {\n        index: i,\n        prefix: line.substring(i),\n      };\n    }\n\n    // Keep these seperators\n    if (ch === ' ' || ch === '\\t' || ch === '\"' || ch === \"'\") {\n      return {\n        index: i + 1,\n        prefix: line.substring(i + 1),\n      };\n    }\n  }\n  return {\n    index: 0,\n    prefix: line,\n  };\n}\n\nfunction getCompletionItems(\n  monaco: Monaco,\n  prefix: string,\n  suggestions: CodeEditorSuggestionItem[],\n  range: monacoType.IRange\n): monacoType.languages.CompletionItem[] {\n  const items: monacoType.languages.CompletionItem[] = [];\n  for (const suggestion of suggestions) {\n    if (prefix && !suggestion.label.startsWith(prefix)) {\n      continue; // skip non-matching suggestions\n    }\n\n    items.push({\n      ...suggestion,\n      kind: mapKinds(monaco, suggestion.kind),\n      range,\n      insertText: suggestion.insertText ?? suggestion.label,\n    });\n  }\n  return items;\n}\n\nfunction mapKinds(monaco: Monaco, sug?: CodeEditorSuggestionItemKind): monacoType.languages.CompletionItemKind {\n  switch (sug) {\n    case CodeEditorSuggestionItemKind.Method:\n      return monaco.languages.CompletionItemKind.Method;\n    case CodeEditorSuggestionItemKind.Field:\n      return monaco.languages.CompletionItemKind.Field;\n    case CodeEditorSuggestionItemKind.Property:\n      return monaco.languages.CompletionItemKind.Property;\n    case CodeEditorSuggestionItemKind.Constant:\n      return monaco.languages.CompletionItemKind.Constant;\n    case CodeEditorSuggestionItemKind.Text:\n      return monaco.languages.CompletionItemKind.Text;\n  }\n  return monaco.languages.CompletionItemKind.Text;\n}\n\n/**\n * @alpha\n */\nexport function registerSuggestions(\n  monaco: Monaco,\n  language: string,\n  getSuggestions: CodeEditorSuggestionProvider,\n  modelId: string\n): monacoType.IDisposable | undefined {\n  if (!language || !getSuggestions) {\n    return undefined;\n  }\n  return monaco.languages.registerCompletionItemProvider(language, {\n    triggerCharacters: ['$'],\n\n    provideCompletionItems: (model, position, context) => {\n      // only return these suggestions for the specified modelId\n      // prevents duplicate suggestions when multiple editors are open\n      if (model.id !== modelId) {\n        return undefined;\n      }\n      const range = {\n        startLineNumber: position.lineNumber,\n        endLineNumber: position.lineNumber,\n        startColumn: position.column,\n        endColumn: position.column,\n      };\n\n      // Simple check if this was triggered by pressing `$`\n      if (context.triggerCharacter === '$') {\n        range.startColumn = position.column - 1;\n        return {\n          suggestions: getCompletionItems(monaco, '$', getSuggestions(), range),\n        };\n      }\n\n      // Find the replacement region\n      const currentLine = model.getValueInRange({\n        startLineNumber: position.lineNumber,\n        startColumn: 1,\n        endLineNumber: position.lineNumber,\n        endColumn: position.column,\n      });\n\n      const { index, prefix } = findInsertIndex(currentLine);\n      range.startColumn = index + 1;\n\n      const suggestions = getCompletionItems(monaco, prefix, getSuggestions(), range);\n      if (suggestions.length) {\n        // NOTE, this will replace any language provided suggestions\n        return { suggestions };\n      }\n\n      // Default language suggestions\n      return undefined;\n    },\n  });\n}\n","import { css } from '@emotion/css';\nimport type * as monacoType from 'monaco-editor/esm/vs/editor/editor.api';\nimport React, { PureComponent } from 'react';\n\nimport { GrafanaTheme2, monacoLanguageRegistry } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { withTheme2 } from '../../themes';\nimport { Themeable2 } from '../../types';\n\nimport { ReactMonacoEditorLazy } from './ReactMonacoEditorLazy';\nimport { registerSuggestions } from './suggestions';\nimport { CodeEditorProps, Monaco, MonacoEditor as MonacoEditorType, MonacoOptions } from './types';\n\ntype Props = CodeEditorProps & Themeable2;\n\nclass UnthemedCodeEditor extends PureComponent<Props> {\n  completionCancel?: monacoType.IDisposable;\n  monaco?: Monaco;\n  modelId?: string;\n\n  constructor(props: Props) {\n    super(props);\n  }\n\n  componentWillUnmount() {\n    if (this.completionCancel) {\n      this.completionCancel.dispose();\n    }\n\n    this.props.onEditorWillUnmount?.();\n  }\n\n  componentDidUpdate(oldProps: Props) {\n    const { getSuggestions, language } = this.props;\n\n    const newLanguage = oldProps.language !== language;\n    const newGetSuggestions = oldProps.getSuggestions !== getSuggestions;\n\n    if (newGetSuggestions || newLanguage) {\n      if (this.completionCancel) {\n        this.completionCancel.dispose();\n      }\n\n      if (!this.monaco) {\n        console.warn('Monaco instance not loaded yet');\n        return;\n      }\n\n      if (getSuggestions && this.modelId) {\n        this.completionCancel = registerSuggestions(this.monaco, language, getSuggestions, this.modelId);\n      }\n    }\n\n    if (newLanguage) {\n      this.loadCustomLanguage();\n    }\n  }\n\n  loadCustomLanguage = () => {\n    const { language } = this.props;\n\n    const customLanguage = monacoLanguageRegistry.getIfExists(language);\n\n    if (customLanguage) {\n      return customLanguage.init();\n    }\n\n    return Promise.resolve();\n  };\n\n  // This is replaced with a real function when the actual editor mounts\n  getEditorValue = () => '';\n\n  onBlur = () => {\n    const { onBlur } = this.props;\n    if (onBlur) {\n      onBlur(this.getEditorValue());\n    }\n  };\n\n  onFocus = () => {\n    const { onFocus } = this.props;\n    if (onFocus) {\n      onFocus(this.getEditorValue());\n    }\n  };\n\n  onSave = () => {\n    const { onSave } = this.props;\n    if (onSave) {\n      onSave(this.getEditorValue());\n    }\n  };\n\n  handleBeforeMount = (monaco: Monaco) => {\n    this.monaco = monaco;\n\n    const { onBeforeEditorMount } = this.props;\n\n    onBeforeEditorMount?.(monaco);\n  };\n\n  handleOnMount = (editor: MonacoEditorType, monaco: Monaco) => {\n    const { getSuggestions, language, onChange, onEditorDidMount } = this.props;\n\n    this.modelId = editor.getModel()?.id;\n    this.getEditorValue = () => editor.getValue();\n\n    if (getSuggestions && this.modelId) {\n      this.completionCancel = registerSuggestions(monaco, language, getSuggestions, this.modelId);\n    }\n\n    // Save when pressing Ctrl+S or Cmd+S\n    editor.onKeyDown((e: monacoType.IKeyboardEvent) => {\n      if (e.keyCode === monaco.KeyCode.KeyS && (e.ctrlKey || e.metaKey)) {\n        e.preventDefault();\n        this.onSave();\n      }\n    });\n\n    const languagePromise = this.loadCustomLanguage();\n\n    if (onChange) {\n      editor.getModel()?.onDidChangeContent(() => onChange(editor.getValue()));\n    }\n\n    if (onEditorDidMount) {\n      languagePromise.then(() => onEditorDidMount(editor, monaco));\n    }\n  };\n\n  render() {\n    const { theme, language, width, height, showMiniMap, showLineNumbers, readOnly, monacoOptions } = this.props;\n    const { alwaysConsumeMouseWheel, ...restMonacoOptions } = monacoOptions ?? {};\n\n    const value = this.props.value ?? '';\n    const longText = value.length > 100;\n\n    const containerStyles = this.props.containerStyles ?? getStyles(theme).container;\n\n    const options: MonacoOptions = {\n      wordWrap: 'off',\n      tabSize: 2,\n      codeLens: false,\n      contextmenu: false,\n      minimap: {\n        enabled: longText && showMiniMap,\n        renderCharacters: false,\n      },\n\n      readOnly,\n      lineNumbersMinChars: 4,\n      lineDecorationsWidth: 1 * theme.spacing.gridSize,\n      overviewRulerBorder: false,\n      automaticLayout: true,\n      padding: {\n        top: 0.5 * theme.spacing.gridSize,\n        bottom: 0.5 * theme.spacing.gridSize,\n      },\n      fixedOverflowWidgets: true, // Ensures suggestions menu is drawn on top\n\n      scrollbar: {\n        alwaysConsumeMouseWheel: alwaysConsumeMouseWheel ?? false,\n      },\n    };\n\n    if (!showLineNumbers) {\n      options.glyphMargin = false;\n      options.folding = false;\n      options.lineNumbers = 'off';\n      options.lineNumbersMinChars = 0;\n    }\n\n    return (\n      <div\n        className={containerStyles}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        data-testid={selectors.components.CodeEditor.container}\n      >\n        <ReactMonacoEditorLazy\n          width={width}\n          height={height}\n          language={language}\n          value={value}\n          options={{\n            ...options,\n            ...(restMonacoOptions ?? {}),\n          }}\n          beforeMount={this.handleBeforeMount}\n          onMount={this.handleOnMount}\n          keepCurrentModel={true}\n        />\n      </div>\n    );\n  }\n}\n\nexport const CodeEditor = withTheme2(UnthemedCodeEditor);\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css({\n      borderRadius: theme.shape.radius.default,\n      border: `1px solid ${theme.components.input.borderColor}`,\n    }),\n  };\n};\n","import React from 'react';\nimport { DropdownIndicatorProps } from 'react-select';\n\nimport { Icon } from '../Icon/Icon';\n\nexport function DropdownIndicator({ selectProps }: DropdownIndicatorProps) {\n  const isOpen = selectProps.menuIsOpen;\n  const icon = isOpen ? 'search' : 'angle-down';\n  const size = isOpen ? 'sm' : 'md';\n  return <Icon name={icon} size={size} />;\n}\n","import { cx, css } from '@emotion/css';\nimport React from 'react';\n\nimport { useTheme2 } from '../../themes/ThemeContext';\nimport { getInputStyles } from '../Input/Input';\n\nexport const IndicatorsContainer = React.forwardRef<HTMLDivElement, React.PropsWithChildren>((props, ref) => {\n  const { children } = props;\n  const theme = useTheme2();\n  const styles = getInputStyles({ theme, invalid: false });\n\n  return (\n    <div\n      className={cx(\n        styles.suffix,\n        css({\n          position: 'relative',\n        })\n      )}\n      ref={ref}\n    >\n      {children}\n    </div>\n  );\n});\n\nIndicatorsContainer.displayName = 'IndicatorsContainer';\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes/ThemeContext';\nimport { inputPadding } from '../Forms/commonStyles';\nimport { getInputStyles } from '../Input/Input';\n\ninterface InputControlProps {\n  /** Show an icon as a prefix in the input */\n  prefix?: JSX.Element | string | null;\n  focused: boolean;\n  invalid: boolean;\n  disabled: boolean;\n  innerProps: JSX.IntrinsicElements['div'];\n}\n\nexport const InputControl = React.forwardRef<HTMLDivElement, React.PropsWithChildren<InputControlProps>>(\n  function InputControl({ focused, invalid, disabled, children, innerProps, prefix, ...otherProps }, ref) {\n    const styles = useStyles2(getInputControlStyles, invalid, !!prefix);\n\n    return (\n      <div className={styles.input} {...innerProps} ref={ref}>\n        {prefix && <div className={cx(styles.prefix)}>{prefix}</div>}\n        {children}\n      </div>\n    );\n  }\n);\n\nconst getInputControlStyles = (theme: GrafanaTheme2, invalid: boolean, withPrefix: boolean) => {\n  const styles = getInputStyles({ theme, invalid });\n\n  return {\n    input: cx(\n      inputPadding(theme),\n      css({\n        width: '100%',\n        maxWidth: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n        paddingRight: 0,\n        position: 'relative',\n        boxSizing: 'border-box',\n      }),\n      withPrefix &&\n        css({\n          paddingLeft: 0,\n        })\n    ),\n    prefix: cx(\n      styles.prefix,\n      css({\n        position: 'relative',\n      })\n    ),\n  };\n};\n","import React from 'react';\n\nimport { useTheme2 } from '../../themes';\nimport { IconButton, Props as IconButtonProps } from '../IconButton/IconButton';\n\nimport { getSelectStyles } from './getSelectStyles';\n\ninterface MultiValueContainerProps {\n  innerProps: JSX.IntrinsicElements['div'];\n}\n\nexport const MultiValueContainer = ({ innerProps, children }: React.PropsWithChildren<MultiValueContainerProps>) => {\n  const theme = useTheme2();\n  const styles = getSelectStyles(theme);\n\n  return (\n    <div {...innerProps} className={styles.multiValueContainer}>\n      {children}\n    </div>\n  );\n};\n\nexport type MultiValueRemoveProps = {\n  innerProps: IconButtonProps;\n};\n\nexport const MultiValueRemove = ({ children, innerProps }: React.PropsWithChildren<MultiValueRemoveProps>) => {\n  const theme = useTheme2();\n  const styles = getSelectStyles(theme);\n  return <IconButton {...innerProps} name=\"times\" size=\"sm\" className={styles.multiValueRemove} tooltip=\"Remove\" />;\n};\n","import { cx } from '@emotion/css';\nimport { max } from 'lodash';\nimport React, { RefCallback } from 'react';\nimport { MenuListProps } from 'react-select';\nimport { FixedSizeList as List } from 'react-window';\n\nimport { SelectableValue, toIconName } from '@grafana/data';\n\nimport { useTheme2 } from '../../themes/ThemeContext';\nimport { CustomScrollbar } from '../CustomScrollbar/CustomScrollbar';\nimport { Icon } from '../Icon/Icon';\n\nimport { getSelectStyles } from './getSelectStyles';\n\ninterface SelectMenuProps {\n  maxHeight: number;\n  innerRef: RefCallback<HTMLDivElement>;\n  innerProps: {};\n}\n\nexport const SelectMenu = ({ children, maxHeight, innerRef, innerProps }: React.PropsWithChildren<SelectMenuProps>) => {\n  const theme = useTheme2();\n  const styles = getSelectStyles(theme);\n\n  return (\n    <div {...innerProps} className={styles.menu} style={{ maxHeight }} aria-label=\"Select options menu\">\n      <CustomScrollbar scrollRefCallback={innerRef} autoHide={false} autoHeightMax=\"inherit\" hideHorizontalTrack>\n        {children}\n      </CustomScrollbar>\n    </div>\n  );\n};\n\nSelectMenu.displayName = 'SelectMenu';\n\nconst VIRTUAL_LIST_ITEM_HEIGHT = 37;\nconst VIRTUAL_LIST_WIDTH_ESTIMATE_MULTIPLIER = 7;\n\n// A virtualized version of the SelectMenu, descriptions for SelectableValue options not supported since those are of a variable height.\n//\n// To support the virtualized list we have to \"guess\" the width of the menu container based on the longest available option.\n// the reason for this is because all of the options will be positioned absolute, this takes them out of the document and no space\n// is created for them, thus the container can't grow to accomodate.\n//\n// VIRTUAL_LIST_ITEM_HEIGHT and WIDTH_ESTIMATE_MULTIPLIER are both magic numbers.\n// Some characters (such as emojis and other unicode characters) may consist of multiple code points in which case the width would be inaccurate (but larger than needed).\nexport const VirtualizedSelectMenu = ({ children, maxHeight, options, getValue }: MenuListProps<SelectableValue>) => {\n  const theme = useTheme2();\n  const styles = getSelectStyles(theme);\n  const [value] = getValue();\n\n  const valueIndex = value ? options.findIndex((option: SelectableValue<unknown>) => option.value === value.value) : 0;\n  const initialOffset = valueIndex * VIRTUAL_LIST_ITEM_HEIGHT;\n\n  if (!Array.isArray(children)) {\n    return null;\n  }\n\n  const longestOption = max(options.map((option) => option.label?.length)) ?? 0;\n  const widthEstimate = longestOption * VIRTUAL_LIST_WIDTH_ESTIMATE_MULTIPLIER;\n  const heightEstimate = Math.min(options.length * VIRTUAL_LIST_ITEM_HEIGHT, maxHeight);\n\n  return (\n    <List\n      className={styles.menu}\n      height={heightEstimate}\n      width={widthEstimate}\n      aria-label=\"Select options menu\"\n      itemCount={children.length}\n      itemSize={VIRTUAL_LIST_ITEM_HEIGHT}\n      initialScrollOffset={initialOffset}\n    >\n      {({ index, style }) => <div style={{ ...style, overflow: 'hidden' }}>{children[index]}</div>}\n    </List>\n  );\n};\n\nVirtualizedSelectMenu.displayName = 'VirtualizedSelectMenu';\n\ninterface SelectMenuOptionProps<T> {\n  isDisabled: boolean;\n  isFocused: boolean;\n  isSelected: boolean;\n  innerProps: JSX.IntrinsicElements['div'];\n  innerRef: RefCallback<HTMLDivElement>;\n  renderOptionLabel?: (value: SelectableValue<T>) => JSX.Element;\n  data: SelectableValue<T>;\n}\n\nexport const SelectMenuOptions = ({\n  children,\n  data,\n  innerProps,\n  innerRef,\n  isFocused,\n  isSelected,\n  renderOptionLabel,\n}: React.PropsWithChildren<SelectMenuOptionProps<unknown>>) => {\n  const theme = useTheme2();\n  const styles = getSelectStyles(theme);\n  const icon = data.icon ? toIconName(data.icon) : undefined;\n  // We are removing onMouseMove and onMouseOver from innerProps because they cause the whole\n  // list to re-render everytime the user hovers over an option. This is a performance issue.\n  // See https://github.com/JedWatson/react-select/issues/3128#issuecomment-451936743\n  const { onMouseMove, onMouseOver, ...rest } = innerProps;\n\n  return (\n    <div\n      ref={innerRef}\n      className={cx(\n        styles.option,\n        isFocused && styles.optionFocused,\n        isSelected && styles.optionSelected,\n        data.isDisabled && styles.optionDisabled\n      )}\n      {...rest}\n      aria-label=\"Select option\"\n      title={data.title}\n    >\n      {icon && <Icon name={icon} className={styles.optionIcon} />}\n      {data.imgUrl && <img className={styles.optionImage} src={data.imgUrl} alt={data.label || String(data.value)} />}\n      <div className={styles.optionBody}>\n        <span>{renderOptionLabel ? renderOptionLabel(data) : children}</span>\n        {data.description && <div className={styles.optionDescription}>{data.description}</div>}\n        {data.component && <data.component />}\n      </div>\n    </div>\n  );\n};\n\nSelectMenuOptions.displayName = 'SelectMenuOptions';\n","import { css } from '@emotion/css';\nimport React, { PureComponent } from 'react';\nimport { GroupProps } from 'react-select';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory, withTheme2 } from '../../themes';\nimport { Themeable2 } from '../../types';\nimport { Icon } from '../Icon/Icon';\n\ninterface ExtendedGroupProps extends Omit<GroupProps<any, any>, 'theme'>, Themeable2 {\n  data: {\n    label: string;\n    expanded: boolean;\n    options: any[];\n  };\n}\n\ninterface State {\n  expanded: boolean;\n}\n\nconst getSelectOptionGroupStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    header: css({\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      justifyItems: 'center',\n      cursor: 'pointer',\n      padding: '7px 10px',\n      width: '100%',\n      borderBottom: `1px solid ${theme.colors.background.secondary}`,\n\n      '&:hover': {\n        color: theme.colors.text.maxContrast,\n      },\n    }),\n    label: css({\n      flexGrow: 1,\n    }),\n    icon: css({\n      paddingRight: '2px',\n    }),\n  };\n});\n\nclass UnthemedSelectOptionGroup extends PureComponent<ExtendedGroupProps, State> {\n  state = {\n    expanded: false,\n  };\n\n  componentDidMount() {\n    if (this.props.data.expanded) {\n      this.setState({ expanded: true });\n    } else if (this.props.selectProps && this.props.selectProps.value) {\n      const { value } = this.props.selectProps.value;\n\n      if (value && this.props.options.some((option) => option.value === value)) {\n        this.setState({ expanded: true });\n      }\n    }\n  }\n\n  componentDidUpdate(nextProps: ExtendedGroupProps) {\n    if (nextProps.selectProps.inputValue !== '') {\n      this.setState({ expanded: true });\n    }\n  }\n\n  onToggleChildren = () => {\n    this.setState((prevState) => ({\n      expanded: !prevState.expanded,\n    }));\n  };\n\n  render() {\n    const { children, label, theme } = this.props;\n    const { expanded } = this.state;\n    const styles = getSelectOptionGroupStyles(theme);\n\n    return (\n      <div>\n        {/*React Select doesn't support focusable option group headers, this will be skipped when using\n      the keyboard */}\n        <div className={styles.header} onClick={this.onToggleChildren} role=\"presentation\">\n          <span className={styles.label}>{label}</span>\n          <Icon className={styles.icon} name={expanded ? 'angle-up' : 'angle-down'} />\n        </div>\n        {expanded && children}\n      </div>\n    );\n  }\n}\n\nexport const SelectOptionGroup = withTheme2(UnthemedSelectOptionGroup);\n","import { useEffect, useRef, useState } from 'react';\n\ntype DelayOptions = {\n  // Minimal amount of time the switch will be on.\n  duration?: number;\n  // Delay after which switch will turn on.\n  delay?: number;\n};\n\n/**\n * Hook that delays changing of boolean switch to prevent too much time spent in \"on\" state. It is kind of a throttle\n * but you can specify different time for on and off throttling so this only allows a boolean values and also prefers\n * to stay \"off\" so turning \"on\" is always delayed while turning \"off\" is throttled.\n *\n * This is useful for showing loading elements to prevent it flashing too much in case of quick loading time or\n * prevent it flash if loaded state comes right after switch to loading.\n */\nexport function useDelayedSwitch(value: boolean, options: DelayOptions = {}): boolean {\n  const { duration = 250, delay = 250 } = options;\n\n  const [delayedValue, setDelayedValue] = useState(value);\n  const onStartTime = useRef<Date | undefined>();\n\n  useEffect(() => {\n    let timeout: ReturnType<typeof setTimeout> | undefined;\n    if (value) {\n      // If toggling to \"on\" state we always setTimeout no matter how long we have been \"off\".\n      timeout = setTimeout(() => {\n        onStartTime.current = new Date();\n        setDelayedValue(value);\n      }, delay);\n    } else {\n      // If toggling to \"off\" state we check how much time we were already \"on\".\n      const timeSpent = onStartTime.current ? Date.now() - onStartTime.current.valueOf() : 0;\n      const turnOff = () => {\n        onStartTime.current = undefined;\n        setDelayedValue(value);\n      };\n      if (timeSpent >= duration) {\n        // We already spent enough time \"on\" so change right away.\n        turnOff();\n      } else {\n        timeout = setTimeout(turnOff, duration - timeSpent);\n      }\n    }\n    return () => {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = undefined;\n      }\n    };\n  }, [value, duration, delay]);\n\n  return delayedValue;\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\n\ntype Props = {\n  children: React.ReactNode;\n  visible: boolean;\n  size: number;\n\n  duration?: number;\n  horizontal?: boolean;\n};\n\nexport function SlideOutTransition(props: Props) {\n  const { visible, children, duration = 250, horizontal, size } = props;\n  const styles = useStyles2(getStyles, duration, horizontal ? 'width' : 'height', size);\n\n  return (\n    <CSSTransition in={visible} mountOnEnter={true} unmountOnExit={true} timeout={duration} classNames={styles}>\n      {children}\n    </CSSTransition>\n  );\n}\n\nconst getStyles = (_theme: GrafanaTheme2, duration: number, measurement: 'width' | 'height', size: number) => ({\n  enter: css({\n    label: 'enter',\n    [`${measurement}`]: 0,\n    opacity: 0,\n  }),\n  enterActive: css({\n    label: 'enterActive',\n    [`${measurement}`]: `${size}px`,\n    opacity: 1,\n    transition: `opacity ${duration}ms ease-out, ${measurement} ${duration}ms ease-out`,\n  }),\n  exit: css({\n    label: 'exit',\n    [`${measurement}`]: `${size}px`,\n    opacity: 1,\n  }),\n  exitActive: css({\n    label: 'exitActive',\n    opacity: 0,\n    [`${measurement}`]: 0,\n    transition: `opacity ${duration}ms ease-out, ${measurement} ${duration}ms ease-out`,\n  }),\n});\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\nimport { components, GroupBase, SingleValueProps } from 'react-select';\n\nimport { GrafanaTheme2, SelectableValue, toIconName } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { useDelayedSwitch } from '../../utils/useDelayedSwitch';\nimport { Icon } from '../Icon/Icon';\nimport { Spinner } from '../Spinner/Spinner';\nimport { FadeTransition } from '../transitions/FadeTransition';\nimport { SlideOutTransition } from '../transitions/SlideOutTransition';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    singleValue: css({\n      label: 'singleValue',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      boxSizing: 'border-box',\n      maxWidth: '100%',\n      gridArea: '1 / 1 / 2 / 3',\n    }),\n    spinnerWrapper: css({\n      width: '16px',\n      height: '16px',\n      display: 'inline-block',\n      marginRight: '10px',\n      position: 'relative',\n      verticalAlign: 'middle',\n      overflow: 'hidden',\n    }),\n    spinnerIcon: css({\n      width: '100%',\n      height: '100%',\n      position: 'absolute',\n    }),\n    optionIcon: css({\n      marginRight: theme.spacing(1),\n      color: theme.colors.text.secondary,\n    }),\n    disabled: css({\n      color: theme.colors.text.disabled,\n    }),\n    isOpen: css({\n      color: theme.colors.text.disabled,\n    }),\n  };\n};\n\ntype StylesType = ReturnType<typeof getStyles>;\n\nexport type Props<T> = SingleValueProps<SelectableValue<T>, boolean, GroupBase<SelectableValue<T>>>;\n\nexport const SingleValue = <T extends unknown>(props: Props<T>) => {\n  const { children, data, isDisabled } = props;\n  const styles = useStyles2(getStyles);\n  const loading = useDelayedSwitch(data.loading || false, { delay: 250, duration: 750 });\n  const icon = data.icon ? toIconName(data.icon) : undefined;\n\n  return (\n    <components.SingleValue\n      {...props}\n      className={cx(styles.singleValue, isDisabled && styles.disabled, props.selectProps.menuIsOpen && styles.isOpen)}\n    >\n      {data.imgUrl ? (\n        <FadeWithImage loading={loading} imgUrl={data.imgUrl} styles={styles} alt={String(data.label ?? data.value)} />\n      ) : (\n        <>\n          <SlideOutTransition horizontal size={16} visible={loading} duration={150}>\n            <div className={styles.spinnerWrapper}>\n              <Spinner className={styles.spinnerIcon} inline />\n            </div>\n          </SlideOutTransition>\n          {icon && <Icon name={icon} role=\"img\" className={styles.optionIcon} />}\n        </>\n      )}\n\n      {!data.hideText && children}\n    </components.SingleValue>\n  );\n};\n\nconst FadeWithImage = (props: { loading: boolean; imgUrl: string; styles: StylesType; alt?: string }) => {\n  return (\n    <div className={props.styles.spinnerWrapper}>\n      <FadeTransition duration={150} visible={props.loading}>\n        <Spinner className={props.styles.spinnerIcon} inline />\n      </FadeTransition>\n      <FadeTransition duration={150} visible={!props.loading}>\n        <img className={props.styles.spinnerIcon} src={props.imgUrl} alt={props.alt} />\n      </FadeTransition>\n    </div>\n  );\n};\n","import { cx } from '@emotion/css';\nimport React, { Component, ReactNode } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { withTheme2 } from '../../themes/ThemeContext';\n\nimport { getSelectStyles } from './getSelectStyles';\n\nclass UnthemedValueContainer extends Component<any & { theme: GrafanaTheme2 }> {\n  render() {\n    const { children } = this.props;\n    const { selectProps } = this.props;\n\n    if (\n      selectProps &&\n      Array.isArray(children) &&\n      Array.isArray(children[0]) &&\n      selectProps.maxVisibleValues !== undefined &&\n      !(selectProps.showAllSelectedWhenOpen && selectProps.menuIsOpen)\n    ) {\n      const [valueChildren, ...otherChildren] = children;\n      const truncatedValues = valueChildren.slice(0, selectProps.maxVisibleValues);\n\n      return this.renderContainer([truncatedValues, ...otherChildren]);\n    }\n\n    return this.renderContainer(children);\n  }\n\n  renderContainer(children?: ReactNode) {\n    const { isMulti, theme, selectProps } = this.props;\n    const noWrap = this.props.selectProps?.noMultiValueWrap && !this.props.selectProps?.menuIsOpen;\n    const styles = getSelectStyles(theme);\n    const dataTestid = selectProps['data-testid'];\n    const className = cx(\n      styles.valueContainer,\n      isMulti && styles.valueContainerMulti,\n      noWrap && styles.valueContainerMultiNoWrap\n    );\n\n    return (\n      <div data-testid={dataTestid} className={className}>\n        {children}\n      </div>\n    );\n  }\n}\n\nexport const ValueContainer = withTheme2(UnthemedValueContainer);\n","import { useMemo } from 'react';\nimport { CSSObjectWithLabel } from 'react-select';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nexport default function resetSelectStyles(theme: GrafanaTheme2) {\n  return {\n    clearIndicator: () => ({}),\n    container: () => ({}),\n    control: () => ({}),\n    dropdownIndicator: () => ({}),\n    group: () => ({}),\n    groupHeading: () => ({}),\n    indicatorsContainer: () => ({}),\n    indicatorSeparator: () => ({}),\n    input: function (originalStyles: CSSObjectWithLabel): CSSObjectWithLabel {\n      return {\n        ...originalStyles,\n        color: 'inherit',\n        margin: 0,\n        padding: 0,\n        // Set an explicit z-index here to ensure this element always overlays the singleValue\n        zIndex: 1,\n      };\n    },\n    loadingIndicator: () => ({}),\n    loadingMessage: () => ({}),\n    menu: () => ({}),\n    menuList: ({ maxHeight }: { maxHeight: number }) => ({\n      maxHeight,\n    }),\n    multiValue: () => ({}),\n    multiValueLabel: () => ({\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n    }),\n    multiValueRemove: () => ({}),\n    noOptionsMessage: () => ({}),\n    option: () => ({}),\n    placeholder: (originalStyles: CSSObjectWithLabel): CSSObjectWithLabel => ({\n      ...originalStyles,\n      color: theme.colors.text.secondary,\n    }),\n    singleValue: () => ({}),\n    valueContainer: () => ({}),\n  };\n}\n\nexport function useCustomSelectStyles(theme: GrafanaTheme2, width: number | string | undefined) {\n  return useMemo(() => {\n    return {\n      ...resetSelectStyles(theme),\n      menuPortal: (base: any) => {\n        // Would like to correct top position when menu is placed bottom, but have props are not sent to this style function.\n        // Only state is. https://github.com/JedWatson/react-select/blob/master/packages/react-select/src/components/Menu.tsx#L605\n        return {\n          ...base,\n          zIndex: theme.zIndex.portal,\n        };\n      },\n      //These are required for the menu positioning to function\n      menu: ({ top, bottom, position }: any) => {\n        return {\n          top,\n          bottom,\n          position,\n          minWidth: '100%',\n          zIndex: theme.zIndex.dropdown,\n        };\n      },\n      container: () => ({\n        width: width ? theme.spacing(width) : '100%',\n        display: width === 'auto' ? 'inline-flex' : 'flex',\n      }),\n      option: (provided: any, state: any) => ({\n        ...provided,\n        opacity: state.isDisabled ? 0.5 : 1,\n      }),\n    };\n  }, [theme, width]);\n}\n","import { SelectableValue } from '@grafana/data';\n\nimport { SelectableOptGroup } from './types';\n\n/**\n * Normalize the value format to SelectableValue[] | []. Only used for single select\n */\nexport const cleanValue = (\n  value: unknown,\n  options: Array<SelectableValue | SelectableOptGroup | SelectableOptGroup[]>\n) => {\n  if (Array.isArray(value)) {\n    const filtered = value.filter(Boolean);\n    return filtered?.length ? filtered : undefined;\n  }\n  if (typeof value === 'object') {\n    // we want to allow null through into here, so the Select value can be unset\n    return [value];\n  }\n  if (typeof value === 'string' || typeof value === 'number') {\n    const selectedValue = findSelectedValue(value, options);\n    if (selectedValue) {\n      return [selectedValue];\n    }\n  }\n  return undefined;\n};\n\n/**\n * Find the label for a string|number value inside array of options or optgroups\n */\nexport const findSelectedValue = (\n  value: string | number,\n  options: Array<SelectableValue | SelectableOptGroup | SelectableOptGroup[]>\n): SelectableValue | null => {\n  for (const option of options) {\n    if ('options' in option) {\n      let found = findSelectedValue(value, option.options);\n      if (found) {\n        return found;\n      }\n    } else if ('value' in option && option.value === value) {\n      return option;\n    }\n  }\n\n  return null;\n};\n\n/**\n * Omit descriptions from an array of options\n */\nexport const omitDescriptions = (options: SelectableValue[]): SelectableValue[] => {\n  return options.map(({ description, ...rest }) => rest);\n};\n","import { t } from 'i18next';\nimport React, { ComponentProps, useCallback, useEffect, useRef, useState } from 'react';\nimport { default as ReactSelect, IndicatorsContainerProps, Props as ReactSelectProps } from 'react-select';\nimport { default as ReactAsyncSelect } from 'react-select/async';\nimport { default as AsyncCreatable } from 'react-select/async-creatable';\nimport Creatable from 'react-select/creatable';\n\nimport { SelectableValue, toOption } from '@grafana/data';\n\nimport { useTheme2 } from '../../themes';\nimport { Icon } from '../Icon/Icon';\nimport { Spinner } from '../Spinner/Spinner';\n\nimport { DropdownIndicator } from './DropdownIndicator';\nimport { IndicatorsContainer } from './IndicatorsContainer';\nimport { InputControl } from './InputControl';\nimport { MultiValueContainer, MultiValueRemove } from './MultiValue';\nimport { SelectContainer } from './SelectContainer';\nimport { SelectMenu, SelectMenuOptions, VirtualizedSelectMenu } from './SelectMenu';\nimport { SelectOptionGroup } from './SelectOptionGroup';\nimport { SingleValue } from './SingleValue';\nimport { ValueContainer } from './ValueContainer';\nimport { getSelectStyles } from './getSelectStyles';\nimport { useCustomSelectStyles } from './resetSelectStyles';\nimport { ActionMeta, InputActionMeta, SelectBaseProps } from './types';\nimport { cleanValue, findSelectedValue, omitDescriptions } from './utils';\n\nconst CustomControl = (props: any) => {\n  const {\n    children,\n    innerProps,\n    selectProps: { menuIsOpen, onMenuClose, onMenuOpen },\n    isFocused,\n    isMulti,\n    getValue,\n    innerRef,\n  } = props;\n  const selectProps = props.selectProps as SelectBaseProps<any>;\n\n  if (selectProps.renderControl) {\n    return React.createElement(selectProps.renderControl, {\n      isOpen: menuIsOpen,\n      value: isMulti ? getValue() : getValue()[0],\n      ref: innerRef,\n      onClick: menuIsOpen ? onMenuClose : onMenuOpen,\n      onBlur: onMenuClose,\n      disabled: !!selectProps.disabled,\n      invalid: !!selectProps.invalid,\n    });\n  }\n\n  return (\n    <InputControl\n      ref={innerRef}\n      innerProps={innerProps}\n      prefix={selectProps.prefix}\n      focused={isFocused}\n      invalid={!!selectProps.invalid}\n      disabled={!!selectProps.disabled}\n    >\n      {children}\n    </InputControl>\n  );\n};\n\ninterface SelectPropsWithExtras extends ReactSelectProps {\n  maxVisibleValues?: number | undefined;\n  showAllSelectedWhenOpen: boolean;\n  noMultiValueWrap?: boolean;\n}\n\nexport function SelectBase<T, Rest = {}>({\n  allowCustomValue = false,\n  allowCreateWhileLoading = false,\n  'aria-label': ariaLabel,\n  'data-testid': dataTestid,\n  autoFocus = false,\n  backspaceRemovesValue = true,\n  blurInputOnSelect,\n  cacheOptions,\n  className,\n  closeMenuOnSelect = true,\n  components,\n  createOptionPosition = 'last',\n  defaultOptions,\n  defaultValue,\n  disabled = false,\n  filterOption,\n  formatCreateLabel,\n  getOptionLabel,\n  getOptionValue,\n  inputValue,\n  invalid,\n  isClearable = false,\n  id,\n  isLoading = false,\n  isMulti = false,\n  inputId,\n  isOpen,\n  isOptionDisabled,\n  isSearchable = true,\n  loadOptions,\n  loadingMessage = 'Loading options...',\n  maxMenuHeight = 300,\n  minMenuHeight,\n  maxVisibleValues,\n  menuPlacement = 'auto',\n  menuPosition,\n  menuShouldPortal = true,\n  noOptionsMessage = t('grafana-ui.select.no-options-label', 'No options found'),\n  onBlur,\n  onChange,\n  onCloseMenu,\n  onCreateOption,\n  onInputChange,\n  onKeyDown,\n  onMenuScrollToBottom,\n  onMenuScrollToTop,\n  onOpenMenu,\n  onFocus,\n  openMenuOnFocus = false,\n  options = [],\n  placeholder = t('grafana-ui.select.placeholder', 'Choose'),\n  prefix,\n  renderControl,\n  showAllSelectedWhenOpen = true,\n  tabSelectsValue = true,\n  value,\n  virtualized = false,\n  noMultiValueWrap,\n  width,\n  isValidNewOption,\n  formatOptionLabel,\n  hideSelectedOptions,\n  ...rest\n}: SelectBaseProps<T> & Rest) {\n  const theme = useTheme2();\n  const styles = getSelectStyles(theme);\n\n  const reactSelectRef = useRef<{ controlRef: HTMLElement }>(null);\n  const [closeToBottom, setCloseToBottom] = useState<boolean>(false);\n  const selectStyles = useCustomSelectStyles(theme, width);\n  const [hasInputValue, setHasInputValue] = useState<boolean>(!!inputValue);\n\n  // Infer the menu position for asynchronously loaded options. menuPlacement=\"auto\" doesn't work when the menu is\n  // automatically opened when the component is created (it happens in SegmentSelect by setting menuIsOpen={true}).\n  // We can remove this workaround when the bug in react-select is fixed: https://github.com/JedWatson/react-select/issues/4936\n  // Note: we use useEffect instead of hooking into onMenuOpen due to another bug: https://github.com/JedWatson/react-select/issues/3375\n  useEffect(() => {\n    if (\n      loadOptions &&\n      isOpen &&\n      reactSelectRef.current &&\n      reactSelectRef.current.controlRef &&\n      menuPlacement === 'auto'\n    ) {\n      const distance = window.innerHeight - reactSelectRef.current.controlRef.getBoundingClientRect().bottom;\n      setCloseToBottom(distance < maxMenuHeight);\n    }\n  }, [maxMenuHeight, menuPlacement, loadOptions, isOpen]);\n\n  const onChangeWithEmpty = useCallback(\n    (value: SelectableValue<T>, action: ActionMeta) => {\n      if (isMulti && (value === undefined || value === null)) {\n        return onChange([], action);\n      }\n      onChange(value, action);\n    },\n    [isMulti, onChange]\n  );\n\n  let ReactSelectComponent = ReactSelect;\n\n  const creatableProps: ComponentProps<typeof Creatable<SelectableValue<T>>> = {};\n  let asyncSelectProps: any = {};\n  let selectedValue;\n  if (isMulti && loadOptions) {\n    selectedValue = value as any;\n  } else {\n    // If option is passed as a plain value (value property from SelectableValue property)\n    // we are selecting the corresponding value from the options\n    if (isMulti && value && Array.isArray(value) && !loadOptions) {\n      selectedValue = value.map((v) => {\n        // @ts-ignore\n        const selectableValue = findSelectedValue(v.value ?? v, options);\n        // If the select allows custom values there likely won't be a selectableValue in options\n        // so we must return a new selectableValue\n        if (!allowCustomValue || selectableValue) {\n          return selectableValue;\n        }\n        return typeof v === 'string' ? toOption(v) : v;\n      });\n    } else if (loadOptions) {\n      const hasValue = defaultValue || value;\n      selectedValue = hasValue ? [hasValue] : [];\n    } else {\n      selectedValue = cleanValue(value, options);\n    }\n  }\n\n  const commonSelectProps = {\n    'aria-label': ariaLabel,\n    'data-testid': dataTestid,\n    autoFocus,\n    backspaceRemovesValue,\n    blurInputOnSelect,\n    captureMenuScroll: onMenuScrollToBottom || onMenuScrollToTop,\n    closeMenuOnSelect,\n    // We don't want to close if we're actually scrolling the menu\n    // So only close if none of the parents are the select menu itself\n    defaultValue,\n    // Also passing disabled, as this is the new Select API, and I want to use this prop instead of react-select's one\n    disabled,\n    // react-select always tries to filter the options even at first menu open, which is a problem for performance\n    // in large lists. So we set it to not try to filter the options if there is no input value.\n    filterOption: hasInputValue ? filterOption : null,\n    getOptionLabel,\n    getOptionValue,\n    hideSelectedOptions,\n    inputValue,\n    invalid,\n    isClearable,\n    id,\n    // Passing isDisabled as react-select accepts this prop\n    isDisabled: disabled,\n    isLoading,\n    isMulti,\n    inputId,\n    isOptionDisabled,\n    isSearchable,\n    maxMenuHeight,\n    minMenuHeight,\n    maxVisibleValues,\n    menuIsOpen: isOpen,\n    menuPlacement: menuPlacement === 'auto' && closeToBottom ? 'top' : menuPlacement,\n    menuPosition,\n    menuShouldBlockScroll: true,\n    menuPortalTarget: menuShouldPortal && typeof document !== 'undefined' ? document.body : undefined,\n    menuShouldScrollIntoView: false,\n    onBlur,\n    onChange: onChangeWithEmpty,\n    onInputChange: (val: string, actionMeta: InputActionMeta) => {\n      setHasInputValue(!!val);\n      onInputChange?.(val, actionMeta);\n    },\n    onKeyDown,\n    onMenuClose: onCloseMenu,\n    onMenuOpen: onOpenMenu,\n    onMenuScrollToBottom: onMenuScrollToBottom,\n    onMenuScrollToTop: onMenuScrollToTop,\n    onFocus,\n    formatOptionLabel,\n    openMenuOnFocus,\n    options: virtualized ? omitDescriptions(options) : options,\n    placeholder,\n    prefix,\n    renderControl,\n    showAllSelectedWhenOpen,\n    tabSelectsValue,\n    value: isMulti ? selectedValue : selectedValue?.[0],\n    noMultiValueWrap,\n  };\n\n  if (allowCustomValue) {\n    ReactSelectComponent = Creatable as any;\n    creatableProps.allowCreateWhileLoading = allowCreateWhileLoading;\n    creatableProps.formatCreateLabel = formatCreateLabel ?? defaultFormatCreateLabel;\n    creatableProps.onCreateOption = onCreateOption;\n    creatableProps.createOptionPosition = createOptionPosition;\n    creatableProps.isValidNewOption = isValidNewOption;\n  }\n\n  // Instead of having AsyncSelect, as a separate component we render ReactAsyncSelect\n  if (loadOptions) {\n    ReactSelectComponent = (allowCustomValue ? AsyncCreatable : ReactAsyncSelect) as any;\n    asyncSelectProps = {\n      loadOptions,\n      cacheOptions,\n      defaultOptions,\n    };\n  }\n\n  const SelectMenuComponent = virtualized ? VirtualizedSelectMenu : SelectMenu;\n\n  return (\n    <>\n      <ReactSelectComponent\n        ref={reactSelectRef}\n        components={{\n          MenuList: SelectMenuComponent,\n          Group: SelectOptionGroup,\n          ValueContainer,\n          IndicatorsContainer: CustomIndicatorsContainer,\n          IndicatorSeparator: IndicatorSeparator,\n          Control: CustomControl,\n          Option: SelectMenuOptions,\n          ClearIndicator(props: any) {\n            const { clearValue } = props;\n            return (\n              <Icon\n                name=\"times\"\n                role=\"button\"\n                aria-label=\"select-clear-value\"\n                className={styles.singleValueRemove}\n                onMouseDown={(e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  clearValue();\n                }}\n              />\n            );\n          },\n          LoadingIndicator() {\n            return <Spinner inline />;\n          },\n          LoadingMessage() {\n            return <div className={styles.loadingMessage}>{loadingMessage}</div>;\n          },\n          NoOptionsMessage() {\n            return (\n              <div className={styles.loadingMessage} aria-label=\"No options provided\">\n                {noOptionsMessage}\n              </div>\n            );\n          },\n          DropdownIndicator: DropdownIndicator,\n          SingleValue(props: any) {\n            return <SingleValue {...props} isDisabled={disabled} />;\n          },\n          SelectContainer,\n          MultiValueContainer: MultiValueContainer,\n          MultiValueRemove: !disabled ? MultiValueRemove : () => null,\n          ...components,\n        }}\n        styles={selectStyles}\n        className={className}\n        {...commonSelectProps}\n        {...creatableProps}\n        {...asyncSelectProps}\n        {...rest}\n      />\n    </>\n  );\n}\n\nfunction defaultFormatCreateLabel(input: string) {\n  return (\n    <div style={{ display: 'flex', gap: '8px', alignItems: 'center' }}>\n      <div>{input}</div>\n      <div style={{ flexGrow: 1 }} />\n      <div className=\"muted small\" style={{ display: 'flex', gap: '8px', alignItems: 'center' }}>\n        Hit enter to add\n      </div>\n    </div>\n  );\n}\n\ntype CustomIndicatorsContainerProps = IndicatorsContainerProps & {\n  selectProps: SelectPropsWithExtras;\n  children: React.ReactNode;\n};\n\nfunction CustomIndicatorsContainer(props: CustomIndicatorsContainerProps) {\n  const { showAllSelectedWhenOpen, maxVisibleValues, menuIsOpen } = props.selectProps;\n\n  const value = props.getValue();\n\n  if (maxVisibleValues !== undefined && Array.isArray(props.children)) {\n    const selectedValuesCount = value.length;\n\n    if (selectedValuesCount > maxVisibleValues && !(showAllSelectedWhenOpen && menuIsOpen)) {\n      const indicatorChildren = [...props.children];\n      indicatorChildren.splice(\n        -1,\n        0,\n        <span key=\"excess-values\" id=\"excess-values\">\n          (+{selectedValuesCount - maxVisibleValues})\n        </span>\n      );\n\n      return <IndicatorsContainer {...props}>{indicatorChildren}</IndicatorsContainer>;\n    }\n  }\n\n  return <IndicatorsContainer {...props} />;\n}\n\nfunction IndicatorSeparator() {\n  return <></>;\n}\n","import React from 'react';\n\nimport { SelectableValue } from '@grafana/data';\n\nimport { SelectBase } from './SelectBase';\nimport { SelectContainer, SelectContainerProps } from './SelectContainer';\nimport {\n  SelectCommonProps,\n  MultiSelectCommonProps,\n  SelectAsyncProps,\n  VirtualizedSelectProps,\n  VirtualizedSelectAsyncProps,\n} from './types';\n\nexport function Select<T, Rest = {}>(props: SelectCommonProps<T> & Rest) {\n  return <SelectBase {...props} />;\n}\n\nexport function MultiSelect<T, Rest = {}>(props: MultiSelectCommonProps<T> & Rest) {\n  // @ts-ignore\n  return <SelectBase {...props} isMulti />;\n}\n\nexport interface AsyncSelectProps<T> extends Omit<SelectCommonProps<T>, 'options'>, SelectAsyncProps<T> {\n  // AsyncSelect has options stored internally. We cannot enable plain values as we don't have access to the fetched options\n  value?: T | SelectableValue<T> | null;\n}\n\nexport function AsyncSelect<T, Rest = {}>(props: AsyncSelectProps<T> & Rest) {\n  return <SelectBase {...props} />;\n}\n\nexport function VirtualizedSelect<T, Rest = {}>(props: VirtualizedSelectProps<T> & Rest) {\n  return <SelectBase virtualized {...props} />;\n}\n\nexport function AsyncVirtualizedSelect<T, Rest = {}>(props: VirtualizedSelectAsyncProps<T> & Rest) {\n  return <SelectBase virtualized {...props} />;\n}\n\ninterface AsyncMultiSelectProps<T> extends Omit<MultiSelectCommonProps<T>, 'options'>, SelectAsyncProps<T> {\n  // AsyncSelect has options stored internally. We cannot enable plain values as we don't have access to the fetched options\n  value?: Array<SelectableValue<T>>;\n}\n\nexport function AsyncMultiSelect<T, Rest = {}>(props: AsyncMultiSelectProps<T> & Rest) {\n  // @ts-ignore\n  return <SelectBase {...props} isMulti />;\n}\n\nexport { SelectContainer, type SelectContainerProps };\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\nimport { components, ContainerProps as BaseContainerProps, GroupBase } from 'react-select';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes/ThemeContext';\nimport { getFocusStyles } from '../../themes/mixins';\nimport { sharedInputStyle } from '../Forms/commonStyles';\nimport { getInputStyles } from '../Input/Input';\n\nimport { CustomComponentProps } from './types';\n\n// prettier-ignore\nexport type SelectContainerProps<Option, isMulti extends boolean, Group extends GroupBase<Option>> =\n  BaseContainerProps<Option, isMulti, Group> & CustomComponentProps<Option, isMulti, Group>;\n\nexport const SelectContainer = <Option, isMulti extends boolean, Group extends GroupBase<Option>>(\n  props: SelectContainerProps<Option, isMulti, Group>\n) => {\n  const {\n    isDisabled,\n    isFocused,\n    children,\n    selectProps: { invalid = false },\n  } = props;\n\n  const styles = useStyles2(getSelectContainerStyles, isFocused, isDisabled, invalid);\n\n  return (\n    <components.SelectContainer {...props} className={cx(styles.wrapper, props.className)}>\n      {children}\n    </components.SelectContainer>\n  );\n};\n\nconst getSelectContainerStyles = (theme: GrafanaTheme2, focused: boolean, disabled: boolean, invalid: boolean) => {\n  const styles = getInputStyles({ theme, invalid });\n\n  return {\n    wrapper: cx(\n      styles.wrapper,\n      sharedInputStyle(theme, invalid),\n      focused && css(getFocusStyles(theme)),\n      disabled && styles.inputDisabled,\n      css({\n        position: 'relative',\n        boxSizing: 'border-box',\n        /* The display property is set by the styles prop in SelectBase because it's dependant on the width prop  */\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        alignItems: 'stretch',\n        justifyContent: 'space-between',\n        minHeight: '32px',\n        height: 'auto',\n        maxWidth: '100%',\n\n        /* Input padding is applied to the InputControl so the menu is aligned correctly */\n        padding: 0,\n        cursor: disabled ? 'not-allowed' : 'pointer',\n      })\n    ),\n  };\n};\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory } from '../../themes/stylesFactory';\n\nexport const getSelectStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    menu: css({\n      label: 'grafana-select-menu',\n      background: theme.components.dropdown.background,\n      boxShadow: theme.shadows.z3,\n      position: 'relative',\n      minWidth: '100%',\n      zIndex: 1,\n    }),\n    option: css({\n      label: 'grafana-select-option',\n      padding: '8px',\n      display: 'flex',\n      alignItems: 'center',\n      flexDirection: 'row',\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n      cursor: 'pointer',\n      borderLeft: '2px solid transparent',\n\n      '&:hover': {\n        background: theme.colors.action.hover,\n        '@media (forced-colors: active), (prefers-contrast: more)': {\n          border: `1px solid ${theme.colors.primary.border}`,\n        },\n      },\n    }),\n    optionIcon: css({\n      marginRight: theme.spacing(1),\n    }),\n    optionImage: css({\n      label: 'grafana-select-option-image',\n      width: '16px',\n      marginRight: '10px',\n    }),\n    optionDescription: css({\n      label: 'grafana-select-option-description',\n      fontWeight: 'normal',\n      fontSize: theme.typography.size.sm,\n      color: theme.colors.text.secondary,\n      whiteSpace: 'normal',\n      lineHeight: theme.typography.body.lineHeight,\n    }),\n    optionBody: css({\n      label: 'grafana-select-option-body',\n      display: 'flex',\n      fontWeight: theme.typography.fontWeightMedium,\n      flexDirection: 'column',\n      flexGrow: 1,\n    }),\n    optionFocused: css({\n      label: 'grafana-select-option-focused',\n      background: theme.colors.action.focus,\n      '@media (forced-colors: active), (prefers-contrast: more)': {\n        border: `1px solid ${theme.colors.primary.border}`,\n      },\n    }),\n    optionSelected: css({\n      background: theme.colors.action.selected,\n    }),\n    optionDisabled: css({\n      label: 'grafana-select-option-disabled',\n      backgroundColor: theme.colors.action.disabledBackground,\n      color: theme.colors.action.disabledText,\n      cursor: 'not-allowed',\n    }),\n    singleValue: css({\n      label: 'grafana-select-single-value',\n      color: theme.components.input.text,\n      gridArea: '1 / 1 / 2 / 3',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      boxSizing: 'border-box',\n      maxWidth: '100%',\n    }),\n    valueContainer: css({\n      label: 'grafana-select-value-container',\n      alignItems: 'center',\n      display: 'grid',\n      position: 'relative',\n      boxSizing: 'border-box',\n      flex: '1 1 0%',\n      outline: 'none',\n      overflow: 'hidden',\n    }),\n    valueContainerMulti: css({\n      label: 'grafana-select-value-container-multi',\n      flexWrap: 'wrap',\n      display: 'flex',\n    }),\n    valueContainerMultiNoWrap: css({\n      flexWrap: 'nowrap',\n    }),\n    loadingMessage: css({\n      label: 'grafana-select-loading-message',\n      padding: theme.spacing(1),\n      textAlign: 'center',\n      width: '100%',\n    }),\n    multiValueContainer: css({\n      label: 'grafana-select-multi-value-container',\n      display: 'flex',\n      alignItems: 'center',\n      lineHeight: 1,\n      background: theme.colors.background.secondary,\n      borderRadius: theme.shape.radius.default,\n      margin: theme.spacing(0.25, 1, 0.25, 0),\n      padding: theme.spacing(0.25, 0, 0.25, 1),\n      color: theme.colors.text.primary,\n      fontSize: theme.typography.size.sm,\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n\n      '&:hover': {\n        background: theme.colors.emphasize(theme.colors.background.secondary),\n      },\n    }),\n    multiValueRemove: css({\n      label: 'grafana-select-multi-value-remove',\n      margin: theme.spacing(0, 0.5),\n      cursor: 'pointer',\n      svg: {\n        marginBottom: 0,\n      },\n    }),\n    singleValueRemove: css({\n      cursor: 'pointer',\n      '&:hover': {\n        color: theme.colors.text.primary,\n      },\n    }),\n  };\n});\n","import { availableIconsIndex, Field, FieldType, IconName } from '@grafana/data';\n\nimport { ComponentSize } from './size';\n\n// Exported from here for backwards compatibility\nexport type { IconName } from '@grafana/data';\nexport { toIconName } from '@grafana/data';\n\nexport type IconType = 'mono' | 'default' | 'solid';\nexport type IconSize = ComponentSize | 'xl' | 'xxl' | 'xxxl';\nexport const isIconSize = (value: string): value is IconSize => {\n  return ['xs', 'sm', 'md', 'lg', 'xl', 'xxl', 'xxxl'].includes(value);\n};\n\n// function remains for backwards compatibility\nexport const getAvailableIcons = () => Object.keys(availableIconsIndex);\n\n/**\n * Get the icon for a given field\n */\nexport function getFieldTypeIcon(field?: Field): IconName {\n  return getFieldTypeIconName(field?.type);\n}\n\n/** Get an icon for a given field type  */\nexport function getFieldTypeIconName(type?: FieldType): IconName {\n  if (type) {\n    switch (type) {\n      case FieldType.time:\n        return 'clock-nine';\n      case FieldType.string:\n        return 'font';\n      case FieldType.number:\n        return 'calculator-alt';\n      case FieldType.boolean:\n        return 'toggle-on';\n      case FieldType.trace:\n        return 'info-circle';\n      case FieldType.enum:\n        return 'list-ol';\n      case FieldType.geo:\n        return 'map-marker';\n      case FieldType.other:\n        return 'brackets-curly';\n    }\n  }\n  return 'question-circle';\n}\n","import { cx, css } from '@emotion/css';\nimport React from 'react';\nimport SVG from 'react-inlinesvg';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { IconSize, isIconSize } from '../../types';\nimport { Icon } from '../Icon/Icon';\nimport { getIconRoot, getIconSubDir } from '../Icon/utils';\n\nexport interface Props {\n  className?: string;\n  style?: React.CSSProperties;\n  iconClassName?: string;\n  inline?: boolean;\n  size?: IconSize;\n}\n\n/**\n * @deprecated\n * use a predefined size, e.g. 'md' or 'lg' instead\n */\ninterface PropsWithDeprecatedSize extends Omit<Props, 'size'> {\n  size?: number | string;\n}\n\n/**\n * @public\n */\nexport const Spinner = ({\n  className,\n  inline = false,\n  iconClassName,\n  style,\n  size = 'md',\n}: Props | PropsWithDeprecatedSize) => {\n  const styles = useStyles2(getStyles);\n\n  const deprecatedStyles = useStyles2(getDeprecatedStyles, size);\n\n  // this entire if statement is handling the deprecated size prop\n  // TODO remove once we fully remove the deprecated type\n  if (typeof size !== 'string' || !isIconSize(size)) {\n    const iconRoot = getIconRoot();\n    const iconName = 'spinner';\n    const subDir = getIconSubDir(iconName, 'default');\n    const svgPath = `${iconRoot}${subDir}/${iconName}.svg`;\n    return (\n      <div\n        data-testid=\"Spinner\"\n        style={style}\n        className={cx(\n          {\n            [styles.inline]: inline,\n          },\n          deprecatedStyles.wrapper,\n          className\n        )}\n      >\n        <SVG\n          src={svgPath}\n          width={size}\n          height={size}\n          className={cx('fa-spin', deprecatedStyles.icon, className)}\n          style={style}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      data-testid=\"Spinner\"\n      style={style}\n      className={cx(\n        {\n          [styles.inline]: inline,\n        },\n        className\n      )}\n    >\n      <Icon className={cx('fa-spin', iconClassName)} name=\"spinner\" size={size} aria-label=\"loading spinner\" />\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  inline: css({\n    display: 'inline-block',\n  }),\n});\n\n// TODO remove once we fully remove the deprecated type\nconst getDeprecatedStyles = (theme: GrafanaTheme2, size: number | string) => ({\n  wrapper: css({\n    fontSize: typeof size === 'string' ? size : `${size}px`,\n  }),\n  icon: css({\n    display: 'inline-block',\n    fill: 'currentColor',\n    flexShrink: 0,\n    label: 'Icon',\n    // line-height: 0; is needed for correct icon alignment in Safari\n    lineHeight: 0,\n    verticalAlign: 'middle',\n  }),\n});\n","import { css, cx } from '@emotion/css';\nimport { uniqueId } from 'lodash';\nimport React, { HTMLProps, useRef } from 'react';\n\nimport { GrafanaTheme2, deprecationWarning } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { getFocusStyles, getMouseFocusStyles } from '../../themes/mixins';\n\nexport interface Props extends Omit<HTMLProps<HTMLInputElement>, 'value'> {\n  value?: boolean;\n  /** Make inline switch's background and border transparent */\n  transparent?: boolean;\n  /** Show an invalid state around the input */\n  invalid?: boolean;\n}\n\nexport const Switch = React.forwardRef<HTMLInputElement, Props>(\n  ({ value, checked, onChange, id, label, disabled, invalid = false, ...inputProps }, ref) => {\n    if (checked) {\n      deprecationWarning('Switch', 'checked prop', 'value');\n    }\n\n    const styles = useStyles2(getSwitchStyles);\n    const switchIdRef = useRef(id ? id : uniqueId('switch-'));\n\n    return (\n      <div className={cx(styles.switch, invalid && styles.invalid)}>\n        <input\n          type=\"checkbox\"\n          disabled={disabled}\n          checked={value}\n          onChange={(event) => {\n            !disabled && onChange?.(event);\n          }}\n          id={switchIdRef.current}\n          {...inputProps}\n          ref={ref}\n        />\n        <label htmlFor={switchIdRef.current} aria-label={label ?? 'Toggle switch'} />\n      </div>\n    );\n  }\n);\n\nSwitch.displayName = 'Switch';\n\nexport interface InlineSwitchProps extends Props {\n  showLabel?: boolean;\n}\n\nexport const InlineSwitch = React.forwardRef<HTMLInputElement, InlineSwitchProps>(\n  ({ transparent, className, showLabel, label, value, id, invalid, ...props }, ref) => {\n    const styles = useStyles2(getSwitchStyles, transparent);\n\n    return (\n      <div\n        className={cx(styles.inlineContainer, className, props.disabled && styles.disabled, invalid && styles.invalid)}\n      >\n        {showLabel && (\n          <label\n            htmlFor={id}\n            className={cx(styles.inlineLabel, value && styles.inlineLabelEnabled, 'inline-switch-label')}\n          >\n            {label}\n          </label>\n        )}\n        <Switch {...props} id={id} label={label} ref={ref} value={value} />\n      </div>\n    );\n  }\n);\n\nInlineSwitch.displayName = 'Switch';\n\nconst getSwitchStyles = (theme: GrafanaTheme2, transparent?: boolean) => ({\n  switch: css({\n    width: '32px',\n    height: '16px',\n    position: 'relative',\n\n    input: {\n      opacity: 0,\n      left: '-100vw',\n      zIndex: -1000,\n      position: 'absolute',\n\n      '&:checked + label': {\n        background: theme.colors.primary.main,\n        borderColor: theme.colors.primary.main,\n\n        '&:hover': {\n          background: theme.colors.primary.shade,\n        },\n\n        '&::after': {\n          transform: 'translate3d(18px, -50%, 0)',\n          background: theme.colors.primary.contrastText,\n        },\n      },\n\n      '&:disabled + label': {\n        background: theme.colors.action.disabledBackground,\n        borderColor: theme.colors.border.weak,\n        cursor: 'not-allowed',\n\n        '&:hover': {\n          background: theme.colors.action.disabledBackground,\n        },\n      },\n\n      '&:disabled:checked + label': {\n        '&::after': {\n          background: theme.colors.text.disabled,\n        },\n      },\n\n      '&:focus + label, &:focus-visible + label': getFocusStyles(theme),\n\n      '&:focus:not(:focus-visible) + label': getMouseFocusStyles(theme),\n    },\n\n    label: {\n      width: '100%',\n      height: '100%',\n      cursor: 'pointer',\n      borderRadius: theme.shape.radius.pill,\n      background: theme.components.input.background,\n      border: `1px solid ${theme.components.input.borderColor}`,\n      transition: 'all 0.3s ease',\n\n      '&:hover': {\n        borderColor: theme.components.input.borderHover,\n      },\n\n      '&::after': {\n        position: 'absolute',\n        display: 'block',\n        content: '\"\"',\n        width: '12px',\n        height: '12px',\n        borderRadius: theme.shape.radius.circle,\n        background: theme.colors.text.secondary,\n        boxShadow: theme.shadows.z1,\n        top: '50%',\n        transform: 'translate3d(2px, -50%, 0)',\n        transition: 'transform 0.2s cubic-bezier(0.19, 1, 0.22, 1)',\n\n        '@media (forced-colors: active)': {\n          border: '1px solid transparent',\n        },\n      },\n    },\n  }),\n  inlineContainer: css({\n    padding: theme.spacing(0, 1),\n    height: theme.spacing(theme.components.height.md),\n    display: 'inline-flex',\n    alignItems: 'center',\n    background: transparent ? 'transparent' : theme.components.input.background,\n    border: `1px solid ${transparent ? 'transparent' : theme.components.input.borderColor}`,\n    borderRadius: theme.shape.radius.default,\n\n    '&:hover': {\n      border: `1px solid ${transparent ? 'transparent' : theme.components.input.borderHover}`,\n\n      '.inline-switch-label': {\n        color: theme.colors.text.primary,\n      },\n    },\n  }),\n  disabled: css({\n    backgroundColor: 'rgba(204, 204, 220, 0.04)',\n    color: 'rgba(204, 204, 220, 0.6)',\n    border: '1px solid rgba(204, 204, 220, 0.04)',\n  }),\n  inlineLabel: css({\n    cursor: 'pointer',\n    paddingRight: theme.spacing(1),\n    color: theme.colors.text.secondary,\n    whiteSpace: 'nowrap',\n  }),\n  inlineLabelEnabled: css({\n    color: theme.colors.text.primary,\n  }),\n  invalid: css({\n    'input + label, input:checked + label, input:hover + label': {\n      border: `1px solid ${theme.colors.error.border}`,\n    },\n  }),\n});\n","import { css } from '@emotion/css';\nimport { Placement } from '@floating-ui/react';\n\nimport { colorManipulator, GrafanaTheme2 } from '@grafana/data';\n\nimport { TooltipPlacement } from '../components/Tooltip';\n\nexport function getPlacement(placement?: TooltipPlacement): Placement {\n  switch (placement) {\n    case 'auto':\n      return 'bottom';\n    case 'auto-start':\n      return 'bottom-start';\n    case 'auto-end':\n      return 'bottom-end';\n    default:\n      return placement ?? 'bottom';\n  }\n}\n\nexport function buildTooltipTheme(\n  theme: GrafanaTheme2,\n  tooltipBg: string,\n  toggletipBorder: string,\n  tooltipText: string,\n  tooltipPadding: { topBottom: number; rightLeft: number }\n) {\n  return {\n    arrow: css({\n      fill: tooltipBg,\n    }),\n    container: css({\n      backgroundColor: tooltipBg,\n      borderRadius: theme.shape.radius.default,\n      border: `1px solid ${toggletipBorder}`,\n      boxShadow: theme.shadows.z2,\n      color: tooltipText,\n      fontSize: theme.typography.bodySmall.fontSize,\n      padding: theme.spacing(tooltipPadding.topBottom, tooltipPadding.rightLeft),\n      transition: 'opacity 0.3s',\n      zIndex: theme.zIndex.tooltip,\n      maxWidth: '400px',\n      overflowWrap: 'break-word',\n\n      \"&[data-popper-interactive='false']\": {\n        pointerEvents: 'none',\n      },\n\n      code: {\n        border: 'none',\n        display: 'inline',\n        background: colorManipulator.darken(tooltipBg, 0.1),\n        color: tooltipText,\n        whiteSpace: 'normal',\n      },\n\n      pre: {\n        background: colorManipulator.darken(tooltipBg, 0.1),\n        color: tooltipText,\n      },\n\n      a: {\n        color: tooltipText,\n        textDecoration: 'underline',\n      },\n\n      'a:hover': {\n        textDecoration: 'none',\n      },\n    }),\n    headerClose: css({\n      color: theme.colors.text.secondary,\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1.5),\n      backgroundColor: 'transparent',\n      border: 0,\n    }),\n    header: css({\n      paddingTop: theme.spacing(1),\n      paddingBottom: theme.spacing(2),\n    }),\n    body: css({\n      paddingTop: theme.spacing(1),\n      paddingBottom: theme.spacing(1),\n    }),\n    footer: css({\n      paddingTop: theme.spacing(2),\n      paddingBottom: theme.spacing(1),\n    }),\n  };\n}\n","import React, { PropsWithChildren, useLayoutEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { useTheme2 } from '../../themes';\n\ninterface Props {\n  className?: string;\n  root?: HTMLElement;\n  forwardedRef?: React.ForwardedRef<HTMLDivElement>;\n}\n\nexport function Portal(props: PropsWithChildren<Props>) {\n  const { children, className, root, forwardedRef } = props;\n  const theme = useTheme2();\n  const node = useRef<HTMLDivElement | null>(null);\n  const portalRoot = root ?? getPortalContainer();\n\n  if (!node.current) {\n    node.current = document.createElement('div');\n    if (className) {\n      node.current.className = className;\n    }\n    node.current.style.position = 'relative';\n    node.current.style.zIndex = `${theme.zIndex.portal}`;\n  }\n\n  useLayoutEffect(() => {\n    if (node.current) {\n      portalRoot.appendChild(node.current);\n    }\n\n    return () => {\n      if (node.current) {\n        portalRoot.removeChild(node.current);\n      }\n    };\n  }, [portalRoot]);\n\n  return ReactDOM.createPortal(<div ref={forwardedRef}>{children}</div>, node.current);\n}\n\n/** @internal */\nexport function getPortalContainer() {\n  return window.document.getElementById('grafana-portal-container') ?? document.body;\n}\n\n/** @internal */\nexport function PortalContainer() {\n  return <div id=\"grafana-portal-container\" />;\n}\n\nexport const RefForwardingPortal = React.forwardRef<HTMLDivElement, Props>((props, ref) => {\n  return <Portal {...props} forwardedRef={ref} />;\n});\n\nRefForwardingPortal.displayName = 'RefForwardingPortal';\n","import {\n  arrow,\n  autoUpdate,\n  flip,\n  FloatingArrow,\n  offset,\n  shift,\n  useDismiss,\n  useFloating,\n  useFocus,\n  useHover,\n  useInteractions,\n} from '@floating-ui/react';\nimport React, { useCallback, useId, useRef, useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { useStyles2 } from '../../themes/ThemeContext';\nimport { buildTooltipTheme, getPlacement } from '../../utils/tooltipUtils';\nimport { Portal } from '../Portal/Portal';\n\nimport { PopoverContent, TooltipPlacement } from './types';\n\nexport interface TooltipProps {\n  theme?: 'info' | 'error' | 'info-alt';\n  show?: boolean;\n  placement?: TooltipPlacement;\n  content: PopoverContent;\n  children: JSX.Element;\n  /**\n   * Set to true if you want the tooltip to stay long enough so the user can move mouse over content to select text or click a link\n   */\n  interactive?: boolean;\n}\n\nexport const Tooltip = React.forwardRef<HTMLElement, TooltipProps>(\n  ({ children, theme, interactive, show, placement, content }, forwardedRef) => {\n    const arrowRef = useRef(null);\n    const [controlledVisible, setControlledVisible] = useState(show);\n    const isOpen = show ?? controlledVisible;\n\n    // the order of middleware is important!\n    // `arrow` should almost always be at the end\n    // see https://floating-ui.com/docs/arrow#order\n    const middleware = [\n      offset(8),\n      flip({\n        fallbackAxisSideDirection: 'end',\n        // see https://floating-ui.com/docs/flip#combining-with-shift\n        crossAxis: false,\n        boundary: document.body,\n      }),\n      shift(),\n      arrow({\n        element: arrowRef,\n      }),\n    ];\n\n    const { context, refs, floatingStyles } = useFloating({\n      open: isOpen,\n      placement: getPlacement(placement),\n      onOpenChange: setControlledVisible,\n      middleware,\n      whileElementsMounted: autoUpdate,\n    });\n    const tooltipId = useId();\n\n    const hover = useHover(context, {\n      delay: {\n        close: interactive ? 100 : 0,\n      },\n      move: false,\n    });\n    const focus = useFocus(context);\n    const dismiss = useDismiss(context);\n\n    const { getReferenceProps, getFloatingProps } = useInteractions([dismiss, hover, focus]);\n\n    const contentIsFunction = typeof content === 'function';\n\n    const styles = useStyles2(getStyles);\n    const style = styles[theme ?? 'info'];\n\n    const handleRef = useCallback(\n      (ref: HTMLElement | null) => {\n        refs.setReference(ref);\n\n        if (typeof forwardedRef === 'function') {\n          forwardedRef(ref);\n        } else if (forwardedRef) {\n          forwardedRef.current = ref;\n        }\n      },\n      [forwardedRef, refs]\n    );\n\n    // if the child has a matching aria-label, this should take precedence over the tooltip content\n    // otherwise we end up double announcing things in e.g. IconButton\n    const childHasMatchingAriaLabel = 'aria-label' in children.props && children.props['aria-label'] === content;\n\n    return (\n      <>\n        {React.cloneElement(children, {\n          ref: handleRef,\n          tabIndex: 0, // tooltip trigger should be keyboard focusable\n          'aria-describedby': !childHasMatchingAriaLabel && isOpen ? tooltipId : undefined,\n          ...getReferenceProps(),\n        })}\n        {isOpen && (\n          <Portal>\n            <div ref={refs.setFloating} style={floatingStyles} {...getFloatingProps()}>\n              <FloatingArrow className={style.arrow} ref={arrowRef} context={context} />\n              <div\n                data-testid={selectors.components.Tooltip.container}\n                id={tooltipId}\n                role=\"tooltip\"\n                className={style.container}\n              >\n                {typeof content === 'string' && content}\n                {React.isValidElement(content) && React.cloneElement(content)}\n                {contentIsFunction && content({})}\n              </div>\n            </div>\n          </Portal>\n        )}\n      </>\n    );\n  }\n);\n\nTooltip.displayName = 'Tooltip';\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  const info = buildTooltipTheme(\n    theme,\n    theme.components.tooltip.background,\n    theme.components.tooltip.background,\n    theme.components.tooltip.text,\n    { topBottom: 0.5, rightLeft: 1 }\n  );\n  const error = buildTooltipTheme(\n    theme,\n    theme.colors.error.main,\n    theme.colors.error.main,\n    theme.colors.error.contrastText,\n    { topBottom: 0.5, rightLeft: 1 }\n  );\n\n  return {\n    info,\n    ['info-alt']: info,\n    error,\n  };\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\n\ntype Props = {\n  children: React.ReactNode;\n  visible: boolean;\n  duration?: number;\n};\n\nexport function FadeTransition(props: Props) {\n  const { visible, children, duration = 250 } = props;\n  const styles = useStyles2(getStyles, duration);\n\n  return (\n    <CSSTransition in={visible} mountOnEnter={true} unmountOnExit={true} timeout={duration} classNames={styles}>\n      {children}\n    </CSSTransition>\n  );\n}\n\nconst getStyles = (_theme: GrafanaTheme2, duration: number) => ({\n  enter: css({\n    label: 'enter',\n    opacity: 0,\n  }),\n  enterActive: css({\n    label: 'enterActive',\n    opacity: 1,\n    transition: `opacity ${duration}ms ease-out`,\n  }),\n  exit: css({\n    label: 'exit',\n    opacity: 1,\n  }),\n  exitActive: css({\n    label: 'exitActive',\n    opacity: 0,\n    transition: `opacity ${duration}ms ease-out`,\n  }),\n});\n","import hoistNonReactStatics from 'hoist-non-react-statics';\nimport memoize from 'micro-memoize';\nimport React, { useContext } from 'react';\n\nimport { GrafanaTheme, GrafanaTheme2, ThemeContext } from '@grafana/data';\n\nimport { Themeable, Themeable2 } from '../types/theme';\n\nimport { stylesFactory } from './stylesFactory';\n\ntype Omit<T, K> = Pick<T, Exclude<keyof T, K>>;\ntype Subtract<T, K> = Omit<T, keyof K>;\n\n/**\n * Mock used in tests\n */\nlet ThemeContextMock: React.Context<GrafanaTheme2> | null = null;\n\n// Used by useStyles()\nexport const memoizedStyleCreators = new WeakMap();\n\n/** @deprecated use withTheme2 */\n/** @public */\nexport const withTheme = <P extends Themeable, S extends {} = {}>(Component: React.ComponentType<P>) => {\n  const WithTheme: React.FunctionComponent<Subtract<P, Themeable>> = (props) => {\n    /**\n     * If theme context is mocked, let's use it instead of the original context\n     * This is used in tests when mocking theme using mockThemeContext function defined below\n     */\n    const ContextComponent = ThemeContextMock || ThemeContext;\n    return (\n      // @ts-ignore\n      <ContextComponent.Consumer>{(theme) => <Component {...props} theme={theme.v1} />}</ContextComponent.Consumer>\n    );\n  };\n\n  WithTheme.displayName = `WithTheme(${Component.displayName})`;\n  hoistNonReactStatics(WithTheme, Component);\n  type Hoisted = typeof WithTheme & S;\n  return WithTheme as Hoisted;\n};\n\n/** @alpha */\nexport const withTheme2 = <P extends Themeable2, S extends {} = {}>(Component: React.ComponentType<P>) => {\n  const WithTheme: React.FunctionComponent<Subtract<P, Themeable2>> = (props) => {\n    /**\n     * If theme context is mocked, let's use it instead of the original context\n     * This is used in tests when mocking theme using mockThemeContext function defined below\n     */\n    const ContextComponent = ThemeContextMock || ThemeContext;\n    return (\n      // @ts-ignore\n      <ContextComponent.Consumer>{(theme) => <Component {...props} theme={theme} />}</ContextComponent.Consumer>\n    );\n  };\n\n  WithTheme.displayName = `WithTheme(${Component.displayName})`;\n  hoistNonReactStatics(WithTheme, Component);\n  type Hoisted = typeof WithTheme & S;\n  return WithTheme as Hoisted;\n};\n\n/** @deprecated use useTheme2 */\n/** @public */\nexport function useTheme(): GrafanaTheme {\n  return useContext(ThemeContextMock || ThemeContext).v1;\n}\n\n/** @public */\nexport function useTheme2(): GrafanaTheme2 {\n  return useContext(ThemeContextMock || ThemeContext);\n}\n\n/**\n * Hook for using memoized styles with access to the theme.\n *\n * NOTE: For memoization to work, you need to ensure that the function\n * you pass in doesn't change, or only if it needs to. (i.e. declare\n * your style creator outside of a function component or use `useCallback()`.)\n * */\n/** @deprecated use useStyles2 */\n/** @public */\nexport function useStyles<T>(getStyles: (theme: GrafanaTheme) => T) {\n  const theme = useTheme();\n\n  let memoizedStyleCreator: typeof getStyles = memoizedStyleCreators.get(getStyles);\n\n  if (!memoizedStyleCreator) {\n    memoizedStyleCreator = stylesFactory(getStyles);\n    memoizedStyleCreators.set(getStyles, memoizedStyleCreator);\n  }\n\n  return memoizedStyleCreator(theme);\n}\n\n/**\n * Hook for using memoized styles with access to the theme. Pass additional\n * arguments to the getStyles function as additional arguments to this hook.\n *\n * Prefer using primitive values (boolean, number, string, etc) for\n * additional arguments for better performance\n *\n * ```\n * const getStyles = (theme, isDisabled, isOdd) => {css(...)}\n * [...]\n * const styles = useStyles2(getStyles, true, Boolean(index % 2))\n * ```\n *\n * NOTE: For memoization to work, ensure that all arguments don't change\n * across renders (or only change if they need to)\n *\n * @public\n * */\nexport function useStyles2<T extends unknown[], CSSReturnValue>(\n  getStyles: (theme: GrafanaTheme2, ...args: T) => CSSReturnValue,\n  ...additionalArguments: T\n): CSSReturnValue {\n  const theme = useTheme2();\n\n  let memoizedStyleCreator: typeof getStyles = memoizedStyleCreators.get(getStyles);\n\n  if (!memoizedStyleCreator) {\n    memoizedStyleCreator = memoize(getStyles, { maxSize: 10 }); // each getStyles function will memoize 10 different sets of props\n    memoizedStyleCreators.set(getStyles, memoizedStyleCreator);\n  }\n\n  return memoizedStyleCreator(theme, ...additionalArguments);\n}\n\n/**\n * Enables theme context mocking\n */\n/** @public */\nexport const mockThemeContext = (theme: Partial<GrafanaTheme2>) => {\n  ThemeContextMock = React.createContext(theme as GrafanaTheme2);\n\n  return () => {\n    ThemeContextMock = null;\n  };\n};\n","import { CSSObject } from '@emotion/css';\nimport tinycolor from 'tinycolor2';\n\nimport { GrafanaTheme, GrafanaTheme2 } from '@grafana/data';\n\nexport function cardChrome(theme: GrafanaTheme2): string {\n  return `\n    background: ${theme.colors.background.secondary};\n    &:hover {\n      background: ${hoverColor(theme.colors.background.secondary, theme)};\n    }\n    box-shadow: ${theme.components.panel.boxShadow};\n    border-radius: ${theme.shape.radius.default};\n`;\n}\n\nexport function hoverColor(color: string, theme: GrafanaTheme2): string {\n  return theme.isDark ? tinycolor(color).brighten(2).toString() : tinycolor(color).darken(2).toString();\n}\n\nexport function listItem(theme: GrafanaTheme2): string {\n  return `\n  background: ${theme.colors.background.secondary};\n  &:hover {\n    background: ${hoverColor(theme.colors.background.secondary, theme)};\n  }\n  box-shadow: ${theme.components.panel.boxShadow};\n  border-radius: ${theme.shape.radius.default};\n`;\n}\n\nexport function listItemSelected(theme: GrafanaTheme2): string {\n  return `\n    background: ${hoverColor(theme.colors.background.secondary, theme)};\n    color: ${theme.colors.text.maxContrast};\n`;\n}\n\nexport function mediaUp(breakpoint: string) {\n  return `only screen and (min-width: ${breakpoint})`;\n}\n\nconst isGrafanaTheme2 = (theme: GrafanaTheme | GrafanaTheme2): theme is GrafanaTheme2 => theme.hasOwnProperty('v1');\nexport const focusCss = (theme: GrafanaTheme | GrafanaTheme2) => {\n  const isTheme2 = isGrafanaTheme2(theme);\n  const firstColor = isTheme2 ? theme.colors.background.canvas : theme.colors.bodyBg;\n  const secondColor = isTheme2 ? theme.colors.primary.main : theme.colors.formFocusOutline;\n\n  return `\n  outline: 2px dotted transparent;\n  outline-offset: 2px;\n  box-shadow: 0 0 0 2px ${firstColor}, 0 0 0px 4px ${secondColor};\n  transition-property: outline, outline-offset, box-shadow;\n  transition-duration: 0.2s;\n  transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);`;\n};\n\nexport function getMouseFocusStyles(theme: GrafanaTheme | GrafanaTheme2): CSSObject {\n  return {\n    outline: 'none',\n    boxShadow: `none`,\n  };\n}\n\nexport function getFocusStyles(theme: GrafanaTheme2): CSSObject {\n  return {\n    outline: '2px dotted transparent',\n    outlineOffset: '2px',\n    boxShadow: `0 0 0 2px ${theme.colors.background.canvas}, 0 0 0px 4px ${theme.colors.primary.main}`,\n    transitionTimingFunction: `cubic-bezier(0.19, 1, 0.22, 1)`,\n    transitionDuration: '0.2s',\n    transitionProperty: 'outline, outline-offset, box-shadow',\n  };\n}\n\n// max-width is set up based on .grafana-tooltip class that's used in dashboard\nexport const getTooltipContainerStyles = (theme: GrafanaTheme2): CSSObject => ({\n  overflow: 'hidden',\n  background: theme.colors.background.secondary,\n  boxShadow: theme.shadows.z2,\n  maxWidth: '800px',\n  padding: theme.spacing(1),\n  borderRadius: theme.shape.radius.default,\n  zIndex: theme.zIndex.tooltip,\n});\n","import memoize from 'micro-memoize';\n\n/**\n * @public\n * @deprecated use useStyles hook\n *  Creates memoized version of styles creator\n * @param stylesCreator function accepting dependencies based on which styles are created\n */\nexport function stylesFactory<ResultFn extends (this: any, ...newArgs: any[]) => ReturnType<ResultFn>>(\n  stylesCreator: ResultFn\n) {\n  return memoize(stylesCreator);\n}\n","import React, { ReactElement } from 'react';\n\n/** Returns the ID value of the first, and only, child element  */\nexport function getChildId(children: ReactElement): string | undefined {\n  let inputId: unknown;\n\n  // Get the first, and only, child to retrieve form input's id\n  const child = React.Children.only(children);\n\n  // Retrieve input's id to apply on the label for correct click interaction\n  // For some components (like Select), we want to get the ID from a different prop\n  if ('id' in child?.props) {\n    inputId = child.props.id;\n  } else if ('inputId' in child.props) {\n    inputId = child?.props.inputId;\n  }\n\n  return typeof inputId === 'string' ? inputId : undefined;\n}\n\n/**\n * Given react node or function returns element accordingly\n *\n * @param itemToRender\n * @param props props to be passed to the function if item provided as such\n */\nexport function renderOrCallToRender<TProps = {}>(\n  itemToRender: ((props: TProps) => React.ReactNode) | React.ReactNode,\n  props?: TProps\n): React.ReactNode {\n  if (React.isValidElement(itemToRender) || typeof itemToRender === 'string' || typeof itemToRender === 'number') {\n    return itemToRender;\n  }\n\n  if (typeof itemToRender === 'function' && props) {\n    return itemToRender(props);\n  }\n\n  throw new Error(`${itemToRender} is not a React element nor a function that returns React element`);\n}\n"],"names":["makeClassES5Compatible","ES6Class","target","self","argumentsList","DataSourcePlugin","DataSourceClass","editor","ConfigCtrl","QueryCtrl","AnnotationsQueryCtrl","QueryEditor","ExploreQueryField","QueryEditorHelp","ExploreStartPage","VariableQueryEditor","MetadataInspector","pluginExports","DataSourceApi","instanceSettings","ExploreMode","DataQueryErrorType","LanguageProvider","PluginState","PluginType","PluginSignatureStatus","PluginSignatureType","PluginErrorCode","PluginIncludeType","GrafanaPlugin","tab","allButtonVariants","allButtonFills","Button","variant","size","fill","icon","fullWidth","children","className","type","tooltip","tooltipPlacement","otherProps","ref","theme","styles","getButtonStyles","button","LinkButton","onBlur","onFocus","disabled","linkButtonStyles","props","iconOnly","height","padding","fontSize","variantStyles","getPropertiesForVariant","disabledStyles","getPropertiesForDisabled","focusStyle","paddingMinusBorder","getButtonVariantStyles","color","outlineBorderColor","borderColor","hoverBorderColor","clearButtonStyles","clearLinkButtonStyles","ScrollIndicators","showScrollTopIndicator","setShowTopScrollIndicator","showScrollBottomIndicator","setShowBottomScrollIndicator","scrollTopMarker","scrollBottomMarker","getStyles","intersectionObserver","entries","entry","CustomScrollbar","autoHide","autoHideTimeout","setScrollTop","testId","autoHeightMin","autoHeightMax","hideTracksWhenNotNeeded","hideHorizontalTrack","hideVerticalTrack","scrollRefCallback","showScrollIndicators","updateAfterMountMs","scrollTop","onScroll","scrollbar","renderTrack","hideTrack","passedProps","renderTrackHorizontal","renderTrackVertical","renderThumbHorizontal","renderThumbVertical","renderView","onScrollStop","FieldValidationMessage","horizontal","getFieldValidationMessageStyles","cssName","baseStyle","InlineLabel","width","transparent","interactive","Component","rest","getInlineLabelStyles","Tooltip","Icon","InlineField","label","labelWidth","invalid","loading","required","htmlFor","grow","shrink","error","htmlProps","inputId","labelElement","Label","description","category","labelProps","getLabelStyles","categories","c","i","getFocusStyle","sharedInputStyle","borderColorHover","background","textColor","autoFillBorder","inputPadding","inputSizes","inputSizesPixels","getPropertiesForButtonSize","getIconStyles","name","style","title","iconName","iconRoot","svgSize","svgHgt","svgWid","subDir","svgPath","composedClassName","alwaysMonoIcons","getIconSubDir","getSvgSize","getIconRoot","grafanaPublicPath","IconButton","limitedIconSize","ariaLabel","buttonRef","deprecatedAriaLabel","ariaLabelProp","iconType","restProps","hoverSize","iconColor","Input","addonAfter","addonBefore","prefix","suffix","prefixRef","prefixRect","suffixRef","suffixRect","getInputStyles","prefixSuffixStaticWidth","prefixSuffix","LoadingPlaceholder","text","useAsyncDependency","importStatement","state","useAsync","ErrorWithStack","errorInfo","ReactMonacoEditorLazy","dependency","ReactMonacoEditor","CodeEditorSuggestionItemKind","findInsertIndex","line","ch","getCompletionItems","monaco","suggestions","range","items","suggestion","mapKinds","sug","registerSuggestions","language","getSuggestions","modelId","model","position","context","currentLine","index","UnthemedCodeEditor","customLanguage","onSave","onBeforeEditorMount","onChange","onEditorDidMount","e","languagePromise","oldProps","newLanguage","showMiniMap","showLineNumbers","readOnly","monacoOptions","alwaysConsumeMouseWheel","restMonacoOptions","value","longText","containerStyles","options","selectors","CodeEditor","DropdownIndicator","selectProps","isOpen","IndicatorsContainer","InputControl","focused","innerProps","getInputControlStyles","withPrefix","MultiValueContainer","getSelectStyles","MultiValueRemove","SelectMenu","maxHeight","innerRef","VIRTUAL_LIST_ITEM_HEIGHT","VIRTUAL_LIST_WIDTH_ESTIMATE_MULTIPLIER","VirtualizedSelectMenu","getValue","initialOffset","option","widthEstimate","heightEstimate","SelectMenuOptions","data","isFocused","isSelected","renderOptionLabel","onMouseMove","onMouseOver","getSelectOptionGroupStyles","stylesFactory","UnthemedSelectOptionGroup","prevState","nextProps","expanded","SelectOptionGroup","useDelayedSwitch","duration","delay","delayedValue","setDelayedValue","onStartTime","timeout","timeSpent","turnOff","SlideOutTransition","visible","CSSTransition","_theme","measurement","SingleValue","isDisabled","FadeWithImage","Spinner","FadeTransition","UnthemedValueContainer","valueChildren","otherChildren","truncatedValues","isMulti","noWrap","dataTestid","ValueContainer","resetSelectStyles","originalStyles","useCustomSelectStyles","base","top","bottom","provided","cleanValue","filtered","selectedValue","findSelectedValue","found","omitDescriptions","CustomControl","menuIsOpen","onMenuClose","onMenuOpen","allowCustomValue","allowCreateWhileLoading","autoFocus","backspaceRemovesValue","blurInputOnSelect","cacheOptions","closeMenuOnSelect","components","createOptionPosition","defaultOptions","defaultValue","filterOption","formatCreateLabel","getOptionLabel","getOptionValue","inputValue","isClearable","id","isLoading","isOptionDisabled","isSearchable","loadOptions","loadingMessage","maxMenuHeight","minMenuHeight","maxVisibleValues","menuPlacement","menuPosition","menuShouldPortal","noOptionsMessage","onCloseMenu","onCreateOption","onInputChange","onKeyDown","onMenuScrollToBottom","onMenuScrollToTop","onOpenMenu","openMenuOnFocus","placeholder","renderControl","showAllSelectedWhenOpen","tabSelectsValue","virtualized","noMultiValueWrap","isValidNewOption","formatOptionLabel","hideSelectedOptions","reactSelectRef","closeToBottom","setCloseToBottom","selectStyles","hasInputValue","setHasInputValue","distance","onChangeWithEmpty","action","ReactSelectComponent","creatableProps","asyncSelectProps","v","selectableValue","hasValue","commonSelectProps","val","actionMeta","defaultFormatCreateLabel","SelectMenuComponent","CustomIndicatorsContainer","IndicatorSeparator","clearValue","input","selectedValuesCount","indicatorChildren","Select","MultiSelect","AsyncSelect","VirtualizedSelect","AsyncVirtualizedSelect","AsyncMultiSelect","SelectContainer","getSelectContainerStyles","isIconSize","getAvailableIcons","getFieldTypeIcon","field","getFieldTypeIconName","inline","iconClassName","deprecatedStyles","getDeprecatedStyles","Switch","checked","inputProps","getSwitchStyles","switchIdRef","event","InlineSwitch","showLabel","getPlacement","placement","buildTooltipTheme","tooltipBg","toggletipBorder","tooltipText","tooltipPadding","colorManipulator","Portal","root","forwardedRef","node","portalRoot","getPortalContainer","PortalContainer","RefForwardingPortal","show","content","arrowRef","controlledVisible","setControlledVisible","middleware","refs","floatingStyles","tooltipId","hover","focus","dismiss","getReferenceProps","getFloatingProps","contentIsFunction","handleRef","childHasMatchingAriaLabel","info","ThemeContextMock","memoizedStyleCreators","withTheme","WithTheme","ContextComponent","withTheme2","useTheme","useTheme2","useStyles","memoizedStyleCreator","useStyles2","additionalArguments","mockThemeContext","cardChrome","hoverColor","listItem","listItemSelected","mediaUp","breakpoint","isGrafanaTheme2","focusCss","isTheme2","firstColor","secondColor","getMouseFocusStyles","getFocusStyles","getTooltipContainerStyles","stylesCreator","getChildId","child","renderOrCallToRender","itemToRender"],"sourceRoot":""}