{"version":3,"file":"scenes.d475b9833ef62dd3e5be.js","mappings":"+MAYO,SAASA,EAAc,CAAE,MAAAC,CAAM,EAAU,CAC9C,MAAMC,KAAe,MAAkC,EACjD,CAAE,YAAAC,EAAa,UAAAC,EAAW,UAAAC,CAAU,EAAIH,EAAa,SAAS,EASpE,SAPA,aAAU,KACRA,EAAa,cAAcD,EAAM,OAAO,IAAKA,EAAM,OAAO,OAAO,EAC1D,IAAM,CACXC,EAAa,WAAW,CAC1B,GACC,CAACA,EAAcD,EAAM,OAAO,IAAKA,EAAM,OAAO,OAAO,CAAC,EAEpDE,EASE,gBAACA,EAAY,UAAZ,CAAsB,MAAOA,CAAA,CAAa,EAP9C,gBAAC,IAAI,CAAC,OAAQ,IAAe,QAC1BC,GAAa,gBAAC,IAAU,IAAC,EACzBC,GAAa,gBAAC,UAAIA,CAAU,CAC/B,CAKN,CAEA,QAAeL,C","sources":["webpack://grafana/./public/app/features/dashboard-scene/pages/PanelEditPage.tsx"],"sourcesContent":["// Libraries\nimport React, { useEffect } from 'react';\n\nimport { PageLayoutType } from '@grafana/data';\nimport { Page } from 'app/core/components/Page/Page';\nimport PageLoader from 'app/core/components/PageLoader/PageLoader';\nimport { GrafanaRouteComponentProps } from 'app/core/navigation/types';\n\nimport { getDashboardScenePageStateManager } from './DashboardScenePageStateManager';\n\nexport interface Props extends GrafanaRouteComponentProps<{ uid: string; panelId: string }> {}\n\nexport function PanelEditPage({ match }: Props) {\n  const stateManager = getDashboardScenePageStateManager();\n  const { panelEditor, isLoading, loadError } = stateManager.useState();\n\n  useEffect(() => {\n    stateManager.loadPanelEdit(match.params.uid, match.params.panelId);\n    return () => {\n      stateManager.clearState();\n    };\n  }, [stateManager, match.params.uid, match.params.panelId]);\n\n  if (!panelEditor) {\n    return (\n      <Page layout={PageLayoutType.Canvas}>\n        {isLoading && <PageLoader />}\n        {loadError && <h2>{loadError}</h2>}\n      </Page>\n    );\n  }\n\n  return <panelEditor.Component model={panelEditor} />;\n}\n\nexport default PanelEditPage;\n"],"names":["PanelEditPage","match","stateManager","panelEditor","isLoading","loadError"],"sourceRoot":""}