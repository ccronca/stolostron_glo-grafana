{"version":3,"file":"testDataDSPlugin.73eea7f8301b2bf73c26.js","mappings":"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AAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAC5G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1G,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,CAChF,CACF,EACA,CACE,KAAM,QACN,OAAQ,CACN,OAAa,KAAY,KAAY,MAAY,MAAY,MAAY,MAAY,KAAW,KAChG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,KAAW,IAAU,IAAU,IACrG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,KAAW,KAAW,KAAW,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACvG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,KAAW,IAAU,IACrG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,KAAW,KAAW,KACtG,KAAW,KAAW,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,MAC5F,KAAW,KAAW,IAAU,IAAU,IAAU,KAAW,KAAW,IAAU,IAAU,IAC9F,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,MAAY,MAAY,KAAW,IAC/F,IAAU,IAAU,KAAW,IAAU,IAAU,IAAU,IAAU,IAAW,IAAU,IAAU,IACtG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,KAAW,KAAW,KAAW,KAAW,IAAU,IAAU,IAAU,KAC9F,IAAU,IAAU,KAAW,IAAU,IAAU,IAAU,IAAU,IAAU,MAAY,MAC7F,MAAY,MAAY,MAAY,MAAY,MAAY,MAAY,MAAY,MAAY,MAChG,MAAY,MAAY,KAAY,MAAY,MAAY,MAAY,MAAY,MAAY,MAChG,KAAW,KAAW,KAAW,IAAU,IAAU,KAAW,IAAU,IAAU,IAAU,IAC9F,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,KAAW,KAAW,IAAW,KAAW,KAAW,IAAU,IAAU,IAAU,IAC/F,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,KAAW,IAAU,IAAU,IAAU,IACrG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,KAAW,KAAW,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACtG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,KAAW,KAAW,IAAU,KAAW,IAAU,IACvG,IAAU,KAAW,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,KACrG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,MAAY,MAAY,MAC9F,MAAY,MAAY,MAAY,MAAY,MAAY,KAAW,IAAU,IAAU,IAAU,IACrG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAW,IACrG,IAAU,MAAY,KAAW,KAAW,KAAW,IAAU,IAAU,IAAU,IAAU,IAC/F,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,KAAW,KAAW,IAAU,IAAW,IAAU,IAAU,IAC7F,KAAW,IAAU,KAAW,KAAW,IAAU,IAAU,KAAW,IAAU,KAAW,IAC/F,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,KAAW,IAAU,IAAU,IAAU,IAAU,IACrG,IAAU,KAAW,IAAU,IAAU,IAAU,IAAU,KAAW,IAAU,IAAU,IAAU,IACtG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,KACpG,KAAW,KAAW,KAAW,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACvG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,KAAW,KAAW,KAAW,IAAU,IAAU,IACvG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,KAAW,IACrG,IAAU,IAAU,IAAU,KAAW,IAAU,IAAU,KAAW,IAAU,IAAU,KAC5F,KAAW,IAAU,KAAW,KAAW,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACvG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,KAAW,KAAW,KAAW,KAAW,KAAW,KAAW,KAAW,KACjG,KAAW,KAAW,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACtG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,KACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,KAAW,KAAW,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACtG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,MAAY,MAC5F,MAAY,MAAY,MAAY,IAAU,IAAU,KAAW,KAAW,IAAU,IAAU,IAClG,IAAU,KAAW,IAAU,IAAU,KAAW,KAAW,IAAU,KAAW,IAAU,IAC9F,IAAU,KAAW,IAAU,KAAW,IAAU,IAAU,IAAU,IAAW,IAAU,IAAU,IACvG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,KAAW,KAAW,IAAU,IACtG,IAAU,IAAU,IAAU,KAAW,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACrG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,GACZ,EACA,OAAQ,CACN,KAAM,OACR,CACF,EACA,CACE,KAAM,OACN,OAAQ,CACN,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC7G,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC7G,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxG,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,KAAM,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,IAC1G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,GACzG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KACvG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC7G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC7G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,KAAM,KAAM,KACtG,KAAM,KAAM,KAAM,KAAM,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC7G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAC7G,KAAM,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC7G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,IAC1G,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC1G,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAC7G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,GAC7G,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IACzG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC7G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC5G,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC7G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,KAAM,KAAM,KAC1G,KAAM,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,GAC1G,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC7G,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAA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GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAC5G,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACxG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACxG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC7G,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,IAC3G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAC5G,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAC7G,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACxG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAC3G,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,GAAI,GAC3G,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,GAAI,GAAI,IAAK,GAC1G,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,EAC5G,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAC5G,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAC5G,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IACxG,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAC1G,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,IACxG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC5G,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACxG,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC5G,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAC5G,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAC5G,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC5G,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC5G,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3G,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACzG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACxG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAC7G,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC1G,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAC1G,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GACjC,EACA,OAAQ,CACN,KAAM,CACJ,KAAM,CACJ,KAAM,CACJ,QACA,uCACA,kCACA,2CACA,gCACA,qCACA,uCACA,0CACA,gDACA,iDACA,4CACA,6CACA,kBACA,yDACA,YACA,iBACA,qBACA,gCACA,eACA,iDACA,+CACA,4BACA,iDACA,yCACA,0BACA,uBACA,2BACA,oBACA,mBACA,+BACA,wBACA,sBACA,8BACA,yBACA,mBACA,qBACA,0BACA,gCACA,oBACA,2CACA,oBACA,sBACA,yBACA,gDACA,+CACA,6BACA,2BACA,kCACA,0BACA,gCACA,2BACA,yBACA,oBACA,uBACA,oBACA,iDACA,0BACA,+BACA,6BACA,oCACA,4BACA,mCACA,gCACA,qCACA,sCACA,sCACA,sCACA,2BACA,yBACA,qBACA,2BACA,sBACA,qBACA,kDACA,qCACA,wDACA,0CACA,qCACA,+CACA,+CACA,mCACA,iCACA,4BACA,oBACA,qBACA,4CACA,8CACA,gDACA,2DACA,0DACA,2CACA,0CACA,sCACA,4CACA,oBACA,aACA,+BACA,sCACA,6CACA,8CACA,0CACA,yCACA,2BACA,0CACA,2CACA,yBACA,mCACA,iCACA,8BACA,kDACA,+CACA,wEACA,yDACA,gEACA,yDACA,kEACA,6CACA,sDACA,4DACA,8DACA,qCACA,oDACA,2DACA,kEACA,+DACA,yEACA,+DACA,gEACA,+BACA,6BACA,kCACA,8BACA,kCACA,iCACA,yCACA,oDACA,+CACA,kDACA,cACA,2CACA,2BACA,mBACA,0BACA,mBACA,uBACA,uBACA,kBACA,wBACA,uBACA,mBACA,8BACA,mBACA,0BACA,0BACA,yCACA,mBACA,8CACA,4BACA,6BACA,cACA,YACA,qBACA,yBACA,oBACA,yCACA,sBACA,iDACA,6CACA,+EACA,uFACA,8EACA,yDACA,gDACA,+BACA,uBACA,8BACA,iCACA,eACA,sBACA,sBACA,kBACA,eACA,uCACA,mCACA,qCACA,iBACA,yBACA,oBACA,qBACA,mDACA,4CACA,gEACA,mEACA,kEACA,6DACA,kEACA,iBACA,gCACA,+BACA,iCACA,qCACA,kEACA,0DACA,qEACA,wEACA,0EACA,2BACA,0DACA,wBACA,8BACA,0CACA,uBACA,8BACA,mBACA,oBACA,eACA,eACA,kBACA,iCACA,uBACA,mCACA,mCACA,2BACA,kCACA,+BACA,2CACA,wCACA,wCACA,uDACA,2CACA,iEACA,4EACA,8EACA,6BACA,6BACA,wBACA,wBACA,gCACA,sCACA,oBACA,qBACA,4BACA,gBACA,8BACA,uCACA,oCACA,qCACA,0CACA,qCACA,uCACA,yCACA,oCACA,mCACA,qDACA,+CACA,sCACA,4BACA,6BACA,4BACA,yCACA,mBACA,mBACA,wBACA,0BACA,yBACA,iCACA,mBACA,mBACA,gBACA,mBACA,wBACA,uBACA,+CACA,8CACA,2BACA,2BACA,gCACA,sCACA,mBACA,wCACA,yCACA,+CACA,wDACA,sBACA,cACA,qBACA,qBACA,uBACA,wBACA,8BACA,wBACA,oBACA,kCACA,8CACA,cACA,uBACA,gCACA,eACA,oCACA,+BACA,oCACA,mDACA,qCACA,uBACA,2CACA,6CACA,gBACA,sBACA,2CACA,4BACA,2CACA,wBACA,8BACA,gCACA,gBACA,iBACA,qBACA,sBACA,gBACA,2CACA,kCACA,wCACA,wBACA,4BACA,yBACA,wBACA,qBACA,kCACA,2BACA,cACA,eACA,iBACA,mBACA,wCACA,YACA,6CACA,UACA,mBACA,aACA,uBACA,6BACA,uBACA,qBACA,oCACA,kBACA,4BACA,gBACA,kBACA,oCACA,UACA,6EACA,oBACA,kBACA,gCACA,kEACA,uDACA,yDACA,eACA,yCACA,wCACA,8CACA,6BACA,6BACA,gCACA,oDACA,qDACA,gEACA,qBACA,4DACA,qCACA,sCACA,8BACA,kCACA,mBACA,+BACA,sBACA,yBACA,+BACA,kBACA,0BACA,4BACA,wBACA,mBACA,kBACA,0BACA,oCACA,4BACA,qBACA,2BACA,qBACA,0BACA,wBACA,0BACA,4BACA,kBACA,+BACA,qBACA,4BACA,sBACA,4BACA,uBACA,kCACA,mBACA,oCACA,oCACA,+BACA,mCACA,mBACA,eACA,kBACA,wBACA,gBACA,kBACA,uBACA,uBACA,+BACA,uCACA,kFACA,kBACA,mBACA,oCACA,+BACA,kCACA,8BACA,mDACA,gBACA,iBACA,mBACA,uBACA,kBACA,oBACA,gBACA,oBACA,qBACA,+BACA,sBACA,mBACA,sBACA,kBACA,gBACA,oBACA,yBACA,oBACA,eACA,sBACA,kBACA,qBACA,oCACA,4BACA,6BACA,kBACA,oBACA,mBACA,mCACA,sBACA,0BACA,qCACA,iDACA,mDACA,sDACA,2EACA,0DACA,sDACA,sDACA,2DACA,uEACA,+DACA,oEACA,gCACA,qCACA,qCACA,4BACA,uCACA,mBACA,oBACA,2BACA,yCACA,6DACA,gEACA,yDACA,mBACA,oBACA,mBACA,eACA,mEACA,qEACA,6DACA,sEACA,8BACA,6CACA,kCACA,wCACA,0BACF,CACF,CACF,CACF,CACF,CACF,CACF,EAEaC,GAAmC,CAC9C,KAAM,WACN,KAAM,CAAE,2BAA4B,YAAa,EACjD,OAAQ,CACN,CACE,KAAM,QACN,OAAQ,CACN,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC7G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC9G,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,CACjF,CACF,EACA,CACE,KAAM,QACN,OAAQ,CACN,QACA,+FACA,uFACA,yFACA,8FACA,wDACA,+BACA,qEACA,qIACA,qGACA,oFACA,oHACA,yEACA,6FACA,6FACA,kHACA,+EACA,mFACA,4EACA,gGACA,8FACA,sHACA,2FACA,yFACA,iHACA,oEACA,yDACA,kDACA,4BACA,0CACA,+BACA,6BACA,kCACA,iCACA,8DACA,+DACA,mCACA,kDACA,+BACA,0CACA,+BACA,6BACA,kCACA,iCACA,8DACA,+DACA,mCACA,kDACA,2BACA,0CACA,6BACA,qEACA,+CACA,+BACA,0DACA,+DACA,6BACA,kCACA,kCACA,iCACA,8DACA,+DACA,mFACA,qEACA,qEACA,2DACA,6IACA,kGACA,kHACA,qDACA,yDACA,uDACA,wFACA,8FACA,sDACA,yEACA,qEACA,gFACA,+EACA,oEACA,6BACA,oCACA,qBACA,qCACA,gEACA,0EACA,8EACA,uFACA,2JACA,0CACA,gFACA,+CACA,kEACA,8DACA,yEACA,kEACA,uEACA,oFACA,qBACA,yEACA,kGACA,qCACA,2EACA,oCACA,0CACA,kDACA,sDACA,+DACA,kDACA,uEACA,6DACA,qDACA,iEACA,gFACA,+CACA,kEACA,8DACA,yEACA,kEACA,6BACA,0CACA,oCACA,qBACA,+BACA,wBACA,0BACA,oFACA,qBACA,qCACA,uCACA,0EACA,mCACA,kDACA,uEACA,wEACA,kDACA,yFACA,sFACA,4FACA,6JACA,oKACA,+EACA,mFACA,wGACA,yHACA,sCACA,uFACA,iKACA,iKACA,qFACA,4FACA,mHACA,sCACA,4FACA,qFACA,mMACA,6IACA,mMACA,kJACA,iGACA,kMACA,iJACA,8CACA,oDACA,yGACA,0GACA,wFACA,sDACA,+DACA,kDACA,yLACA,wIACA,gDACA,sHACA,6NACA,gDACA,yGACA,2FACA,oHACA,8GACA,mEACA,gDACA,sFACA,kGACA,oFACA,sEACA,6EACA,yGACA,gDACA,6GACA,8FACA,wFACA,sDACA,iCACA,wFACA,4FACA,kFACA,4GACA,iGACA,yCACA,8CACA,6DACA,qDACA,uFACA,oDACA,yDACA,uDACA,mJACA,qCACA,yDACA,uDACA,sIACA,yFACA,+EACA,yGACA,mIACA,8CACA,iDACA,mDACA,kDACA,oDACA,oDACA,+CACA,mEACA,yGACA,gDACA,wKACA,sHACA,mDACA,kDACA,8FACA,sHACA,uEACA,2FACA,4GACA,wEACA,qCACA,mGACA,gFACA,gFACA,0HACA,6FACA,oFACA,6GACA,sEACA,wCACA,4DACA,0GACA,mEACA,qEACA,iDACA,mDACA,kDACA,6BACA,oDACA,2CACA,2CACA,gEACA,iDACA,mDACA,kDACA,6BACA,4CACA,gOACA,gDACA,4GACA,uGACA,2DACA,yGACA,kEACA,iHACA,oEACA,yDACA,kDACA,4BACA,0CACA,6BACA,kCACA,mFACA,qEACA,qEACA,2DACA,6IACA,kGACA,kHACA,qDACA,yDACA,uDACA,wFACA,8FACA,sDACA,yEACA,qEACA,gFACA,+EACA,oEACA,6BACA,oCACA,qBACA,gEACA,0EACA,8EACA,uFACA,2JACA,0CACA,6DACA,qDACA,iEACA,gFACA,+CACA,kEACA,8DACA,yEACA,kEACA,+BACA,yFACA,sFACA,uFACA,iKACA,iKACA,qFACA,4FACA,mHACA,sCACA,4FACA,qFACA,mEACA,sHACA,+CACA,mEACA,yGACA,gDACA,sHACA,kFACA,+CACA,mEACA,yGACA,gDACA,kHACA,sHACA,+CACA,mEACA,yGACA,gDACA,oHACA,+FACA,qFACA,+GACA,yIACA,4FACA,6CACA,wCACA,qFACA,4DACA,mEACF,CACF,EACA,CACE,KAAM,OACN,OAAQ,CACN,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAC9G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CACvE,CACF,EACA,CACE,KAAM,QACN,OAAQ,CACN,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IACxxD,CACF,EACA,CACE,KAAM,YACN,OAAQ,CACN,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC9G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,E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","sources":["webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/ConfigEditor.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/MetaDataInspector.tsx","webpack://grafana/./.yarn/__virtual__/react-use-virtual-311c97a32e/0/cache/react-use-npm-17.4.0-0ef4521544-98566c4817.zip/node_modules/react-use/esm/useMountedState.js","webpack://grafana/./.yarn/__virtual__/react-use-virtual-311c97a32e/0/cache/react-use-npm-17.4.0-0ef4521544-98566c4817.zip/node_modules/react-use/esm/useAsyncFn.js","webpack://grafana/./.yarn/__virtual__/react-use-virtual-311c97a32e/0/cache/react-use-npm-17.4.0-0ef4521544-98566c4817.zip/node_modules/react-use/esm/useAsync.js","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/components/StreamingClientEditor.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/components/RandomWalkEditor.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/components/CSVContentEditor.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/components/CSVFileEditor.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/dataquery.gen.ts","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/constants.ts","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/components/CSVWaveEditor.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/components/ErrorEditor.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/components/GrafanaLiveEditor.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/components/NodeGraphEditor.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/components/PredictablePulseEditor.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/components/RawFrameEditor.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Forms/Legend.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Forms/FieldSet.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/components/SimulationSchemaForm.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/components/SimulationQueryEditor.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/components/USAQueryEditor.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/utils/labels.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/utils/Registry.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/transformations/matchers/ids.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/transformations/matchers/fieldTypeMatcher.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/transformations/fieldReducer.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/transformations/matchers/compareValues.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/transformations/matchers/fieldValueMatcher.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/field/fieldState.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/text/string.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/transformations/matchers/nameMatcher.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/transformations/matchers/predicates.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/transformations/matchers/refIdMatcher.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/transformations/matchers/simpleFieldMatcher.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/transformations/matchers/valueMatchers/equalMatchers.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/transformations/matchers/valueMatchers/nullMatchers.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/transformations/matchers/valueMatchers/numericMatchers.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/transformations/matchers/valueMatchers/rangeMatchers.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/transformations/matchers/valueMatchers/regexMatchers.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/transformations/matchers.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/transformations/transformers/ids.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/transformations/transformers/joinByField.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/transformations/transformers/joinDataFrames.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/utils/legend.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/dataframe/StreamingDataFrame.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/types/vector.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/vector/vectorToArray.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/vector/FunctionalVector.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/vector/CircularVector.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/utils/fieldParser.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/dataframe/MutableDataFrame.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/dataframe/CircularDataFrame.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/utils/csv.ts","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/LogIpsum.ts","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/runStreams.ts","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/QueryEditor.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/TestInfoTab.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/utils/variables.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/types/live.ts","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/metricTree.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/utils/nodeGraph.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-5bf5e61bca/1/packages/grafana-data/src/types/fieldColor.ts","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/testData/serviceMapResponse.ts","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/nodeGraphUtils.ts","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/testData/flameGraphResponse.ts","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/variables.ts","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/datasource.ts","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/module.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/Forms/InlineFieldRow.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-2a6ff86fdd/1/packages/grafana-ui/src/components/TextArea/TextArea.tsx"],"sourcesContent":["// Libraries\nimport React, { PureComponent } from 'react';\n\nimport { DataSourcePluginOptionsEditorProps } from '@grafana/data';\n\ntype Props = DataSourcePluginOptionsEditorProps;\n\n/**\n * Empty Config Editor -- settings to save\n */\nexport class ConfigEditor extends PureComponent<Props> {\n  render() {\n    return <div />;\n  }\n}\n","import React from 'react';\n\nimport { MetadataInspectorProps } from '@grafana/data';\nimport { Stack } from '@grafana/ui';\n\nimport { TestData } from './dataquery.gen';\nimport { TestDataDataSource } from './datasource';\n\nexport type Props = MetadataInspectorProps<TestDataDataSource, TestData>;\n\nexport function MetaDataInspector({ data }: Props) {\n  return (\n    <Stack direction=\"column\">\n      <div>Meta data inspector for the TestData data source.</div>\n\n      {data.map((frame, index) => (\n        <>\n          <div>Frame: {index}</div>\n          <div>\n            Custom meta: <br />\n            {JSON.stringify(frame.meta?.custom, null, 2)}\n          </div>\n        </>\n      ))}\n    </Stack>\n  );\n}\n","import { useCallback, useEffect, useRef } from 'react';\nexport default function useMountedState() {\n    var mountedRef = useRef(false);\n    var get = useCallback(function () { return mountedRef.current; }, []);\n    useEffect(function () {\n        mountedRef.current = true;\n        return function () {\n            mountedRef.current = false;\n        };\n    }, []);\n    return get;\n}\n","import { __assign } from \"tslib\";\nimport { useCallback, useRef, useState } from 'react';\nimport useMountedState from './useMountedState';\nexport default function useAsyncFn(fn, deps, initialState) {\n    if (deps === void 0) { deps = []; }\n    if (initialState === void 0) { initialState = { loading: false }; }\n    var lastCallId = useRef(0);\n    var isMounted = useMountedState();\n    var _a = useState(initialState), state = _a[0], set = _a[1];\n    var callback = useCallback(function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var callId = ++lastCallId.current;\n        if (!state.loading) {\n            set(function (prevState) { return (__assign(__assign({}, prevState), { loading: true })); });\n        }\n        return fn.apply(void 0, args).then(function (value) {\n            isMounted() && callId === lastCallId.current && set({ value: value, loading: false });\n            return value;\n        }, function (error) {\n            isMounted() && callId === lastCallId.current && set({ error: error, loading: false });\n            return error;\n        });\n    }, deps);\n    return [state, callback];\n}\n","import { useEffect } from 'react';\nimport useAsyncFn from './useAsyncFn';\nexport default function useAsync(fn, deps) {\n    if (deps === void 0) { deps = []; }\n    var _a = useAsyncFn(fn, deps, {\n        loading: true,\n    }), state = _a[0], callback = _a[1];\n    useEffect(function () {\n        callback();\n    }, [callback]);\n    return state;\n}\n","import React, { ChangeEvent } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { InlineField, InlineFieldRow, Input, Select } from '@grafana/ui';\n\nimport { EditorProps } from '../QueryEditor';\n\nconst streamingClientFields = [\n  { label: 'Speed (ms)', id: 'speed', placeholder: 'value', min: 10, step: 10 },\n  { label: 'Spread', id: 'spread', placeholder: 'value', min: 0.5, step: 0.1 },\n  { label: 'Noise', id: 'noise', placeholder: 'value', min: 0, step: 0.1 },\n  { label: 'Bands', id: 'bands', placeholder: 'bands', min: 0, step: 1 },\n] as const;\n\nconst types = [\n  { value: 'signal', label: 'Signal' },\n  { value: 'logs', label: 'Logs' },\n  { value: 'fetch', label: 'Fetch' },\n];\n\nexport const StreamingClientEditor = ({ onChange, query }: EditorProps) => {\n  const onSelectChange = ({ value }: SelectableValue) => {\n    onChange({ target: { name: 'type', value } });\n  };\n\n  // Convert values to numbers before saving\n  const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    onChange({ target: { name, value: Number(value) } });\n  };\n\n  return (\n    <InlineFieldRow>\n      <InlineField label=\"Type\" labelWidth={14}>\n        <Select width={32} onChange={onSelectChange} defaultValue={types[0]} options={types} />\n      </InlineField>\n      {query?.stream?.type === 'signal' &&\n        streamingClientFields.map(({ label, id, min, step, placeholder }) => {\n          return (\n            <InlineField label={label} labelWidth={14} key={id}>\n              <Input\n                width={32}\n                type=\"number\"\n                id={`stream.${id}-${query.refId}`}\n                name={id}\n                min={min}\n                step={step}\n                value={query.stream?.[id]}\n                placeholder={placeholder}\n                onChange={onInputChange}\n              />\n            </InlineField>\n          );\n        })}\n\n      {query?.stream?.type === 'fetch' && (\n        <InlineField label=\"URL\" labelWidth={14} grow>\n          <Input\n            type=\"text\"\n            name=\"url\"\n            id={`stream.url-${query.refId}`}\n            value={query?.stream?.url}\n            placeholder=\"Fetch URL\"\n            onChange={onChange}\n          />\n        </InlineField>\n      )}\n    </InlineFieldRow>\n  );\n};\n","import React from 'react';\n\nimport { selectors } from '@grafana/e2e-selectors';\nimport { InlineField, InlineFieldRow, Input } from '@grafana/ui';\n\nimport { EditorProps } from '../QueryEditor';\nimport { TestData } from '../dataquery.gen';\n\nconst randomWalkFields: Array<{\n  label: string;\n  id: Selector;\n  placeholder: string;\n  min?: number;\n  step?: number;\n  max?: number;\n  tooltip?: string;\n}> = [\n  { label: 'Series count', id: 'seriesCount', placeholder: '1', min: 1, step: 1 },\n  { label: 'Start value', id: 'startValue', placeholder: 'auto', step: 1 },\n  { label: 'Min', id: 'min', placeholder: 'none', step: 0.1 },\n  { label: 'Max', id: 'max', placeholder: 'none', step: 0.1 },\n  { label: 'Spread', id: 'spread', placeholder: '1', min: 0.5, step: 0.1 },\n  { label: 'Noise', id: 'noise', placeholder: '0', min: 0, step: 0.1 },\n  {\n    label: 'Drop (%)',\n    id: 'drop',\n    placeholder: '0',\n    min: 0,\n    max: 100,\n    step: 1,\n    tooltip: 'Exclude some percent (chance) points',\n  },\n];\n\nconst testSelectors = selectors.components.DataSource.TestData.QueryTab;\ntype Selector = 'max' | 'min' | 'noise' | 'seriesCount' | 'spread' | 'startValue' | 'drop';\n\nexport const RandomWalkEditor = ({ onChange, query }: EditorProps) => {\n  return (\n    <InlineFieldRow>\n      {randomWalkFields.map(({ label, id, min, step, placeholder, tooltip }) => {\n        const selector = testSelectors[id];\n        return (\n          <InlineField label={label} labelWidth={14} key={id} aria-label={selector} tooltip={tooltip}>\n            <Input\n              width={32}\n              name={id}\n              type=\"number\"\n              id={`randomWalk-${id}-${query.refId}`}\n              min={min}\n              step={step}\n              value={(query as any)[id as keyof TestData] || placeholder}\n              placeholder={placeholder}\n              onChange={onChange}\n            />\n          </InlineField>\n        );\n      })}\n    </InlineFieldRow>\n  );\n};\n","import React from 'react';\n\nimport { CodeEditor } from '@grafana/ui';\n\nimport { EditorProps } from '../QueryEditor';\n\nexport const CSVContentEditor = ({ onChange, query }: EditorProps) => {\n  const onSaveCSV = (csvContent: string) => {\n    onChange({ ...query, csvContent });\n  };\n\n  return (\n    <CodeEditor\n      height={300}\n      language=\"csv\"\n      value={query.csvContent ?? ''}\n      onBlur={onSaveCSV}\n      onSave={onSaveCSV}\n      showMiniMap={false}\n      showLineNumbers={true}\n    />\n  );\n};\n","import React from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { InlineField, InlineFieldRow, Select } from '@grafana/ui';\n\nimport { EditorProps } from '../QueryEditor';\n\nexport const CSVFileEditor = ({ onChange, query }: EditorProps) => {\n  const onChangeFileName = ({ value }: SelectableValue<string>) => {\n    onChange({ ...query, csvFileName: value });\n  };\n\n  const files = [\n    'flight_info_by_state.csv',\n    'population_by_state.csv',\n    'gdp_per_capita.csv',\n    'js_libraries.csv',\n    'ohlc_dogecoin.csv',\n    'weight_height.csv',\n    'browser_marketshare.csv',\n    'automobiles.csv',\n  ].map((name) => ({ label: name, value: name }));\n\n  return (\n    <InlineFieldRow>\n      <InlineField label=\"File\" labelWidth={14}>\n        <Select\n          width={32}\n          onChange={onChangeFileName}\n          placeholder=\"Select csv file\"\n          options={files}\n          value={files.find((f) => f.value === query.csvFileName)}\n        />\n      </InlineField>\n    </InlineFieldRow>\n  );\n};\n","// Code generated - EDITING IS FUTILE. DO NOT EDIT.\n//\n// Generated by:\n//     public/app/plugins/gen.go\n// Using jennies:\n//     TSTypesJenny\n//     PluginTSTypesJenny\n//\n// Run 'make gen-cue' from repository root to regenerate.\n\nimport * as common from '@grafana/schema';\n\nexport enum TestDataQueryType {\n  Annotations = 'annotations',\n  Arrow = 'arrow',\n  CSVContent = 'csv_content',\n  CSVFile = 'csv_file',\n  CSVMetricValues = 'csv_metric_values',\n  DataPointsOutsideRange = 'datapoints_outside_range',\n  ExponentialHeatmapBucketData = 'exponential_heatmap_bucket_data',\n  FlameGraph = 'flame_graph',\n  GrafanaAPI = 'grafana_api',\n  LinearHeatmapBucketData = 'linear_heatmap_bucket_data',\n  Live = 'live',\n  Logs = 'logs',\n  ManualEntry = 'manual_entry',\n  NoDataPoints = 'no_data_points',\n  NodeGraph = 'node_graph',\n  PredictableCSVWave = 'predictable_csv_wave',\n  PredictablePulse = 'predictable_pulse',\n  RandomWalk = 'random_walk',\n  RandomWalkTable = 'random_walk_table',\n  RandomWalkWithError = 'random_walk_with_error',\n  RawFrame = 'raw_frame',\n  ServerError500 = 'server_error_500',\n  Simulation = 'simulation',\n  SlowQuery = 'slow_query',\n  StreamingClient = 'streaming_client',\n  TableStatic = 'table_static',\n  Trace = 'trace',\n  USA = 'usa',\n  VariablesQuery = 'variables-query',\n}\n\nexport interface StreamingQuery {\n  bands?: number;\n  noise: number;\n  speed: number;\n  spread: number;\n  type: ('signal' | 'logs' | 'fetch');\n  url?: string;\n}\n\nexport interface PulseWaveQuery {\n  offCount?: number;\n  offValue?: number;\n  onCount?: number;\n  onValue?: number;\n  timeStep?: number;\n}\n\nexport interface SimulationQuery {\n  config?: Record<string, unknown>;\n  key: {\n    type: string;\n    tick: number;\n    uid?: string;\n  };\n  last?: boolean;\n  stream?: boolean;\n}\n\nexport interface NodesQuery {\n  count?: number;\n  type?: ('random' | 'response' | 'random edges');\n}\n\nexport interface USAQuery {\n  fields?: Array<string>;\n  mode?: string;\n  period?: string;\n  states?: Array<string>;\n}\n\nexport const defaultUSAQuery: Partial<USAQuery> = {\n  fields: [],\n  states: [],\n};\n\nexport interface CSVWave {\n  labels?: string;\n  name?: string;\n  timeStep?: number;\n  valuesCSV?: string;\n}\n\n/**\n * TODO: Should this live here given it's not used in the dataquery?\n */\nexport interface Scenario {\n  description?: string;\n  hideAliasField?: boolean;\n  id: string;\n  name: string;\n  stringInput: string;\n}\n\nexport interface TestData extends common.DataQuery {\n  alias?: string;\n  channel?: string;\n  csvContent?: string;\n  csvFileName?: string;\n  csvWave?: Array<CSVWave>; // TODO can we prevent partial from being generated\n  /**\n   * Drop percentage (the chance we will lose a point 0-100)\n   */\n  dropPercent?: number;\n  errorType?: ('server_panic' | 'frontend_exception' | 'frontend_observable');\n  flamegraphDiff?: boolean;\n  labels?: string;\n  levelColumn?: boolean;\n  lines?: number;\n  nodes?: NodesQuery;\n  points?: Array<Array<(string | number)>>;\n  pulseWave?: PulseWaveQuery;\n  rawFrameContent?: string;\n  scenarioId?: TestDataQueryType;\n  seriesCount?: number;\n  sim?: SimulationQuery;\n  spanCount?: number;\n  stream?: StreamingQuery;\n  stringInput?: string;\n  usa?: USAQuery;\n}\n\nexport const defaultTestData: Partial<TestData> = {\n  csvWave: [],\n  points: [],\n  scenarioId: TestDataQueryType.RandomWalk,\n};\n","import { CSVWave, PulseWaveQuery, TestData, TestDataQueryType } from './dataquery.gen';\n\nexport const defaultPulseQuery: PulseWaveQuery = {\n  timeStep: 60,\n  onCount: 3,\n  onValue: 2,\n  offCount: 3,\n  offValue: 1,\n};\n\nexport const defaultCSVWaveQuery: CSVWave[] = [\n  {\n    timeStep: 60,\n    valuesCSV: '0,0,2,2,1,1',\n  },\n];\n\nexport const defaultQuery: TestData = {\n  scenarioId: TestDataQueryType.RandomWalk,\n  refId: '',\n};\n","import React, { PureComponent, useState } from 'react';\n\nimport { Button, InlineField, InlineFieldRow, Input } from '@grafana/ui';\n\nimport { defaultCSVWaveQuery } from '../constants';\nimport type { CSVWave } from '../dataquery.gen';\n\ninterface WavesProps {\n  waves?: CSVWave[];\n  onChange: (waves: CSVWave[]) => void;\n}\n\ninterface WaveProps {\n  wave: CSVWave;\n  index: number;\n  last: boolean;\n  onChange: (index: number, wave?: CSVWave) => void;\n  onAdd: () => void;\n}\n\nconst CSVWaveEditor = (props: WaveProps) => {\n  const { wave, last, index, onAdd, onChange } = props;\n  const [valuesCSV, setValuesCSV] = useState(wave.valuesCSV || '');\n  const [labels, setLabels] = useState(wave.labels || '');\n  const [name, setName] = useState(wave.name || '');\n  const onAction = () => {\n    if (last) {\n      onAdd();\n    } else {\n      onChange(index, undefined);\n    }\n  };\n  const onValueChange = <K extends keyof CSVWave, V extends CSVWave[K]>(key: K, value: V) => {\n    onChange(index, { ...wave, [key]: value });\n  };\n  const onKeyDown = (evt: React.KeyboardEvent<HTMLInputElement>) => {\n    if (evt.key === 'Enter') {\n      onValueChange('valuesCSV', valuesCSV);\n    }\n  };\n\n  return (\n    <InlineFieldRow>\n      <InlineField\n        label={'Values'}\n        grow\n        tooltip=\"Comma separated values. Each value may be an int, float, or null and must not be empty. Whitespace and trailing commas are removed\"\n      >\n        <Input\n          value={valuesCSV}\n          placeholder={'CSV values'}\n          onChange={(e) => setValuesCSV(e.currentTarget.value)}\n          autoFocus={true}\n          onBlur={() => onValueChange('valuesCSV', valuesCSV)}\n          onKeyDown={onKeyDown}\n        />\n      </InlineField>\n      <InlineField label={'Step'} tooltip=\"The number of seconds between datapoints.\">\n        <Input\n          value={wave.timeStep}\n          type=\"number\"\n          placeholder={'60'}\n          width={10}\n          onChange={(e) => onValueChange('timeStep', e.currentTarget.valueAsNumber)}\n        />\n      </InlineField>\n      <InlineField label={'Name'}>\n        <Input\n          value={name}\n          placeholder={'name'}\n          width={10}\n          onChange={(e) => setName(e.currentTarget.value)}\n          onBlur={() => onValueChange('name', name)}\n        />\n      </InlineField>\n      <InlineField label={'Labels'}>\n        <Input\n          value={labels}\n          placeholder={'labels'}\n          width={12}\n          onChange={(e) => setLabels(e.currentTarget.value)}\n          onBlur={() => onValueChange('labels', labels)}\n        />\n      </InlineField>\n      <Button icon={last ? 'plus' : 'minus'} variant=\"secondary\" onClick={onAction} />\n    </InlineFieldRow>\n  );\n};\n\nexport class CSVWavesEditor extends PureComponent<WavesProps> {\n  onChange = (index: number, wave?: CSVWave) => {\n    let waves = [...(this.props.waves ?? defaultCSVWaveQuery)];\n    if (wave) {\n      waves[index] = { ...wave };\n    } else {\n      // remove the element\n      waves.splice(index, 1);\n    }\n    this.props.onChange(waves);\n  };\n\n  onAdd = () => {\n    const waves = [...(this.props.waves ?? defaultCSVWaveQuery)];\n    waves.push({ ...defaultCSVWaveQuery[0] });\n    this.props.onChange(waves);\n  };\n\n  render() {\n    let waves = this.props.waves ?? defaultCSVWaveQuery;\n    if (!waves.length) {\n      waves = defaultCSVWaveQuery;\n    }\n\n    return (\n      <>\n        {waves.map((wave, index) => (\n          <CSVWaveEditor\n            key={`${index}/${wave.valuesCSV}`}\n            wave={wave}\n            index={index}\n            onAdd={this.onAdd}\n            onChange={this.onChange}\n            last={index === waves.length - 1}\n          />\n        ))}\n      </>\n    );\n  }\n}\n","import React from 'react';\n\nimport { InlineField, InlineFieldRow, Select } from '@grafana/ui';\n\nimport { EditorProps } from '../QueryEditor';\n\nconst ERROR_OPTIONS = [\n  {\n    label: 'Server panic',\n    value: 'server_panic',\n  },\n  {\n    label: 'Frontend exception',\n    value: 'frontend_exception',\n  },\n  {\n    label: 'Frontend observable',\n    value: 'frontend_observable',\n  },\n];\n\nconst FrontendErrorQueryEditor = ({ query, onChange }: EditorProps) => {\n  return (\n    <InlineFieldRow>\n      <InlineField labelWidth={14} label=\"Error type\">\n        <Select\n          options={ERROR_OPTIONS}\n          value={query.errorType}\n          onChange={(v) => {\n            onChange({ ...query, errorType: v.value });\n          }}\n        />\n      </InlineField>\n    </InlineFieldRow>\n  );\n};\n\nexport default FrontendErrorQueryEditor;\n","import React from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { InlineField, InlineFieldRow, Select } from '@grafana/ui';\n\nimport { EditorProps } from '../QueryEditor';\n\nconst liveTestDataChannels = [\n  {\n    label: 'random-2s-stream',\n    value: 'random-2s-stream',\n    description: 'Random stream with points every 2s',\n  },\n  {\n    label: 'random-flakey-stream',\n    value: 'random-flakey-stream',\n    description: 'Stream that returns data in random intervals',\n  },\n  {\n    label: 'random-labeled-stream',\n    value: 'random-labeled-stream',\n    description: 'Value with moving labels',\n  },\n  {\n    label: 'random-20Hz-stream',\n    value: 'random-20Hz-stream',\n    description: 'Random stream with points in 20Hz',\n  },\n];\n\nexport const GrafanaLiveEditor = ({ onChange, query }: EditorProps) => {\n  const onChannelChange = ({ value }: SelectableValue<string>) => {\n    onChange({ ...query, channel: value });\n  };\n\n  return (\n    <InlineFieldRow>\n      <InlineField label=\"Channel\" labelWidth={14}>\n        <Select\n          width={32}\n          onChange={onChannelChange}\n          placeholder=\"Select channel\"\n          options={liveTestDataChannels}\n          value={liveTestDataChannels.find((f) => f.value === query.channel)}\n        />\n      </InlineField>\n    </InlineFieldRow>\n  );\n};\n","import React from 'react';\n\nimport { Input, InlineFieldRow, InlineField, Select } from '@grafana/ui';\n\nimport { NodesQuery, TestData } from '../dataquery.gen';\n\nexport interface Props {\n  onChange: (value: NodesQuery) => void;\n  query: TestData;\n}\nexport function NodeGraphEditor({ query, onChange }: Props) {\n  const type = query.nodes?.type || 'random';\n  return (\n    <InlineFieldRow>\n      <InlineField label=\"Data type\" labelWidth={14}>\n        <Select<NodesQuery['type']>\n          options={options.map((o) => ({\n            label: o,\n            value: o,\n          }))}\n          value={options.find((item) => item === type)}\n          onChange={(value) => onChange({ ...query.nodes, type: value.value! })}\n          width={32}\n        />\n      </InlineField>\n      {(type === 'random' || type === 'random edges') && (\n        <InlineField label=\"Count\" labelWidth={14}>\n          <Input\n            type=\"number\"\n            name=\"count\"\n            value={query.nodes?.count}\n            width={32}\n            onChange={(e) =>\n              onChange({ ...query.nodes, count: e.currentTarget.value ? parseInt(e.currentTarget.value, 10) : 0 })\n            }\n            placeholder=\"10\"\n          />\n        </InlineField>\n      )}\n    </InlineFieldRow>\n  );\n}\n\nconst options: Array<NodesQuery['type']> = ['random', 'response', 'random edges'];\n","import React, { ChangeEvent } from 'react';\n\nimport { InlineField, InlineFieldRow, Input } from '@grafana/ui';\n\nimport { EditorProps } from '../QueryEditor';\nimport { PulseWaveQuery } from '../dataquery.gen';\n\nconst fields: Array<{\n  label: string;\n  id: keyof PulseWaveQuery;\n  placeholder: string;\n  tooltip: string;\n}> = [\n  { label: 'Step', id: 'timeStep', placeholder: '60', tooltip: 'The number of seconds between datapoints.' },\n  {\n    label: 'On Count',\n    id: 'onCount',\n    placeholder: '3',\n    tooltip: 'The number of values within a cycle, at the start of the cycle, that should have the onValue.',\n  },\n  { label: 'Off Count', id: 'offCount', placeholder: '6', tooltip: 'The number of offValues within the cycle.' },\n  {\n    label: 'On Value',\n    id: 'onValue',\n    placeholder: '1',\n    tooltip: 'The value for \"on values\", may be an int, float, or null.',\n  },\n  {\n    label: 'Off Value',\n    id: 'offValue',\n    placeholder: '1',\n    tooltip: 'The value for \"off values\", may be a int, float, or null.',\n  },\n];\n\nexport const PredictablePulseEditor = ({ onChange, query }: EditorProps) => {\n  // Convert values to numbers before saving\n  const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    onChange({ target: { name, value: Number(value) } });\n  };\n\n  return (\n    <InlineFieldRow>\n      {fields.map(({ label, id, placeholder, tooltip }) => {\n        return (\n          <InlineField label={label} labelWidth={14} key={id} tooltip={tooltip}>\n            <Input\n              width={32}\n              type=\"number\"\n              name={id}\n              id={`pulseWave.${id}-${query.refId}`}\n              value={query.pulseWave?.[id]}\n              placeholder={placeholder}\n              onChange={onInputChange}\n            />\n          </InlineField>\n        );\n      })}\n    </InlineFieldRow>\n  );\n};\n","import { isArray } from 'lodash';\nimport React, { useState } from 'react';\n\nimport { dataFrameToJSON, toDataFrame, toDataFrameDTO } from '@grafana/data';\nimport { toDataQueryResponse } from '@grafana/runtime';\nimport { Alert, CodeEditor } from '@grafana/ui';\n\nimport { EditorProps } from '../QueryEditor';\n\nexport const RawFrameEditor = ({ onChange, query }: EditorProps) => {\n  const [error, setError] = useState<string>();\n  const [warning, setWarning] = useState<string>();\n\n  const onSaveFrames = (rawFrameContent: string) => {\n    try {\n      const json = JSON.parse(rawFrameContent);\n      if (isArray(json)) {\n        setError(undefined);\n        setWarning(undefined);\n        onChange({ ...query, rawFrameContent });\n        return;\n      }\n\n      let data = undefined;\n\n      // Copy paste from panel json\n      if (isArray(json.series) && json.state) {\n        data = json.series.map((v: unknown) => toDataFrameDTO(toDataFrame(v)));\n      } else {\n        // Chek if it is a copy of the raw resuls\n        const v = toDataQueryResponse({ data: json });\n        if (v.data?.length && !v.error) {\n          data = v.data.map((f) => dataFrameToJSON(f));\n        }\n      }\n\n      if (data) {\n        console.log('Original', json);\n        console.log('Save', data);\n        setError(undefined);\n        setWarning('Converted to direct frame result');\n        onChange({ ...query, rawFrameContent: JSON.stringify(data, null, 2) });\n        return;\n      }\n\n      setError('Unable to read dataframes in text');\n    } catch (e) {\n      console.log('Error parsing json', e);\n      setError('Enter JSON array of data frames (or raw query results body)');\n      setWarning(undefined);\n    }\n  };\n\n  return (\n    <>\n      {error && <Alert title={error} severity=\"error\" />}\n      {warning && <Alert title={warning} severity=\"warning\" />}\n      <CodeEditor\n        height={300}\n        language=\"json\"\n        value={query.rawFrameContent ?? '[]'}\n        onBlur={onSaveFrames}\n        onSave={onSaveFrames}\n        showMiniMap={true}\n        showLineNumbers={true}\n      />\n    </>\n  );\n};\n","import { css, cx } from '@emotion/css';\nimport React, { ReactNode } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\n\nexport interface LabelProps extends React.HTMLAttributes<HTMLLegendElement> {\n  children: string | ReactNode;\n  description?: string;\n}\n\nexport const getLegendStyles = (theme: GrafanaTheme2) => {\n  return {\n    legend: css({\n      fontSize: theme.typography.h3.fontSize,\n      fontWeight: theme.typography.fontWeightRegular,\n      margin: theme.spacing(0, 0, 2, 0),\n    }),\n  };\n};\n\nexport const Legend = ({ children, className, ...legendProps }: LabelProps) => {\n  const styles = useStyles2(getLegendStyles);\n\n  return (\n    <legend className={cx(styles.legend, className)} {...legendProps}>\n      {children}\n    </legend>\n  );\n};\n","import { css, cx } from '@emotion/css';\nimport React, { HTMLProps } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\n\nimport { Legend } from './Legend';\n\nexport interface Props extends Omit<HTMLProps<HTMLFieldSetElement>, 'label'> {\n  children: React.ReactNode[] | React.ReactNode;\n  /** Label for the fieldset's legend */\n  label?: React.ReactNode;\n}\n\nexport const FieldSet = ({ label, children, className, ...rest }: Props) => {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <fieldset className={cx(styles.wrapper, className)} {...rest}>\n      {label && <Legend>{label}</Legend>}\n      {children}\n    </fieldset>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css({\n    marginBottom: theme.spacing(4),\n\n    '&:last-child': {\n      marginBottom: 0,\n    },\n  }),\n});\n","import { css } from '@emotion/css';\nimport React, { FormEvent, useState, ChangeEvent } from 'react';\n\nimport { DataFrameSchema, FieldSchema, GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2, TextArea, InlineField, Input, FieldSet, InlineSwitch } from '@grafana/ui';\n\ninterface SchemaFormProps {\n  config: Record<string, any>;\n  schema: DataFrameSchema;\n  onChange: (config: Record<string, any>) => void;\n}\n\nconst renderInput = (field: FieldSchema, onChange: SchemaFormProps['onChange'], config: SchemaFormProps['config']) => {\n  switch (field.type) {\n    case 'number':\n      return (\n        <Input\n          type=\"number\"\n          defaultValue={config?.[field.name]}\n          onChange={(e: FormEvent<HTMLInputElement>) => {\n            const newValue = e.currentTarget.valueAsNumber;\n            onChange({ ...config, [field.name]: newValue });\n          }}\n        />\n      );\n    case 'boolean':\n      return (\n        <InlineSwitch\n          value={config?.[field.name] ?? true}\n          onChange={() => {\n            onChange({ ...config, [field.name]: !config[field.name] });\n          }}\n        />\n      );\n    default:\n      return (\n        <Input\n          type=\"string\"\n          value={config?.[field.name]}\n          onChange={(e: ChangeEvent<HTMLInputElement>) => {\n            const newValue = e.target.value;\n            onChange({ ...config, [field.name]: newValue });\n          }}\n        />\n      );\n  }\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    jsonView: css`\n      margin-bottom: ${theme.spacing(1)};\n    `,\n  };\n};\n\nexport const SimulationSchemaForm = ({ config, schema, onChange }: SchemaFormProps) => {\n  const [jsonView, setJsonView] = useState<boolean>(false);\n\n  const styles = useStyles2(getStyles);\n\n  const onUpdateTextArea = (event: FormEvent<HTMLTextAreaElement>) => {\n    const element = event.currentTarget;\n    onChange(JSON.parse(element.value));\n  };\n\n  return (\n    <FieldSet label=\"Config\">\n      <InlineSwitch\n        className={styles.jsonView}\n        label=\"JSON View\"\n        showLabel\n        value={jsonView}\n        onChange={() => setJsonView(!jsonView)}\n      />\n      {jsonView ? (\n        <TextArea defaultValue={JSON.stringify(config, null, 2)} rows={7} onChange={onUpdateTextArea} />\n      ) : (\n        <>\n          {schema.fields.map((field) => (\n            <InlineField label={field.name} key={field.name} labelWidth={14}>\n              {renderInput(field, onChange, config)}\n            </InlineField>\n          ))}\n        </>\n      )}\n    </FieldSet>\n  );\n};\n","import React, { FormEvent, useMemo, useState } from 'react';\nimport { useAsync } from 'react-use';\n\nimport { DataFrameJSON, SelectableValue } from '@grafana/data';\nimport { InlineField, InlineFieldRow, InlineSwitch, Input, Label, Select } from '@grafana/ui';\n\nimport { EditorProps } from '../QueryEditor';\nimport { SimulationQuery } from '../dataquery.gen';\n\nimport { SimulationSchemaForm } from './SimulationSchemaForm';\n\n// Type         string      `json:\"type\"`\n// Name         string      `json:\"name\"`\n// Description  string      `json:\"description\"`\n// OnlyForward  bool        `json:\"forward\"`\n// ConfigFields *data.Frame `json:\"config\"`\n\ninterface SimInfo {\n  type: string;\n  name: string;\n  description: string;\n  forward: boolean;\n  config: DataFrameJSON;\n}\n\nexport const SimulationQueryEditor = ({ onChange, query, ds }: EditorProps) => {\n  const simQuery = query.sim ?? ({} as SimulationQuery);\n  const simKey = simQuery.key ?? {};\n  // keep track of updated config state to pass down to form\n  const [cfgValue, setCfgValue] = useState<Record<string, any>>({});\n\n  // This only changes once\n  const info = useAsync(async () => {\n    const v = await ds.getResource<SimInfo[]>('sims');\n    return {\n      sims: v,\n      options: v.map((s) => ({ label: s.name, value: s.type, description: s.description })),\n    };\n  }, [ds]);\n\n  const current = useMemo(() => {\n    const type = simKey.type;\n    if (!type || !info.value) {\n      return {};\n    }\n    return {\n      details: info.value.sims.find((v) => v.type === type),\n      option: info.value.options.find((v) => v.value === type),\n    };\n  }, [info.value, simKey?.type]);\n\n  let config = useAsync(async () => {\n    let path = simKey.type + '/' + simKey.tick + 'hz';\n    if (simKey.uid) {\n      path += '/' + simKey.uid;\n    }\n    let config = (await ds.getResource('sim/' + path))?.config;\n    setCfgValue(config.value);\n    return config;\n  }, [simKey.type, simKey.tick, simKey.uid]);\n\n  const onUpdateKey = (key: typeof simQuery.key) => {\n    onChange({ ...query, sim: { ...simQuery, key } });\n  };\n\n  const onUIDChanged = (e: FormEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onUpdateKey({ ...simKey, uid: value ?? undefined });\n  };\n\n  const onTickChanged = (e: FormEvent<HTMLInputElement>) => {\n    const tick = e.currentTarget.valueAsNumber;\n    onUpdateKey({ ...simKey, tick });\n  };\n\n  const onTypeChange = (v: SelectableValue<string>) => {\n    onUpdateKey({ ...simKey, type: v.value! });\n  };\n\n  const onToggleStream = () => {\n    onChange({ ...query, sim: { ...simQuery, stream: !simQuery.stream } });\n  };\n\n  const onToggleLast = () => {\n    onChange({ ...query, sim: { ...simQuery, last: !simQuery.last } });\n  };\n\n  const onSchemaFormChange = (config: Record<string, any>) => {\n    let path = simKey.type + '/' + simKey.tick + 'hz';\n    if (simKey.uid) {\n      path += '/' + simKey.uid;\n    }\n    ds.postResource('sim/' + path, config).then((res) => {\n      setCfgValue(res.config);\n    });\n  };\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField labelWidth={14} label=\"Simulation\" tooltip=\"\">\n          <Select\n            isLoading={info.loading}\n            options={info.value?.options ?? []}\n            value={current.option}\n            onChange={onTypeChange}\n            width={32}\n          />\n        </InlineField>\n      </InlineFieldRow>\n      <InlineFieldRow>\n        <InlineField labelWidth={14} label=\"Stream\" tooltip=\"connect to the live channel\">\n          <InlineSwitch value={Boolean(simQuery.stream)} onChange={onToggleStream} />\n        </InlineField>\n\n        <InlineField label=\"Interval\" tooltip=\"the rate a simulation will spit out events\">\n          <Input\n            width={10}\n            type=\"number\"\n            value={simKey.tick}\n            onChange={onTickChanged}\n            min={1 / 10}\n            max={50}\n            suffix=\"hz\"\n          />\n        </InlineField>\n\n        <InlineField label=\"Last\" tooltip=\"Only return the last value\">\n          <Label>\n            <InlineSwitch value={Boolean(simQuery.last)} onChange={onToggleLast} />\n          </Label>\n        </InlineField>\n        <InlineField label=\"UID\" tooltip=\"A UID will allow multiple simulations to run at the same time\">\n          <Input type=\"text\" placeholder=\"optional\" value={simQuery.key.uid} onChange={onUIDChanged} />\n        </InlineField>\n      </InlineFieldRow>\n      <SimulationSchemaForm\n        onChange={onSchemaFormChange}\n        config={cfgValue ?? config.value}\n        schema={current.details?.config.schema ?? { fields: [] }}\n      />\n    </>\n  );\n};\n","import React from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { InlineFieldRow, InlineField, Select, MultiSelect, Input } from '@grafana/ui';\n\nimport { USAQuery } from '../dataquery.gen';\n\nexport interface Props {\n  onChange: (value: USAQuery) => void;\n  query: USAQuery;\n}\n\nexport function USAQueryEditor({ query, onChange }: Props) {\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField labelWidth={14} label=\"Mode\">\n          <Select\n            options={usaQueryModes}\n            onChange={(v) => {\n              onChange({ ...query, mode: v.value });\n            }}\n            width={32}\n            value={usaQueryModes.find((ep) => ep.value === query.mode)}\n          />\n        </InlineField>\n        <InlineField label=\"Period\">\n          <Input\n            value={query.period}\n            placeholder={'30m'}\n            onChange={(v) => {\n              onChange({ ...query, period: v.currentTarget.value });\n            }}\n          />\n        </InlineField>\n      </InlineFieldRow>\n      <InlineFieldRow>\n        <InlineField labelWidth={14} label=\"Fields\">\n          <MultiSelect\n            options={fieldNames}\n            onChange={(vals: SelectableValue[]) => {\n              onChange({ ...query, fields: vals.map((v) => v.value) });\n            }}\n            width={32}\n            placeholder=\"all\"\n            value={query.fields}\n          />\n        </InlineField>\n        <InlineField label=\"States\" grow>\n          <MultiSelect\n            options={stateNames}\n            onChange={(vals: SelectableValue[]) => {\n              onChange({ ...query, states: vals.map((v) => v.value) });\n            }}\n            placeholder=\"all\"\n            value={query.states}\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n}\n\nexport const usaQueryModes = [\n  'values-as-rows',\n  'values-as-fields',\n  'values-as-labeled-fields',\n  'timeseries',\n  'timeseries-wide',\n].map((f) => ({ label: f, value: f }));\n\nexport const fieldNames = [\n  'foo',\n  'bar',\n  'baz', // all short\n].map((f) => ({ label: f, value: f }));\n\nexport const stateNames = [\n  'AL',\n  'AK',\n  'AZ',\n  'AR',\n  'CA',\n  'CO',\n  'CT',\n  'DE',\n  'DC',\n  'FL',\n  'GA',\n  'HI',\n  'ID',\n  'IL',\n  'IN',\n  'IA',\n  'KS',\n  'KY',\n  'LA',\n  'ME',\n  'MT',\n  'NE',\n  'NV',\n  'NH',\n  'NJ',\n  'NM',\n  'NY',\n  'NC',\n  'ND',\n  'OH',\n  'OK',\n  'OR',\n  'MD',\n  'MA',\n  'MI',\n  'MN',\n  'MS',\n  'MO',\n  'PA',\n  'RI',\n  'SC',\n  'SD',\n  'TN',\n  'TX',\n  'UT',\n  'VT',\n  'VA',\n  'WA',\n  'WV',\n  'WI',\n  'WY',\n].map((f) => ({ label: f, value: f }));\n","import { Labels } from '../types/data';\n\n/**\n * Regexp to extract Prometheus-style labels\n */\nconst labelRegexp = /\\b(\\w+)(!?=~?)\"([^\"\\n]*?)\"/g;\n\n/**\n * Returns a map of label keys to value from an input selector string.\n *\n * Example: `parseLabels('{job=\"foo\", instance=\"bar\"}) // {job: \"foo\", instance: \"bar\"}`\n */\nexport function parseLabels(labels: string): Labels {\n  const labelsByKey: Labels = {};\n  labels.replace(labelRegexp, (_, key, operator, value) => {\n    labelsByKey[key] = value;\n    return '';\n  });\n  return labelsByKey;\n}\n\n/**\n * Returns a map labels that are common to the given label sets.\n */\nexport function findCommonLabels(labelsSets: Labels[]): Labels {\n  return labelsSets.reduce(\n    (acc, labels) => {\n      if (!labels) {\n        throw new Error('Need parsed labels to find common labels.');\n      }\n      // Remove incoming labels that are missing or not matching in value\n      Object.keys(labels).forEach((key) => {\n        if (acc[key] === undefined || acc[key] !== labels[key]) {\n          delete acc[key];\n        }\n      });\n      // Remove common labels that are missing from incoming label set\n      Object.keys(acc).forEach((key) => {\n        if (labels[key] === undefined) {\n          delete acc[key];\n        }\n      });\n      return acc;\n    },\n    { ...labelsSets[0] }\n  );\n}\n\n/**\n * Returns a map of labels that are in `labels`, but not in `commonLabels`.\n */\nexport function findUniqueLabels(labels: Labels | undefined, commonLabels: Labels): Labels {\n  const uncommonLabels: Labels = { ...labels };\n  Object.keys(commonLabels).forEach((key) => {\n    delete uncommonLabels[key];\n  });\n  return uncommonLabels;\n}\n\n/**\n * Check that all labels exist in another set of labels\n */\nexport function matchAllLabels(expect: Labels, against?: Labels): boolean {\n  if (!expect) {\n    return true; // nothing to match\n  }\n  for (const [key, value] of Object.entries(expect)) {\n    if (!against || against[key] !== value) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Serializes the given labels to a string.\n */\nexport function formatLabels(labels: Labels, defaultValue = '', withoutBraces?: boolean): string {\n  if (!labels || Object.keys(labels).length === 0) {\n    return defaultValue;\n  }\n  const labelKeys = Object.keys(labels).sort();\n  const cleanSelector = labelKeys.map((key) => `${key}=\"${labels[key]}\"`).join(', ');\n  if (withoutBraces) {\n    return cleanSelector;\n  }\n  return ['{', cleanSelector, '}'].join('');\n}\n","import { PluginState } from '../types';\nimport { SelectableValue } from '../types/select';\n\nexport interface RegistryItem {\n  id: string; // Unique Key -- saved in configs\n  name: string; // Display Name, can change without breaking configs\n  description?: string;\n  aliasIds?: string[]; // when the ID changes, we may want backwards compatibility ('current' => 'last')\n\n  /**\n   * Some extensions should not be user selectable\n   *  like: 'all' and 'any' matchers;\n   */\n  excludeFromPicker?: boolean;\n\n  /**\n   * Optional feature state\n   */\n  state?: PluginState;\n}\n\nexport interface RegistryItemWithOptions<TOptions = any> extends RegistryItem {\n  /**\n   * Convert the options to a string\n   */\n  getOptionsDisplayText?: (options: TOptions) => string;\n\n  /**\n   * Default options used if nothing else is specified\n   */\n  defaultOptions?: TOptions;\n}\n\ninterface RegistrySelectInfo {\n  options: Array<SelectableValue<string>>;\n  current: Array<SelectableValue<string>>;\n}\n\nexport class Registry<T extends RegistryItem> {\n  private ordered: T[] = [];\n  private byId = new Map<string, T>();\n  private initialized = false;\n\n  constructor(private init?: () => T[]) {\n    this.init = init;\n  }\n\n  setInit = (init: () => T[]) => {\n    if (this.initialized) {\n      throw new Error('Registry already initialized');\n    }\n    this.init = init;\n  };\n\n  getIfExists(id: string | undefined): T | undefined {\n    if (!this.initialized) {\n      this.initialize();\n    }\n\n    if (id) {\n      return this.byId.get(id);\n    }\n\n    return undefined;\n  }\n\n  private initialize() {\n    if (this.init) {\n      for (const ext of this.init()) {\n        this.register(ext);\n      }\n    }\n    this.sort();\n    this.initialized = true;\n  }\n\n  get(id: string): T {\n    const v = this.getIfExists(id);\n    if (!v) {\n      throw new Error(`\"${id}\" not found in: ${this.list().map((v) => v.id)}`);\n    }\n    return v;\n  }\n\n  selectOptions(current?: string[], filter?: (ext: T) => boolean): RegistrySelectInfo {\n    if (!this.initialized) {\n      this.initialize();\n    }\n\n    const select: RegistrySelectInfo = {\n      options: [],\n      current: [],\n    };\n\n    const currentOptions: Record<string, SelectableValue<string>> = {};\n    if (current) {\n      for (const id of current) {\n        currentOptions[id] = {};\n      }\n    }\n\n    for (const ext of this.ordered) {\n      if (ext.excludeFromPicker) {\n        continue;\n      }\n      if (filter && !filter(ext)) {\n        continue;\n      }\n\n      const option = {\n        value: ext.id,\n        label: ext.name,\n        description: ext.description,\n      };\n\n      if (ext.state === PluginState.alpha) {\n        option.label += ' (alpha)';\n      }\n\n      select.options.push(option);\n      if (currentOptions[ext.id]) {\n        currentOptions[ext.id] = option;\n      }\n    }\n\n    if (current) {\n      // this makes sure we preserve the order of ids\n      select.current = Object.values(currentOptions);\n    }\n\n    return select;\n  }\n\n  /**\n   * Return a list of values by ID, or all values if not specified\n   */\n  list(ids?: string[]): T[] {\n    if (!this.initialized) {\n      this.initialize();\n    }\n\n    if (ids) {\n      const found: T[] = [];\n      for (const id of ids) {\n        const v = this.getIfExists(id);\n        if (v) {\n          found.push(v);\n        }\n      }\n      return found;\n    }\n\n    return this.ordered;\n  }\n\n  isEmpty(): boolean {\n    if (!this.initialized) {\n      this.initialize();\n    }\n\n    return this.ordered.length === 0;\n  }\n\n  register(ext: T) {\n    if (this.byId.has(ext.id)) {\n      throw new Error('Duplicate Key:' + ext.id);\n    }\n\n    this.byId.set(ext.id, ext);\n    this.ordered.push(ext);\n\n    if (ext.aliasIds) {\n      for (const alias of ext.aliasIds) {\n        if (!this.byId.has(alias)) {\n          this.byId.set(alias, ext);\n        }\n      }\n    }\n\n    if (this.initialized) {\n      this.sort();\n    }\n  }\n\n  private sort() {\n    // TODO sort the list\n  }\n}\n","// This needs to be in its own file to avoid circular references\n\n// Builtin Predicates\n// not using 'any' and 'never' since they are reserved keywords\nexport enum MatcherID {\n  anyMatch = 'anyMatch', // checks children\n  allMatch = 'allMatch', // checks children\n  invertMatch = 'invertMatch', // checks child\n  alwaysMatch = 'alwaysMatch',\n  neverMatch = 'neverMatch',\n}\n\nexport enum FieldMatcherID {\n  // Specific Types\n  numeric = 'numeric',\n  time = 'time', // Can be multiple times\n  first = 'first',\n  firstTimeField = 'firstTimeField', // Only the first time field\n\n  // With arguments\n  byType = 'byType',\n  byTypes = 'byTypes',\n  byName = 'byName',\n  byNames = 'byNames',\n  byRegexp = 'byRegexp',\n  byRegexpOrNames = 'byRegexpOrNames',\n  byFrameRefID = 'byFrameRefID',\n  byValue = 'byValue',\n  // byIndex = 'byIndex',\n  // byLabel = 'byLabel',\n}\n\n/**\n * Field name matchers\n */\nexport enum FrameMatcherID {\n  byName = 'byName',\n  byRefId = 'byRefId',\n  byIndex = 'byIndex',\n}\n\n/**\n * @public\n */\nexport enum ValueMatcherID {\n  regex = 'regex',\n  isNull = 'isNull',\n  isNotNull = 'isNotNull',\n  greater = 'greater',\n  greaterOrEqual = 'greaterOrEqual',\n  lower = 'lower',\n  lowerOrEqual = 'lowerOrEqual',\n  equal = 'equal',\n  notEqual = 'notEqual',\n  between = 'between',\n}\n","import { Field, FieldType, DataFrame } from '../../types/dataFrame';\nimport { FieldMatcherInfo } from '../../types/transformations';\n\nimport { FieldMatcherID } from './ids';\n\n// General Field matcher\nconst fieldTypeMatcher: FieldMatcherInfo<FieldType> = {\n  id: FieldMatcherID.byType,\n  name: 'Field Type',\n  description: 'match based on the field type',\n  defaultOptions: FieldType.number,\n\n  get: (type: FieldType) => {\n    return (field: Field, frame: DataFrame, allFrames: DataFrame[]) => {\n      return type === field.type;\n    };\n  },\n\n  getOptionsDisplayText: (type: FieldType) => {\n    return `Field type: ${type}`;\n  },\n};\n\n// General Field matcher (multiple types)\nconst fieldTypesMatcher: FieldMatcherInfo<Set<FieldType>> = {\n  id: FieldMatcherID.byTypes,\n  name: 'Field Type',\n  description: 'match based on the field types',\n  defaultOptions: new Set(),\n\n  get: (types) => {\n    return (field: Field, frame: DataFrame, allFrames: DataFrame[]) => {\n      return types.has(field.type);\n    };\n  },\n\n  getOptionsDisplayText: (types) => {\n    return `Field types: ${[...types].join(' | ')}`;\n  },\n};\n\n// Numeric Field matcher\n// This gets its own entry so it shows up in the dropdown\nconst numericMatcher: FieldMatcherInfo = {\n  id: FieldMatcherID.numeric,\n  name: 'Numeric Fields',\n  description: 'Fields with type number',\n\n  get: () => {\n    return fieldTypeMatcher.get(FieldType.number);\n  },\n\n  getOptionsDisplayText: () => {\n    return 'Numeric Fields';\n  },\n};\n\n// Time Field matcher\nconst timeMatcher: FieldMatcherInfo = {\n  id: FieldMatcherID.time,\n  name: 'Time Fields',\n  description: 'Fields with type time',\n\n  get: () => {\n    return fieldTypeMatcher.get(FieldType.time);\n  },\n\n  getOptionsDisplayText: () => {\n    return 'Time Fields';\n  },\n};\n\n/**\n * Registry Initialization\n */\nexport function getFieldTypeMatchers(): FieldMatcherInfo[] {\n  return [fieldTypeMatcher, fieldTypesMatcher, numericMatcher, timeMatcher];\n}\n","// Libraries\nimport { isNumber } from 'lodash';\n\nimport { NullValueMode, Field, FieldCalcs, FieldType } from '../types/index';\nimport { Registry, RegistryItem } from '../utils/Registry';\n\nexport enum ReducerID {\n  sum = 'sum',\n  max = 'max',\n  min = 'min',\n  logmin = 'logmin',\n  mean = 'mean',\n  variance = 'variance',\n  stdDev = 'stdDev',\n  last = 'last',\n  first = 'first',\n  count = 'count',\n  range = 'range',\n  diff = 'diff',\n  diffperc = 'diffperc',\n  delta = 'delta',\n  step = 'step',\n  firstNotNull = 'firstNotNull',\n  lastNotNull = 'lastNotNull',\n  changeCount = 'changeCount',\n  distinctCount = 'distinctCount',\n  allIsZero = 'allIsZero',\n  allIsNull = 'allIsNull',\n  allValues = 'allValues',\n  uniqueValues = 'uniqueValues',\n}\n\nexport function isReducerID(id: string): id is ReducerID {\n  return Object.keys(ReducerID).includes(id);\n}\n\n// Internal function\ntype FieldReducer = (field: Field, ignoreNulls: boolean, nullAsZero: boolean) => FieldCalcs;\n\nexport interface FieldReducerInfo extends RegistryItem {\n  // Internal details\n  emptyInputResult?: unknown; // typically null, but some things like 'count' & 'sum' should be zero\n  standard: boolean; // The most common stats can all be calculated in a single pass\n  reduce?: FieldReducer;\n}\n\ninterface ReduceFieldOptions {\n  field: Field;\n  reducers: string[]; // The stats to calculate\n}\n\n/**\n * @returns an object with a key for each selected stat\n * NOTE: This will also modify the 'field.state' object,\n * leaving values in a cache until cleared.\n */\nexport function reduceField(options: ReduceFieldOptions): FieldCalcs {\n  const { field, reducers } = options;\n\n  if (!field || !reducers || reducers.length < 1) {\n    return {};\n  }\n\n  if (field.state?.calcs) {\n    // Find the values we need to calculate\n    const missing: string[] = [];\n    for (const s of reducers) {\n      if (!field.state.calcs.hasOwnProperty(s)) {\n        missing.push(s);\n      }\n    }\n    if (missing.length < 1) {\n      return {\n        ...field.state.calcs,\n      };\n    }\n  }\n  if (!field.state) {\n    field.state = {};\n  }\n\n  const queue = fieldReducers.list(reducers);\n\n  // Return early for empty series\n  // This lets the concrete implementations assume at least one row\n  const data = field.values;\n  if (data.length < 1) {\n    const calcs: FieldCalcs = { ...field.state.calcs };\n    for (const reducer of queue) {\n      calcs[reducer.id] = reducer.emptyInputResult !== null ? reducer.emptyInputResult : null;\n    }\n    return (field.state.calcs = calcs);\n  }\n\n  // Default to Ignore for nullValueMode.\n  const { nullValueMode = NullValueMode.Ignore } = field.config;\n\n  const ignoreNulls = nullValueMode === NullValueMode.Ignore;\n  const nullAsZero = nullValueMode === NullValueMode.AsZero;\n\n  // Avoid calculating all the standard stats if possible\n  if (queue.length === 1 && queue[0].reduce) {\n    const values = queue[0].reduce(field, ignoreNulls, nullAsZero);\n    field.state.calcs = {\n      ...field.state.calcs,\n      ...values,\n    };\n    return values;\n  }\n\n  // For now everything can use the standard stats\n  let values = doStandardCalcs(field, ignoreNulls, nullAsZero);\n\n  for (const reducer of queue) {\n    if (!values.hasOwnProperty(reducer.id) && reducer.reduce) {\n      values = {\n        ...values,\n        ...reducer.reduce(field, ignoreNulls, nullAsZero),\n      };\n    }\n  }\n\n  field.state.calcs = {\n    ...field.state.calcs,\n    ...values,\n  };\n  return values;\n}\n\n// ------------------------------------------------------------------------------\n//\n//  No Exported symbols below here.\n//\n// ------------------------------------------------------------------------------\n\nexport const fieldReducers = new Registry<FieldReducerInfo>(() => [\n  {\n    id: ReducerID.lastNotNull,\n    name: 'Last *',\n    description: 'Last non-null value (also excludes NaNs)',\n    standard: true,\n    aliasIds: ['current'],\n    reduce: calculateLastNotNull,\n  },\n  {\n    id: ReducerID.last,\n    name: 'Last',\n    description: 'Last value',\n    standard: true,\n    reduce: calculateLast,\n  },\n  {\n    id: ReducerID.firstNotNull,\n    name: 'First *',\n    description: 'First non-null value (also excludes NaNs)',\n    standard: true,\n    reduce: calculateFirstNotNull,\n  },\n  { id: ReducerID.first, name: 'First', description: 'First Value', standard: true, reduce: calculateFirst },\n  { id: ReducerID.min, name: 'Min', description: 'Minimum Value', standard: true },\n  { id: ReducerID.max, name: 'Max', description: 'Maximum Value', standard: true },\n  { id: ReducerID.mean, name: 'Mean', description: 'Average Value', standard: true, aliasIds: ['avg'] },\n  {\n    id: ReducerID.variance,\n    name: 'Variance',\n    description: 'Variance of all values in a field',\n    standard: false,\n    reduce: calculateStdDev,\n  },\n  {\n    id: ReducerID.stdDev,\n    name: 'StdDev',\n    description: 'Standard deviation of all values in a field',\n    standard: false,\n    reduce: calculateStdDev,\n  },\n  {\n    id: ReducerID.sum,\n    name: 'Total',\n    description: 'The sum of all values',\n    emptyInputResult: 0,\n    standard: true,\n    aliasIds: ['total'],\n  },\n  {\n    id: ReducerID.count,\n    name: 'Count',\n    description: 'Number of values in response',\n    emptyInputResult: 0,\n    standard: true,\n  },\n  {\n    id: ReducerID.range,\n    name: 'Range',\n    description: 'Difference between minimum and maximum values',\n    standard: true,\n  },\n  {\n    id: ReducerID.delta,\n    name: 'Delta',\n    description: 'Cumulative change in value',\n    standard: true,\n  },\n  {\n    id: ReducerID.step,\n    name: 'Step',\n    description: 'Minimum interval between values',\n    standard: true,\n  },\n  {\n    id: ReducerID.diff,\n    name: 'Difference',\n    description: 'Difference between first and last values',\n    standard: true,\n  },\n  {\n    id: ReducerID.logmin,\n    name: 'Min (above zero)',\n    description: 'Used for log min scale',\n    standard: true,\n  },\n  {\n    id: ReducerID.allIsZero,\n    name: 'All Zeros',\n    description: 'All values are zero',\n    emptyInputResult: false,\n    standard: true,\n  },\n  {\n    id: ReducerID.allIsNull,\n    name: 'All Nulls',\n    description: 'All values are null',\n    emptyInputResult: true,\n    standard: true,\n  },\n  {\n    id: ReducerID.changeCount,\n    name: 'Change Count',\n    description: 'Number of times the value changes',\n    standard: false,\n    reduce: calculateChangeCount,\n  },\n  {\n    id: ReducerID.distinctCount,\n    name: 'Distinct Count',\n    description: 'Number of distinct values',\n    standard: false,\n    reduce: calculateDistinctCount,\n  },\n  {\n    id: ReducerID.diffperc,\n    name: 'Difference percent',\n    description: 'Percentage difference between first and last values',\n    standard: true,\n  },\n  {\n    id: ReducerID.allValues,\n    name: 'All values',\n    description: 'Returns an array with all values',\n    standard: false,\n    reduce: (field: Field) => ({ allValues: [...field.values] }),\n  },\n  {\n    id: ReducerID.uniqueValues,\n    name: 'All unique values',\n    description: 'Returns an array with all unique values',\n    standard: false,\n    reduce: (field: Field) => ({\n      uniqueValues: [...new Set(field.values)],\n    }),\n  },\n]);\n\nexport function doStandardCalcs(field: Field, ignoreNulls: boolean, nullAsZero: boolean): FieldCalcs {\n  const calcs: FieldCalcs = {\n    sum: 0,\n    max: -Number.MAX_VALUE,\n    min: Number.MAX_VALUE,\n    logmin: Number.MAX_VALUE,\n    mean: null,\n    last: null,\n    first: null,\n    lastNotNull: null,\n    firstNotNull: null,\n    count: 0,\n    nonNullCount: 0,\n    allIsNull: true,\n    allIsZero: true,\n    range: null,\n    diff: null,\n    delta: 0,\n    step: Number.MAX_VALUE,\n    diffperc: 0,\n\n    // Just used for calculations -- not exposed as a stat\n    previousDeltaUp: true,\n  };\n\n  const data = field.values;\n\n  const isNumberField = field.type === FieldType.number || field.type === FieldType.time;\n\n  for (let i = 0; i < data.length; i++) {\n    let currentValue = data[i];\n\n    if (i === 0) {\n      calcs.first = currentValue;\n    }\n\n    calcs.last = currentValue;\n\n    if (currentValue == null) {\n      if (ignoreNulls) {\n        continue;\n      }\n      if (nullAsZero) {\n        currentValue = 0;\n      }\n    }\n\n    calcs.count++;\n\n    if (currentValue != null && !Number.isNaN(currentValue)) {\n      // null || undefined || NaN\n      const isFirst = calcs.firstNotNull === null;\n      if (isFirst) {\n        calcs.firstNotNull = currentValue;\n      }\n\n      if (isNumberField) {\n        calcs.sum += currentValue;\n        calcs.allIsNull = false;\n        calcs.nonNullCount++;\n\n        if (!isFirst) {\n          const step = currentValue - calcs.lastNotNull!;\n          if (calcs.step > step) {\n            calcs.step = step; // the minimum interval\n          }\n\n          if (calcs.lastNotNull! > currentValue) {\n            // counter reset\n            calcs.previousDeltaUp = false;\n            if (i === data.length - 1) {\n              // reset on last\n              calcs.delta += currentValue;\n            }\n          } else {\n            if (calcs.previousDeltaUp) {\n              calcs.delta += step; // normal increment\n            } else {\n              calcs.delta += currentValue; // account for counter reset\n            }\n            calcs.previousDeltaUp = true;\n          }\n        }\n\n        if (currentValue > calcs.max) {\n          calcs.max = currentValue;\n        }\n\n        if (currentValue < calcs.min) {\n          calcs.min = currentValue;\n        }\n\n        if (currentValue < calcs.logmin && currentValue > 0) {\n          calcs.logmin = currentValue;\n        }\n      }\n\n      if (currentValue !== 0) {\n        calcs.allIsZero = false;\n      }\n\n      calcs.lastNotNull = currentValue;\n    }\n  }\n\n  if (calcs.max === -Number.MAX_VALUE) {\n    calcs.max = null;\n  }\n\n  if (calcs.min === Number.MAX_VALUE) {\n    calcs.min = null;\n  }\n\n  if (calcs.step === Number.MAX_VALUE) {\n    calcs.step = null;\n  }\n\n  if (calcs.nonNullCount > 0) {\n    calcs.mean = calcs.sum! / calcs.nonNullCount;\n  }\n\n  if (calcs.allIsNull) {\n    calcs.allIsZero = false;\n  }\n\n  if (calcs.max !== null && calcs.min !== null) {\n    calcs.range = calcs.max - calcs.min;\n  }\n\n  if (isNumber(calcs.firstNotNull) && isNumber(calcs.lastNotNull)) {\n    calcs.diff = calcs.lastNotNull - calcs.firstNotNull;\n  }\n\n  if (isNumber(calcs.firstNotNull) && isNumber(calcs.diff)) {\n    calcs.diffperc = calcs.diff / calcs.firstNotNull;\n  }\n  return calcs;\n}\n\nfunction calculateFirst(field: Field, ignoreNulls: boolean, nullAsZero: boolean): FieldCalcs {\n  return { first: field.values[0] };\n}\n\nfunction calculateFirstNotNull(field: Field, ignoreNulls: boolean, nullAsZero: boolean): FieldCalcs {\n  const data = field.values;\n  for (let idx = 0; idx < data.length; idx++) {\n    const v = data[idx];\n    if (v != null && !Number.isNaN(v)) {\n      return { firstNotNull: v };\n    }\n  }\n  return { firstNotNull: null };\n}\n\nfunction calculateLast(field: Field, ignoreNulls: boolean, nullAsZero: boolean): FieldCalcs {\n  const data = field.values;\n  return { last: data[data.length - 1] };\n}\n\nfunction calculateLastNotNull(field: Field, ignoreNulls: boolean, nullAsZero: boolean): FieldCalcs {\n  const data = field.values;\n  let idx = data.length - 1;\n  while (idx >= 0) {\n    const v = data[idx--];\n    if (v != null && !Number.isNaN(v)) {\n      return { lastNotNull: v };\n    }\n  }\n  return { lastNotNull: null };\n}\n\n/** Calculates standard deviation and variance */\nfunction calculateStdDev(field: Field, ignoreNulls: boolean, nullAsZero: boolean): FieldCalcs {\n  // Only support number fields\n  if (!(field.type === FieldType.number || field.type === FieldType.time)) {\n    return { variance: 0, stdDev: 0 };\n  }\n\n  let squareSum = 0;\n  let runningMean = 0;\n  let runningNonNullCount = 0;\n  const data = field.values;\n  for (let i = 0; i < data.length; i++) {\n    const currentValue = data[i];\n    if (currentValue != null) {\n      runningNonNullCount++;\n      let _oldMean = runningMean;\n      runningMean += (currentValue - _oldMean) / runningNonNullCount;\n      squareSum += (currentValue - _oldMean) * (currentValue - runningMean);\n    }\n  }\n  if (runningNonNullCount > 0) {\n    const variance = squareSum / runningNonNullCount;\n    return { variance, stdDev: Math.sqrt(variance) };\n  }\n  return { variance: 0, stdDev: 0 };\n}\n\nfunction calculateChangeCount(field: Field, ignoreNulls: boolean, nullAsZero: boolean): FieldCalcs {\n  const data = field.values;\n  let count = 0;\n  let first = true;\n  let last = null;\n  for (let i = 0; i < data.length; i++) {\n    let currentValue = data[i];\n    if (currentValue === null) {\n      if (ignoreNulls) {\n        continue;\n      }\n      if (nullAsZero) {\n        currentValue = 0;\n      }\n    }\n    if (!first && last !== currentValue) {\n      count++;\n    }\n    first = false;\n    last = currentValue;\n  }\n\n  return { changeCount: count };\n}\n\nfunction calculateDistinctCount(field: Field, ignoreNulls: boolean, nullAsZero: boolean): FieldCalcs {\n  const data = field.values;\n  const distinct = new Set();\n  for (let i = 0; i < data.length; i++) {\n    let currentValue = data[i];\n    if (currentValue === null) {\n      if (ignoreNulls) {\n        continue;\n      }\n      if (nullAsZero) {\n        currentValue = 0;\n      }\n    }\n    distinct.add(currentValue);\n  }\n  return { distinctCount: distinct.size };\n}\n","import { ComparisonOperation } from '@grafana/schema';\n\n/**\n * Compare two values\n *\n * @internal -- not yet exported in `@grafana/data`\n */\nexport function compareValues(\n  left: string | number | boolean | null | undefined,\n  op: ComparisonOperation,\n  right: string | number | boolean | null | undefined\n) {\n  // Normalize null|undefined values\n  if (left == null || right == null) {\n    if (left == null) {\n      left = 'null';\n    }\n    if (right == null) {\n      right = 'null';\n    }\n    if (op === ComparisonOperation.GTE || op === ComparisonOperation.LTE) {\n      op = ComparisonOperation.EQ; // check for equality\n    }\n  }\n\n  switch (op) {\n    case ComparisonOperation.EQ:\n      return `${left}` === `${right}`;\n    case ComparisonOperation.NEQ:\n      return `${left}` !== `${right}`;\n    case ComparisonOperation.GT:\n      return left > right;\n    case ComparisonOperation.GTE:\n      return left >= right;\n    case ComparisonOperation.LT:\n      return left < right;\n    case ComparisonOperation.LTE:\n      return left <= right;\n    default:\n      return false;\n  }\n}\n","import { ComparisonOperation } from '@grafana/schema';\n\nimport { Field, DataFrame } from '../../types/dataFrame';\nimport { FieldMatcherInfo } from '../../types/transformations';\nimport { reduceField, ReducerID } from '../fieldReducer';\n\nimport { compareValues } from './compareValues';\nimport { FieldMatcherID } from './ids';\n\nexport interface FieldValueMatcherConfig {\n  reducer: ReducerID;\n  op?: ComparisonOperation;\n  value?: number; // or string?\n}\n\n// This should move to a utility function on the reducer registry\nfunction isBooleanReducer(r: ReducerID) {\n  return r === ReducerID.allIsNull || r === ReducerID.allIsZero;\n}\n\nexport const fieldValueMatcherInfo: FieldMatcherInfo<FieldValueMatcherConfig> = {\n  id: FieldMatcherID.byValue,\n  name: 'By value (reducer)',\n  description: 'Reduce a field to a single value and test for inclusion',\n\n  // This is added to overrides by default\n  defaultOptions: {\n    reducer: ReducerID.allIsZero,\n    op: ComparisonOperation.GTE,\n    value: 0,\n  },\n\n  get: (props) => {\n    if (!props || !props.reducer) {\n      return () => false;\n    }\n    let { reducer, op, value } = props;\n    const isBoolean = isBooleanReducer(reducer);\n    if (!op) {\n      op = ComparisonOperation.EQ;\n    }\n    return (field: Field, frame: DataFrame, allFrames: DataFrame[]) => {\n      const left = reduceField({\n        field,\n        reducers: [reducer],\n      })[reducer];\n\n      if (isBoolean) {\n        return Boolean(left); // boolean\n      }\n      return compareValues(left, op!, value);\n    };\n  },\n\n  getOptionsDisplayText: (props) => {\n    return `By value (${props.reducer})`;\n  },\n};\n","import { DataFrame, Field, TIME_SERIES_VALUE_FIELD_NAME, FieldType, TIME_SERIES_TIME_FIELD_NAME } from '../types';\nimport { formatLabels } from '../utils/labels';\n\n/**\n * Get an appropriate display title\n */\nexport function getFrameDisplayName(frame: DataFrame, index?: number) {\n  if (frame.name) {\n    return frame.name;\n  }\n\n  const valueFieldNames: string[] = [];\n  for (const field of frame.fields) {\n    if (field.type === FieldType.time) {\n      continue;\n    }\n\n    // No point in doing more\n    if (valueFieldNames.length > 1) {\n      break;\n    }\n\n    valueFieldNames.push(getFieldDisplayName(field, frame));\n  }\n\n  // If the frame has a single value field then use the name of that field as the frame name\n  if (valueFieldNames.length === 1) {\n    return valueFieldNames[0];\n  }\n\n  // list all the\n  if (index === undefined && frame.fields.length > 0) {\n    return frame.fields\n      .filter((f) => f.type !== FieldType.time)\n      .map((f) => getFieldDisplayName(f, frame))\n      .join(', ');\n  }\n\n  if (frame.refId) {\n    return `Series (${frame.refId})`;\n  }\n\n  return `Series (${index})`;\n}\n\nexport function cacheFieldDisplayNames(frames: DataFrame[]) {\n  frames.forEach((frame) => {\n    frame.fields.forEach((field) => {\n      getFieldDisplayName(field, frame, frames);\n    });\n  });\n}\n\nexport function getFieldDisplayName(field: Field, frame?: DataFrame, allFrames?: DataFrame[]): string {\n  const existingTitle = field.state?.displayName;\n  const multipleFrames = Boolean(allFrames && allFrames.length > 1);\n\n  if (existingTitle && multipleFrames === field.state?.multipleFrames) {\n    return existingTitle;\n  }\n\n  const displayName = calculateFieldDisplayName(field, frame, allFrames);\n  field.state = field.state || {};\n  field.state.displayName = displayName;\n  field.state.multipleFrames = multipleFrames;\n\n  return displayName;\n}\n\n/**\n * Get an appropriate display name. If the 'displayName' field config is set, use that.\n */\nexport function calculateFieldDisplayName(field: Field, frame?: DataFrame, allFrames?: DataFrame[]): string {\n  const hasConfigTitle = field.config?.displayName && field.config?.displayName.length;\n  const isComparisonSeries = Boolean(frame?.meta?.timeCompare?.isTimeShiftQuery);\n  let displayName = hasConfigTitle ? field.config!.displayName! : field.name;\n\n  if (hasConfigTitle) {\n    return isComparisonSeries ? `${displayName} (comparison)` : displayName;\n  }\n\n  if (frame && field.config?.displayNameFromDS) {\n    return isComparisonSeries ? `${field.config.displayNameFromDS} (comparison)` : field.config.displayNameFromDS;\n  }\n\n  // This is an ugly exception for time field\n  // For time series we should normally treat time field with same name\n  // But in case it has a join source we should handle it as normal field\n  if (field.type === FieldType.time && !field.labels) {\n    return displayName ?? TIME_SERIES_TIME_FIELD_NAME;\n  }\n\n  let parts: string[] = [];\n  let frameNamesDiffer = false;\n\n  if (allFrames && allFrames.length > 1) {\n    for (let i = 1; i < allFrames.length; i++) {\n      const frame = allFrames[i];\n      if (frame.name !== allFrames[i - 1].name) {\n        frameNamesDiffer = true;\n        break;\n      }\n    }\n  }\n\n  let frameNameAdded = false;\n  let labelsAdded = false;\n\n  if (frameNamesDiffer && frame?.name) {\n    parts.push(frame.name);\n    frameNameAdded = true;\n  }\n\n  if (field.name && field.name !== TIME_SERIES_VALUE_FIELD_NAME) {\n    parts.push(field.name);\n  }\n\n  if (field.labels && frame) {\n    let singleLabelName = getSingleLabelName(allFrames ?? [frame]);\n\n    if (!singleLabelName) {\n      let allLabels = formatLabels(field.labels);\n      if (allLabels) {\n        parts.push(allLabels);\n        labelsAdded = true;\n      }\n    } else if (field.labels[singleLabelName]) {\n      parts.push(field.labels[singleLabelName]);\n      labelsAdded = true;\n    }\n  }\n\n  // if we have not added frame name and no labels, and field name = Value, we should add frame name\n  if (frame && !frameNameAdded && !labelsAdded && field.name === TIME_SERIES_VALUE_FIELD_NAME) {\n    if (frame.name && frame.name.length > 0) {\n      parts.push(frame.name);\n      frameNameAdded = true;\n    }\n  }\n\n  if (parts.length) {\n    displayName = parts.join(' ');\n  } else if (field.name) {\n    displayName = field.name;\n  } else {\n    displayName = TIME_SERIES_VALUE_FIELD_NAME;\n  }\n\n  // Ensure unique field name\n  if (displayName === field.name) {\n    displayName = getUniqueFieldName(field, frame);\n  }\n\n  if (isComparisonSeries) {\n    displayName = `${displayName} (comparison)`;\n  }\n  return displayName;\n}\n\nexport function getUniqueFieldName(field: Field, frame?: DataFrame) {\n  let dupeCount = 0;\n  let foundSelf = false;\n\n  if (frame) {\n    for (let i = 0; i < frame.fields.length; i++) {\n      const otherField = frame.fields[i];\n\n      if (field === otherField) {\n        foundSelf = true;\n\n        if (dupeCount > 0) {\n          dupeCount++;\n          break;\n        }\n      } else if (field.name === otherField.name) {\n        dupeCount++;\n\n        if (foundSelf) {\n          break;\n        }\n      }\n    }\n  }\n\n  if (dupeCount) {\n    return `${field.name} ${dupeCount}`;\n  }\n\n  return field.name;\n}\n\n/**\n * Checks all data frames and return name of label if there is only one label name in all frames\n */\nfunction getSingleLabelName(frames: DataFrame[]): string | null {\n  let singleName: string | null = null;\n\n  for (let i = 0; i < frames.length; i++) {\n    const frame = frames[i];\n\n    for (const field of frame.fields) {\n      if (!field.labels) {\n        continue;\n      }\n\n      // yes this should be in!\n      for (const labelKey in field.labels) {\n        if (singleName === null) {\n          singleName = labelKey;\n        } else if (labelKey !== singleName) {\n          return null;\n        }\n      }\n    }\n  }\n\n  return singleName;\n}\n","import { camelCase } from 'lodash';\n\nconst specialChars = ['(', '[', '{', '}', ']', ')', '\\\\', '|', '*', '+', '-', '.', '?', '<', '>', '#', '&', '^', '$'];\nconst specialMatcher = '([\\\\' + specialChars.join('\\\\') + '])';\nconst specialCharEscape = new RegExp(specialMatcher, 'g');\nconst specialCharUnescape = new RegExp('(\\\\\\\\)' + specialMatcher, 'g');\n\nexport function escapeStringForRegex(value: string) {\n  if (!value) {\n    return value;\n  }\n\n  return value.replace(specialCharEscape, '\\\\$1');\n}\n\nexport function unEscapeStringFromRegex(value: string) {\n  if (!value) {\n    return value;\n  }\n\n  return value.replace(specialCharUnescape, '$2');\n}\n\nexport function stringStartsAsRegEx(str: string): boolean {\n  if (!str) {\n    return false;\n  }\n\n  return str[0] === '/';\n}\n\nexport function stringToJsRegex(str: string): RegExp {\n  if (!stringStartsAsRegEx(str)) {\n    return new RegExp(`^${str}$`);\n  }\n\n  const match = str.match(new RegExp('^/(.*?)/(g?i?m?y?s?)$'));\n\n  if (!match) {\n    throw new Error(`'${str}' is not a valid regular expression.`);\n  }\n\n  return new RegExp(match[1], match[2]);\n}\n\nexport function stringToMs(str: string): number {\n  if (!str) {\n    return 0;\n  }\n\n  const nr = parseInt(str, 10);\n  const unit = str.slice(String(nr).length);\n  const s = 1000;\n  const m = s * 60;\n  const h = m * 60;\n  const d = h * 24;\n\n  switch (unit) {\n    case 's':\n      return nr * s;\n    case 'm':\n      return nr * m;\n    case 'h':\n      return nr * h;\n    case 'd':\n      return nr * d;\n    default:\n      if (!unit) {\n        return isNaN(nr) ? 0 : nr;\n      }\n      throw new Error('Not supported unit: ' + unit);\n  }\n}\n\nexport function toNumberString(value: number | undefined | null): string {\n  if (value !== null && value !== undefined && Number.isFinite(value)) {\n    return value.toString();\n  }\n  return '';\n}\n\nexport function toIntegerOrUndefined(value: string): number | undefined {\n  if (!value) {\n    return undefined;\n  }\n  const v = parseInt(value, 10);\n  return isNaN(v) ? undefined : v;\n}\n\nexport function toFloatOrUndefined(value: string): number | undefined {\n  if (!value) {\n    return undefined;\n  }\n  const v = parseFloat(value);\n  return isNaN(v) ? undefined : v;\n}\n\nexport function toPascalCase(string: string) {\n  const str = camelCase(string);\n  return str.charAt(0).toUpperCase() + str.substring(1);\n}\n\nexport function escapeRegex(value: string): string {\n  return value.replace(/[\\\\^$*+?.()|[\\]{}\\/]/g, '\\\\$&');\n}\n","import { getFieldDisplayName } from '../../field/fieldState';\nimport { stringToJsRegex } from '../../text/string';\nimport { DataFrame, Field, FieldType, TIME_SERIES_VALUE_FIELD_NAME } from '../../types/dataFrame';\nimport { FieldMatcher, FieldMatcherInfo, FrameMatcherInfo } from '../../types/transformations';\n\nimport { FieldMatcherID, FrameMatcherID } from './ids';\n\nexport interface RegexpOrNamesMatcherOptions {\n  pattern?: string;\n  names?: string[];\n  variable?: string;\n}\n\n/**\n * Mode to be able to toggle if the names matcher should match fields in provided\n * list or all except provided names.\n * @public\n */\nexport enum ByNamesMatcherMode {\n  exclude = 'exclude',\n  include = 'include',\n}\n\n/**\n * Options to instruct the by names matcher to either match all fields in given list\n * or all except the fields in the list.\n * @public\n */\nexport interface ByNamesMatcherOptions {\n  mode?: ByNamesMatcherMode;\n  names?: string[];\n  readOnly?: boolean;\n  prefix?: string;\n}\n\n// General Field matcher\nconst fieldNameMatcher: FieldMatcherInfo<string> = {\n  id: FieldMatcherID.byName,\n  name: 'Field Name',\n  description: 'match the field name',\n  defaultOptions: '',\n\n  get: (name: string): FieldMatcher => {\n    const uniqueNames = new Set<string>([name] ?? []);\n\n    const fallback = fieldNameFallback(uniqueNames);\n\n    return (field: Field, frame: DataFrame, allFrames: DataFrame[]) => {\n      return (\n        name === field.name ||\n        name === getFieldDisplayName(field, frame, allFrames) ||\n        Boolean(fallback && fallback(field, frame, allFrames))\n      );\n    };\n  },\n\n  getOptionsDisplayText: (name: string) => {\n    return `Field name: ${name}`;\n  },\n};\n\nconst multipleFieldNamesMatcher: FieldMatcherInfo<ByNamesMatcherOptions> = {\n  id: FieldMatcherID.byNames,\n  name: 'Field Names',\n  description: 'match any of the given the field names',\n  defaultOptions: {\n    mode: ByNamesMatcherMode.include,\n    names: [],\n  },\n\n  get: (options: ByNamesMatcherOptions): FieldMatcher => {\n    const { names, mode = ByNamesMatcherMode.include } = options;\n    const uniqueNames = new Set<string>(names ?? []);\n\n    const fallback = fieldNameFallback(uniqueNames);\n\n    const matcher = (field: Field, frame: DataFrame, frames: DataFrame[]) => {\n      return (\n        uniqueNames.has(field.name) ||\n        uniqueNames.has(getFieldDisplayName(field, frame, frames)) ||\n        Boolean(fallback && fallback(field, frame, frames))\n      );\n    };\n\n    if (mode === ByNamesMatcherMode.exclude) {\n      return (field: Field, frame: DataFrame, frames: DataFrame[]) => {\n        return !matcher(field, frame, frames);\n      };\n    }\n    return matcher;\n  },\n\n  getOptionsDisplayText: (options: ByNamesMatcherOptions): string => {\n    const { names, mode } = options;\n    const displayText = (names ?? []).join(', ');\n    if (mode === ByNamesMatcherMode.exclude) {\n      return `All except: ${displayText}`;\n    }\n    return `All of: ${displayText}`;\n  },\n};\n\n// In an effort to support migrating to a consistent data contract, the\n// naming conventions need to get normalized. However, many existing setups\n// exist that would no longer match names if that changes.  This injects\n// fallback logic when the data frame has not type version specified\nexport function fieldNameFallback(fields: Set<string>) {\n  let fallback: FieldMatcher | undefined = undefined;\n\n  // grafana-data does not have access to runtime so we are accessing the window object\n  // to get access to the feature toggle\n  // eslint-disable-next-line\n  const useMatcherFallback = (window as any)?.grafanaBootData?.settings?.featureToggles?.dataplaneFrontendFallback;\n  if (useMatcherFallback) {\n    if (fields.has(TIME_SERIES_VALUE_FIELD_NAME)) {\n      fallback = (field: Field, frame: DataFrame) => {\n        return (\n          Boolean(field.labels) && // Value was reasonable when the name was set in labels or on the frame\n          field.labels?.__name__ === field.name\n        );\n      };\n    } else if (fields.has('Time') || fields.has('time')) {\n      fallback = (field: Field, frame: DataFrame) => {\n        return frame.meta?.typeVersion == null && field.type === FieldType.time;\n      };\n    }\n  }\n\n  return fallback;\n}\n\nconst regexpFieldNameMatcher: FieldMatcherInfo<string> = {\n  id: FieldMatcherID.byRegexp,\n  name: 'Field Name by Regexp',\n  description: 'match the field name by a given regexp pattern',\n  defaultOptions: '/.*/',\n\n  get: (pattern: string): FieldMatcher => {\n    const regexp = patternToRegex(pattern);\n\n    return (field: Field, frame: DataFrame, allFrames: DataFrame[]) => {\n      const displayName = getFieldDisplayName(field, frame, allFrames);\n      return !!regexp && regexp.test(displayName);\n    };\n  },\n\n  getOptionsDisplayText: (pattern: string): string => {\n    return `Field name by pattern: ${pattern}`;\n  },\n};\n\n/**\n * Field matcher that will match all fields that exists in a\n * data frame with configured refId.\n * @public\n */\nconst fieldsInFrameMatcher: FieldMatcherInfo<string> = {\n  id: FieldMatcherID.byFrameRefID,\n  name: 'Fields by frame refId',\n  description: 'match all fields returned in data frame with refId.',\n  defaultOptions: '',\n\n  get: (refId: string): FieldMatcher => {\n    return (field: Field, frame: DataFrame, allFrames: DataFrame[]) => {\n      return frame.refId === refId;\n    };\n  },\n\n  getOptionsDisplayText: (refId: string): string => {\n    return `Math all fields returned by query with reference ID: ${refId}`;\n  },\n};\n\nconst regexpOrMultipleNamesMatcher: FieldMatcherInfo<RegexpOrNamesMatcherOptions> = {\n  id: FieldMatcherID.byRegexpOrNames,\n  name: 'Field Name by Regexp or Names',\n  description: 'match the field name by a given regexp pattern or given names',\n  defaultOptions: {\n    pattern: '/.*/',\n    names: [],\n  },\n\n  get: (options: RegexpOrNamesMatcherOptions): FieldMatcher => {\n    const regexpMatcher = regexpFieldNameMatcher.get(options?.pattern || '');\n    const namesMatcher = multipleFieldNamesMatcher.get({\n      mode: ByNamesMatcherMode.include,\n      names: options?.names ?? [],\n    });\n\n    return (field: Field, frame: DataFrame, allFrames: DataFrame[]) => {\n      return namesMatcher(field, frame, allFrames) || regexpMatcher(field, frame, allFrames);\n    };\n  },\n\n  getOptionsDisplayText: (options: RegexpOrNamesMatcherOptions): string => {\n    const pattern = options?.pattern ?? '';\n    const names = options?.names?.join(',') ?? '';\n    return `Field name by pattern: ${pattern} or names: ${names}`;\n  },\n};\n\nconst patternToRegex = (pattern?: string): RegExp | undefined => {\n  if (!pattern) {\n    return undefined;\n  }\n\n  try {\n    return stringToJsRegex(pattern);\n  } catch (error) {\n    console.error(error);\n    return undefined;\n  }\n};\n\n// General Frame matcher\nconst frameNameMatcher: FrameMatcherInfo<string> = {\n  id: FrameMatcherID.byName,\n  name: 'Frame Name',\n  description: 'match the frame name',\n  defaultOptions: '/.*/',\n\n  get: (pattern: string) => {\n    const regex = stringToJsRegex(pattern);\n    return (frame: DataFrame) => {\n      return regex.test(frame.name || '');\n    };\n  },\n\n  getOptionsDisplayText: (pattern: string) => {\n    return `Frame name: ${pattern}`;\n  },\n};\n\n/**\n * Registry Initialization\n */\nexport function getFieldNameMatchers(): FieldMatcherInfo[] {\n  return [\n    fieldNameMatcher,\n    regexpFieldNameMatcher,\n    multipleFieldNamesMatcher,\n    regexpOrMultipleNamesMatcher,\n    fieldsInFrameMatcher,\n  ];\n}\n\nexport function getFrameNameMatchers(): FrameMatcherInfo[] {\n  return [frameNameMatcher];\n}\n","import { Field, DataFrame, FieldType } from '../../types/dataFrame';\nimport { FieldMatcherInfo, MatcherConfig, FrameMatcherInfo } from '../../types/transformations';\nimport { getFieldMatcher, fieldMatchers, getFrameMatchers, frameMatchers } from '../matchers';\n\nimport { MatcherID } from './ids';\n\nconst anyFieldMatcher: FieldMatcherInfo<MatcherConfig[]> = {\n  id: MatcherID.anyMatch,\n  name: 'Any',\n  description: 'Any child matches (OR)',\n  excludeFromPicker: true,\n  defaultOptions: [], // empty array\n\n  get: (options: MatcherConfig[]) => {\n    const children = options.map((option) => {\n      return getFieldMatcher(option);\n    });\n    return (field: Field, frame: DataFrame, allFrames: DataFrame[]) => {\n      for (const child of children) {\n        if (child(field, frame, allFrames)) {\n          return true;\n        }\n      }\n      return false;\n    };\n  },\n\n  getOptionsDisplayText: (options: MatcherConfig[]) => {\n    let text = '';\n    for (const sub of options) {\n      if (text.length > 0) {\n        text += ' OR ';\n      }\n      const matcher = fieldMatchers.get(sub.id);\n      text += matcher.getOptionsDisplayText ? matcher.getOptionsDisplayText(sub) : matcher.name;\n    }\n    return text;\n  },\n};\n\nconst anyFrameMatcher: FrameMatcherInfo<MatcherConfig[]> = {\n  id: MatcherID.anyMatch,\n  name: 'Any',\n  description: 'Any child matches (OR)',\n  excludeFromPicker: true,\n  defaultOptions: [], // empty array\n\n  get: (options: MatcherConfig[]) => {\n    const children = options.map((option) => {\n      return getFrameMatchers(option);\n    });\n    return (frame: DataFrame) => {\n      for (const child of children) {\n        if (child(frame)) {\n          return true;\n        }\n      }\n      return false;\n    };\n  },\n\n  getOptionsDisplayText: (options: MatcherConfig[]) => {\n    let text = '';\n    for (const sub of options) {\n      if (text.length > 0) {\n        text += ' OR ';\n      }\n      const matcher = frameMatchers.get(sub.id);\n      text += matcher.getOptionsDisplayText ? matcher.getOptionsDisplayText(sub) : matcher.name;\n    }\n    return text;\n  },\n};\n\nconst allFieldsMatcher: FieldMatcherInfo<MatcherConfig[]> = {\n  id: MatcherID.allMatch,\n  name: 'All',\n  description: 'Everything matches (AND)',\n  excludeFromPicker: true,\n  defaultOptions: [], // empty array\n\n  get: (options: MatcherConfig[]) => {\n    const children = options.map((option) => {\n      return getFieldMatcher(option);\n    });\n    return (field: Field, frame: DataFrame, allFrames: DataFrame[]) => {\n      for (const child of children) {\n        if (!child(field, frame, allFrames)) {\n          return false;\n        }\n      }\n      return true;\n    };\n  },\n\n  getOptionsDisplayText: (options: MatcherConfig[]) => {\n    let text = '';\n    for (const sub of options) {\n      if (text.length > 0) {\n        text += ' AND ';\n      }\n      const matcher = fieldMatchers.get(sub.id); // Ugho what about frame\n      text += matcher.getOptionsDisplayText ? matcher.getOptionsDisplayText(sub) : matcher.name;\n    }\n    return text;\n  },\n};\n\nconst allFramesMatcher: FrameMatcherInfo<MatcherConfig[]> = {\n  id: MatcherID.allMatch,\n  name: 'All',\n  description: 'Everything matches (AND)',\n  excludeFromPicker: true,\n  defaultOptions: [], // empty array\n\n  get: (options: MatcherConfig[]) => {\n    const children = options.map((option) => {\n      return getFrameMatchers(option);\n    });\n    return (frame: DataFrame) => {\n      for (const child of children) {\n        if (!child(frame)) {\n          return false;\n        }\n      }\n      return true;\n    };\n  },\n\n  getOptionsDisplayText: (options: MatcherConfig[]) => {\n    let text = '';\n    for (const sub of options) {\n      if (text.length > 0) {\n        text += ' AND ';\n      }\n      const matcher = frameMatchers.get(sub.id);\n      text += matcher.getOptionsDisplayText ? matcher.getOptionsDisplayText(sub) : matcher.name;\n    }\n    return text;\n  },\n};\n\nconst notFieldMatcher: FieldMatcherInfo<MatcherConfig> = {\n  id: MatcherID.invertMatch,\n  name: 'NOT',\n  description: 'Inverts other matchers',\n  excludeFromPicker: true,\n\n  get: (option: MatcherConfig) => {\n    const check = getFieldMatcher(option);\n    return (field: Field, frame: DataFrame, allFrames: DataFrame[]) => {\n      return !check(field, frame, allFrames);\n    };\n  },\n\n  getOptionsDisplayText: (options: MatcherConfig) => {\n    const matcher = fieldMatchers.get(options.id);\n    const text = matcher.getOptionsDisplayText ? matcher.getOptionsDisplayText(options.options) : matcher.name;\n    return 'NOT ' + text;\n  },\n};\n\nconst notFrameMatcher: FrameMatcherInfo<MatcherConfig> = {\n  id: MatcherID.invertMatch,\n  name: 'NOT',\n  description: 'Inverts other matchers',\n  excludeFromPicker: true,\n\n  get: (option: MatcherConfig) => {\n    const check = getFrameMatchers(option);\n    return (frame: DataFrame) => {\n      return !check(frame);\n    };\n  },\n\n  getOptionsDisplayText: (options: MatcherConfig) => {\n    const matcher = frameMatchers.get(options.id);\n    const text = matcher.getOptionsDisplayText ? matcher.getOptionsDisplayText(options.options) : matcher.name;\n    return 'NOT ' + text;\n  },\n};\n\nexport const alwaysFieldMatcher = (field: Field) => {\n  return true;\n};\n\nexport const alwaysFrameMatcher = (frame: DataFrame) => {\n  return true;\n};\n\nexport const neverFieldMatcher = (field: Field) => {\n  return false;\n};\n\nexport const notTimeFieldMatcher = (field: Field) => {\n  return field.type !== FieldType.time;\n};\n\nexport const neverFrameMatcher = (frame: DataFrame) => {\n  return false;\n};\n\nconst alwaysFieldMatcherInfo: FieldMatcherInfo = {\n  id: MatcherID.alwaysMatch,\n  name: 'All Fields',\n  description: 'Always Match',\n\n  get: (_option) => {\n    return alwaysFieldMatcher;\n  },\n\n  getOptionsDisplayText: (_options) => {\n    return 'Always';\n  },\n};\n\nconst alwaysFrameMatcherInfo: FrameMatcherInfo = {\n  id: MatcherID.alwaysMatch,\n  name: 'All Frames',\n  description: 'Always Match',\n\n  get: (_option) => {\n    return alwaysFrameMatcher;\n  },\n\n  getOptionsDisplayText: (_options) => {\n    return 'Always';\n  },\n};\n\nconst neverFieldMatcherInfo: FieldMatcherInfo = {\n  id: MatcherID.neverMatch,\n  name: 'No Fields',\n  description: 'Never Match',\n  excludeFromPicker: true,\n\n  get: (_option) => {\n    return neverFieldMatcher;\n  },\n\n  getOptionsDisplayText: (_options) => {\n    return 'Never';\n  },\n};\n\nconst neverFrameMatcherInfo: FrameMatcherInfo = {\n  id: MatcherID.neverMatch,\n  name: 'No Frames',\n  description: 'Never Match',\n\n  get: (_option) => {\n    return neverFrameMatcher;\n  },\n\n  getOptionsDisplayText: (_options) => {\n    return 'Never';\n  },\n};\n\nexport function getFieldPredicateMatchers(): FieldMatcherInfo[] {\n  return [anyFieldMatcher, allFieldsMatcher, notFieldMatcher, alwaysFieldMatcherInfo, neverFieldMatcherInfo];\n}\n\nexport function getFramePredicateMatchers(): FrameMatcherInfo[] {\n  return [anyFrameMatcher, allFramesMatcher, notFrameMatcher, alwaysFrameMatcherInfo, neverFrameMatcherInfo];\n}\n","import { stringToJsRegex } from '../../text';\nimport { DataFrame } from '../../types/dataFrame';\nimport { FrameMatcherInfo } from '../../types/transformations';\n\nimport { FrameMatcherID } from './ids';\n\n// General Field matcher\nconst refIdMatcher: FrameMatcherInfo<string> = {\n  id: FrameMatcherID.byRefId,\n  name: 'Query refId',\n  description: 'match the refId',\n  defaultOptions: 'A',\n\n  get: (pattern: string) => {\n    const regex = stringToJsRegex(pattern);\n    return (frame: DataFrame) => {\n      return regex.test(frame.refId || '');\n    };\n  },\n\n  getOptionsDisplayText: (pattern: string) => {\n    return `RefID: ${pattern}`;\n  },\n};\n\nexport function getRefIdMatchers(): FrameMatcherInfo[] {\n  return [refIdMatcher];\n}\n","import { Field, FieldType, DataFrame } from '../../types/dataFrame';\nimport { FieldMatcherInfo } from '../../types/transformations';\n\nimport { FieldMatcherID } from './ids';\n\nconst firstFieldMatcher: FieldMatcherInfo = {\n  id: FieldMatcherID.first,\n  name: 'First Field',\n  description: 'The first field in the frame',\n\n  get: (type: FieldType) => {\n    return (field: Field, frame: DataFrame, allFrames: DataFrame[]) => {\n      return field === frame.fields[0];\n    };\n  },\n\n  getOptionsDisplayText: () => {\n    return `First field`;\n  },\n};\n\nconst firstTimeFieldMatcher: FieldMatcherInfo = {\n  id: FieldMatcherID.firstTimeField,\n  name: 'First time field',\n  description: 'The first field of type time in a frame',\n\n  get: (type: FieldType) => {\n    return (field: Field, frame: DataFrame, allFrames: DataFrame[]) => {\n      return field.type === FieldType.time && field === frame.fields.find((f) => f.type === FieldType.time);\n    };\n  },\n\n  getOptionsDisplayText: () => {\n    return `First time field`;\n  },\n};\n\n/**\n * Registry Initialization\n */\nexport function getSimpleFieldMatchers(): FieldMatcherInfo[] {\n  return [firstFieldMatcher, firstTimeFieldMatcher];\n}\n","import { Field } from '../../../types/dataFrame';\nimport { ValueMatcherInfo } from '../../../types/transformations';\nimport { ValueMatcherID } from '../ids';\n\nimport { BasicValueMatcherOptions } from './types';\n\nconst isEqualValueMatcher: ValueMatcherInfo<BasicValueMatcherOptions> = {\n  id: ValueMatcherID.equal,\n  name: 'Is equal',\n  description: 'Match where value for given field is equal to options value.',\n  get: (options) => {\n    return (valueIndex: number, field: Field) => {\n      const value = field.values[valueIndex];\n      // eslint-disable-next-line eqeqeq\n      return value == options.value;\n    };\n  },\n  getOptionsDisplayText: () => {\n    return `Matches all rows where field is null.`;\n  },\n  isApplicable: () => true,\n  getDefaultOptions: () => ({ value: '' }),\n};\n\nconst isNotEqualValueMatcher: ValueMatcherInfo<BasicValueMatcherOptions> = {\n  id: ValueMatcherID.notEqual,\n  name: 'Is not equal',\n  description: 'Match where value for given field is not equal to options value.',\n  get: (options) => {\n    return (valueIndex: number, field: Field) => {\n      const value = field.values[valueIndex];\n      // eslint-disable-next-line eqeqeq\n      return value != options.value;\n    };\n  },\n  getOptionsDisplayText: () => {\n    return `Matches all rows where field is not null.`;\n  },\n  isApplicable: () => true,\n  getDefaultOptions: () => ({ value: '' }),\n};\n\nexport const getEqualValueMatchers = (): ValueMatcherInfo[] => [isEqualValueMatcher, isNotEqualValueMatcher];\n","import { Field } from '../../../types/dataFrame';\nimport { ValueMatcherInfo } from '../../../types/transformations';\nimport { ValueMatcherID } from '../ids';\n\nimport { ValueMatcherOptions } from './types';\n\nconst isNullValueMatcher: ValueMatcherInfo<ValueMatcherOptions> = {\n  id: ValueMatcherID.isNull,\n  name: 'Is null',\n  description: 'Match where value for given field is null.',\n  get: () => {\n    return (valueIndex: number, field: Field) => {\n      const value = field.values[valueIndex];\n      return value == null;\n    };\n  },\n  getOptionsDisplayText: () => {\n    return `Matches all rows where field is null.`;\n  },\n  isApplicable: () => true,\n  getDefaultOptions: () => ({}),\n};\n\nconst isNotNullValueMatcher: ValueMatcherInfo<ValueMatcherOptions> = {\n  id: ValueMatcherID.isNotNull,\n  name: 'Is not null',\n  description: 'Match where value for given field is not null.',\n  get: () => {\n    return (valueIndex: number, field: Field) => {\n      const value = field.values[valueIndex];\n      return value != null;\n    };\n  },\n  getOptionsDisplayText: () => {\n    return `Matches all rows where field is not null.`;\n  },\n  isApplicable: () => true,\n  getDefaultOptions: () => ({}),\n};\n\nexport const getNullValueMatchers = (): ValueMatcherInfo[] => [isNullValueMatcher, isNotNullValueMatcher];\n","import { Field, FieldType } from '../../../types/dataFrame';\nimport { ValueMatcherInfo } from '../../../types/transformations';\nimport { ValueMatcherID } from '../ids';\n\nimport { BasicValueMatcherOptions } from './types';\n\nconst isGreaterValueMatcher: ValueMatcherInfo<BasicValueMatcherOptions> = {\n  id: ValueMatcherID.greater,\n  name: 'Is greater',\n  description: 'Match when field value is greater than option.',\n  get: (options) => {\n    return (valueIndex: number, field: Field) => {\n      const value = field.values[valueIndex];\n      if (isNaN(value)) {\n        return false;\n      }\n      return value > options.value;\n    };\n  },\n  getOptionsDisplayText: (options) => {\n    return `Matches all rows where field value is greater than: ${options.value}.`;\n  },\n  isApplicable: (field) => field.type === FieldType.number,\n  getDefaultOptions: () => ({ value: 0 }),\n};\n\nconst isGreaterOrEqualValueMatcher: ValueMatcherInfo<BasicValueMatcherOptions> = {\n  id: ValueMatcherID.greaterOrEqual,\n  name: 'Is greater or equal',\n  description: 'Match when field value is greater than or equal to option.',\n  get: (options) => {\n    return (valueIndex: number, field: Field) => {\n      const value = field.values[valueIndex];\n      if (isNaN(value)) {\n        return false;\n      }\n      return value >= options.value;\n    };\n  },\n  getOptionsDisplayText: (options) => {\n    return `Matches all rows where field value is greater than or equal to: ${options.value}.`;\n  },\n  isApplicable: (field) => field.type === FieldType.number,\n  getDefaultOptions: () => ({ value: 0 }),\n};\n\nconst isLowerValueMatcher: ValueMatcherInfo<BasicValueMatcherOptions> = {\n  id: ValueMatcherID.lower,\n  name: 'Is lower',\n  description: 'Match when field value is lower than option.',\n  get: (options) => {\n    return (valueIndex: number, field: Field) => {\n      const value = field.values[valueIndex];\n      if (isNaN(value)) {\n        return false;\n      }\n      return value < options.value;\n    };\n  },\n  getOptionsDisplayText: (options) => {\n    return `Matches all rows where field value is lower than: ${options.value}.`;\n  },\n  isApplicable: (field) => field.type === FieldType.number,\n  getDefaultOptions: () => ({ value: 0 }),\n};\n\nconst isLowerOrEqualValueMatcher: ValueMatcherInfo<BasicValueMatcherOptions> = {\n  id: ValueMatcherID.lowerOrEqual,\n  name: 'Is lower or equal',\n  description: 'Match when field value is lower or equal than option.',\n  get: (options) => {\n    return (valueIndex: number, field: Field) => {\n      const value = field.values[valueIndex];\n      if (isNaN(value)) {\n        return false;\n      }\n      return value <= options.value;\n    };\n  },\n  getOptionsDisplayText: (options) => {\n    return `Matches all rows where field value is lower or equal than: ${options.value}.`;\n  },\n  isApplicable: (field) => field.type === FieldType.number,\n  getDefaultOptions: () => ({ value: 0 }),\n};\n\nexport const getNumericValueMatchers = (): ValueMatcherInfo[] => [\n  isGreaterValueMatcher,\n  isGreaterOrEqualValueMatcher,\n  isLowerValueMatcher,\n  isLowerOrEqualValueMatcher,\n];\n","import { Field, FieldType } from '../../../types/dataFrame';\nimport { ValueMatcherInfo } from '../../../types/transformations';\nimport { ValueMatcherID } from '../ids';\n\nimport { RangeValueMatcherOptions } from './types';\n\nconst isBetweenValueMatcher: ValueMatcherInfo<RangeValueMatcherOptions> = {\n  id: ValueMatcherID.between,\n  name: 'Is between',\n  description: 'Match when field value is between given option values.',\n  get: (options) => {\n    return (valueIndex: number, field: Field) => {\n      const value = field.values[valueIndex];\n      if (isNaN(value)) {\n        return false;\n      }\n      return value > options.from && value < options.to;\n    };\n  },\n  getOptionsDisplayText: (options) => {\n    return `Matches all rows where field value is between ${options.from} and ${options.to}.`;\n  },\n  isApplicable: (field) => field.type === FieldType.number,\n  getDefaultOptions: () => ({ from: 0, to: 100 }),\n};\n\nexport const getRangeValueMatchers = (): ValueMatcherInfo[] => [isBetweenValueMatcher];\n","import { Field } from '../../../types/dataFrame';\nimport { ValueMatcherInfo } from '../../../types/transformations';\nimport { ValueMatcherID } from '../ids';\n\nimport { BasicValueMatcherOptions } from './types';\n\nconst regexValueMatcher: ValueMatcherInfo<BasicValueMatcherOptions<string>> = {\n  id: ValueMatcherID.regex,\n  name: 'Regex',\n  description: 'Match when field value is matching regex.',\n  get: (options) => {\n    const regex = new RegExp(options.value);\n\n    return (valueIndex: number, field: Field) => {\n      const value = field.values[valueIndex];\n      return regex.test(value);\n    };\n  },\n  getOptionsDisplayText: (options) => {\n    return `Matches all rows where field value is matching regex: ${options.value}`;\n  },\n  isApplicable: () => true,\n  getDefaultOptions: () => ({ value: '.*' }),\n};\n\nexport const getRegexValueMatcher = (): ValueMatcherInfo[] => [regexValueMatcher];\n","// Load the Builtin matchers\nimport {\n  FieldMatcherInfo,\n  MatcherConfig,\n  FrameMatcherInfo,\n  FieldMatcher,\n  FrameMatcher,\n  ValueMatcherInfo,\n  ValueMatcher,\n} from '../types/transformations';\nimport { Registry } from '../utils/Registry';\n\nimport { getFieldTypeMatchers } from './matchers/fieldTypeMatcher';\nimport { fieldValueMatcherInfo } from './matchers/fieldValueMatcher';\nimport { getFieldNameMatchers, getFrameNameMatchers } from './matchers/nameMatcher';\nimport { getFieldPredicateMatchers, getFramePredicateMatchers } from './matchers/predicates';\nimport { getRefIdMatchers } from './matchers/refIdMatcher';\nimport { getSimpleFieldMatchers } from './matchers/simpleFieldMatcher';\nimport { getEqualValueMatchers } from './matchers/valueMatchers/equalMatchers';\nimport { getNullValueMatchers } from './matchers/valueMatchers/nullMatchers';\nimport { getNumericValueMatchers } from './matchers/valueMatchers/numericMatchers';\nimport { getRangeValueMatchers } from './matchers/valueMatchers/rangeMatchers';\nimport { getRegexValueMatcher } from './matchers/valueMatchers/regexMatchers';\n\nexport { type FieldValueMatcherConfig } from './matchers/fieldValueMatcher';\n\n/**\n * Registry that contains all of the built in field matchers.\n * @public\n */\nexport const fieldMatchers = new Registry<FieldMatcherInfo>(() => {\n  return [\n    ...getFieldPredicateMatchers(), // Predicates\n    ...getFieldTypeMatchers(), // by type\n    ...getFieldNameMatchers(), // by name\n    ...getSimpleFieldMatchers(), // first\n    fieldValueMatcherInfo, // reduce field (all null/zero)\n  ];\n});\n\n/**\n * Registry that contains all of the built in frame matchers.\n * @public\n */\nexport const frameMatchers = new Registry<FrameMatcherInfo>(() => {\n  return [\n    ...getFramePredicateMatchers(), // Predicates\n    ...getFrameNameMatchers(), // by name\n    ...getRefIdMatchers(), // by query refId\n  ];\n});\n\n/**\n * Registry that contains all of the built in value matchers.\n * @public\n */\nexport const valueMatchers = new Registry<ValueMatcherInfo>(() => {\n  return [\n    ...getNullValueMatchers(),\n    ...getNumericValueMatchers(),\n    ...getEqualValueMatchers(),\n    ...getRangeValueMatchers(),\n    ...getRegexValueMatcher(),\n  ];\n});\n\n/**\n * Resolves a field matcher from the registry for given config.\n * Will throw an error if matcher can not be resolved.\n * @public\n */\nexport function getFieldMatcher(config: MatcherConfig): FieldMatcher {\n  const info = fieldMatchers.get(config.id);\n  if (!info) {\n    throw new Error('Unknown field matcher: ' + config.id);\n  }\n  return info.get(config.options);\n}\n\n/**\n * Resolves a frame matcher from the registry for given config.\n * Will throw an error if matcher can not be resolved.\n * @public\n */\nexport function getFrameMatchers(config: MatcherConfig): FrameMatcher {\n  const info = frameMatchers.get(config.id);\n  if (!info) {\n    throw new Error('Unknown frame matcher: ' + config.id);\n  }\n  return info.get(config.options);\n}\n\n/**\n * Resolves a value matcher from the registry for given config.\n * Will throw an error if matcher can not be resolved.\n * @public\n */\nexport function getValueMatcher(config: MatcherConfig): ValueMatcher {\n  const info = valueMatchers.get(config.id);\n  if (!info) {\n    throw new Error('Unknown value matcher: ' + config.id);\n  }\n  return info.get(config.options);\n}\n","export enum DataTransformerID {\n  append = 'append',\n  //  rotate = 'rotate', // Columns to rows\n  reduce = 'reduce',\n  order = 'order',\n  organize = 'organize',\n  rename = 'rename',\n  calculateField = 'calculateField',\n  /** @deprecated use joinByField */\n  seriesToColumns = 'seriesToColumns',\n  seriesToRows = 'seriesToRows',\n  merge = 'merge',\n  concatenate = 'concatenate',\n  labelsToFields = 'labelsToFields',\n  filterFields = 'filterFields',\n  filterFieldsByName = 'filterFieldsByName',\n  filterFrames = 'filterFrames',\n  filterByRefId = 'filterByRefId',\n  renameByRegex = 'renameByRegex',\n  filterByValue = 'filterByValue',\n  noop = 'noop',\n  ensureColumns = 'ensureColumns',\n  groupBy = 'groupBy',\n  sortBy = 'sortBy',\n  histogram = 'histogram',\n  configFromData = 'configFromData',\n  rowsToFields = 'rowsToFields',\n  prepareTimeSeries = 'prepareTimeSeries',\n  convertFieldType = 'convertFieldType',\n  fieldLookup = 'fieldLookup',\n  heatmap = 'heatmap',\n  spatial = 'spatial',\n  joinByField = 'joinByField',\n  joinByLabels = 'joinByLabels',\n  extractFields = 'extractFields',\n  groupingToMatrix = 'groupingToMatrix',\n  limit = 'limit',\n  partitionByValues = 'partitionByValues',\n  timeSeriesTable = 'timeSeriesTable',\n  formatTime = 'formatTime',\n  formatString = 'formatString',\n  regression = 'regression',\n}\n","import { map } from 'rxjs/operators';\n\nimport { DataFrame, SynchronousDataTransformerInfo, FieldMatcher, DataTransformContext } from '../../types';\nimport { fieldMatchers } from '../matchers';\nimport { FieldMatcherID } from '../matchers/ids';\n\nimport { DataTransformerID } from './ids';\nimport { joinDataFrames } from './joinDataFrames';\n\nexport enum JoinMode {\n  outer = 'outer', // best for time series, non duplicated join on values\n  inner = 'inner',\n  outerTabular = 'outerTabular', // best for tabular data where the join on value can be duplicated\n}\n\nexport interface JoinByFieldOptions {\n  byField?: string; // empty will pick the field automatically\n  mode?: JoinMode;\n}\n\nexport const joinByFieldTransformer: SynchronousDataTransformerInfo<JoinByFieldOptions> = {\n  id: DataTransformerID.joinByField,\n  aliasIds: [DataTransformerID.seriesToColumns],\n  name: 'Join by field',\n  description:\n    'Combine rows from two or more tables, based on a related field between them.  This can be used to outer join multiple time series on the _time_ field to show many time series in one table.',\n  defaultOptions: {\n    byField: undefined, // DEFAULT_KEY_FIELD,\n    mode: JoinMode.outer,\n  },\n\n  operator: (options, ctx) => (source) =>\n    source.pipe(map((data) => joinByFieldTransformer.transformer(options, ctx)(data))),\n\n  transformer: (options: JoinByFieldOptions, ctx: DataTransformContext) => {\n    let joinBy: FieldMatcher | undefined = undefined;\n    return (data: DataFrame[]) => {\n      if (data.length > 1) {\n        if (options.byField && !joinBy) {\n          joinBy = fieldMatchers.get(FieldMatcherID.byName).get(ctx.interpolate(options.byField));\n        }\n        const joined = joinDataFrames({ frames: data, joinBy, mode: options.mode });\n        if (joined) {\n          return [joined];\n        }\n      }\n      return data;\n    };\n  },\n};\n","import intersect from 'fast_array_intersect';\n\nimport { getTimeField, sortDataFrame } from '../../dataframe';\nimport { DataFrame, Field, FieldMatcher, FieldType, TIME_SERIES_VALUE_FIELD_NAME } from '../../types';\nimport { fieldMatchers } from '../matchers';\nimport { FieldMatcherID } from '../matchers/ids';\n\nimport { JoinMode } from './joinByField';\n\nexport function pickBestJoinField(data: DataFrame[]): FieldMatcher {\n  const { timeField } = getTimeField(data[0]);\n  if (timeField) {\n    return fieldMatchers.get(FieldMatcherID.firstTimeField).get({});\n  }\n  let common: string[] = [];\n  for (const f of data[0].fields) {\n    if (f.type === FieldType.number) {\n      common.push(f.name);\n    }\n  }\n\n  for (let i = 1; i < data.length; i++) {\n    const names: string[] = [];\n    for (const f of data[0].fields) {\n      if (f.type === FieldType.number) {\n        names.push(f.name);\n      }\n    }\n    common = common.filter((v) => !names.includes(v));\n  }\n\n  return fieldMatchers.get(FieldMatcherID.byName).get(common[0]);\n}\n\n/**\n * @internal\n */\nexport interface JoinOptions {\n  /**\n   * The input fields\n   */\n  frames: DataFrame[];\n\n  /**\n   * The field to join -- frames that do not have this field will be dropped\n   */\n  joinBy?: FieldMatcher;\n\n  /**\n   * Optionally filter the non-join fields\n   */\n  keep?: FieldMatcher;\n\n  /**\n   * @internal -- used when we need to keep a reference to the original frame/field index\n   */\n  keepOriginIndices?: boolean;\n\n  /**\n   * @internal -- Optionally specify a join mode (outer or inner)\n   */\n  mode?: JoinMode;\n}\n\nfunction getJoinMatcher(options: JoinOptions): FieldMatcher {\n  return options.joinBy ?? pickBestJoinField(options.frames);\n}\n\n/**\n * @internal\n */\nexport function maybeSortFrame(frame: DataFrame, fieldIdx: number) {\n  if (fieldIdx >= 0) {\n    let sortByField = frame.fields[fieldIdx];\n\n    if (sortByField.type !== FieldType.string && !isLikelyAscendingVector(sortByField.values)) {\n      frame = sortDataFrame(frame, fieldIdx);\n    }\n  }\n\n  return frame;\n}\n\n/**\n * This will return a single frame joined by the first matching field.  When a join field is not specified,\n * the default will use the first time field\n */\nexport function joinDataFrames(options: JoinOptions): DataFrame | undefined {\n  if (!options.frames?.length) {\n    return;\n  }\n\n  if (options.frames.length === 1) {\n    let frame = options.frames[0];\n    let frameCopy = frame;\n\n    const joinFieldMatcher = getJoinMatcher(options);\n    let joinIndex = frameCopy.fields.findIndex((f) => joinFieldMatcher(f, frameCopy, options.frames));\n\n    if (options.keepOriginIndices) {\n      frameCopy = {\n        ...frame,\n        fields: frame.fields.map((f, fieldIndex) => {\n          const copy = { ...f };\n          const origin = {\n            frameIndex: 0,\n            fieldIndex,\n          };\n          if (copy.state) {\n            copy.state.origin = origin;\n          } else {\n            copy.state = { origin };\n          }\n          return copy;\n        }),\n      };\n\n      // Make sure the join field is first\n      if (joinIndex > 0) {\n        const joinField = frameCopy.fields[joinIndex];\n        const fields = frameCopy.fields.filter((f, idx) => idx !== joinIndex);\n        fields.unshift(joinField);\n        frameCopy.fields = fields;\n        joinIndex = 0;\n      }\n    }\n\n    if (joinIndex >= 0) {\n      frameCopy = maybeSortFrame(frameCopy, joinIndex);\n    }\n\n    if (options.keep) {\n      let fields = frameCopy.fields.filter(\n        (f, fieldIdx) => fieldIdx === joinIndex || options.keep!(f, frameCopy, options.frames)\n      );\n\n      // mutate already copied frame\n      if (frame !== frameCopy) {\n        frameCopy.fields = fields;\n      } else {\n        frameCopy = {\n          ...frame,\n          fields,\n        };\n      }\n    }\n\n    return frameCopy;\n  }\n\n  const nullModes: JoinNullMode[][] = [];\n  const allData: AlignedData[] = [];\n  const originalFields: Field[] = [];\n  // store frame field order for tabular data join\n  const originalFieldsOrderByFrame: number[][] = [];\n  // all other fields that are not the join on are in the 1+ position (join is always the 0)\n  let fieldsOrder = 1;\n  const joinFieldMatcher = getJoinMatcher(options);\n\n  for (let frameIndex = 0; frameIndex < options.frames.length; frameIndex++) {\n    const frame = options.frames[frameIndex];\n\n    if (!frame || !frame.fields?.length) {\n      continue; // skip the frame\n    }\n\n    const nullModesFrame: JoinNullMode[] = [NULL_REMOVE];\n    let join: Field | undefined = undefined;\n    let fields: Field[] = [];\n    let frameFieldsOrder = [];\n\n    for (let fieldIndex = 0; fieldIndex < frame.fields.length; fieldIndex++) {\n      const field = frame.fields[fieldIndex];\n      field.state = field.state || {};\n\n      if (!join && joinFieldMatcher(field, frame, options.frames)) {\n        join = field;\n      } else {\n        if (options.keep && !options.keep(field, frame, options.frames)) {\n          continue; // skip field\n        }\n\n        // Support the standard graph span nulls field config\n        let spanNulls = field.config.custom?.spanNulls;\n        nullModesFrame.push(spanNulls === true ? NULL_REMOVE : spanNulls === -1 ? NULL_RETAIN : NULL_EXPAND);\n\n        let labels = field.labels ?? {};\n        let name = field.name;\n        if (frame.name) {\n          if (field.name === TIME_SERIES_VALUE_FIELD_NAME) {\n            name = frame.name;\n          } else {\n            labels = { ...labels, name: frame.name };\n          }\n        }\n\n        fields.push({\n          ...field,\n          name,\n          labels, // add the name label from frame\n        });\n      }\n\n      if (options.keepOriginIndices) {\n        field.state.origin = {\n          frameIndex,\n          fieldIndex,\n        };\n      }\n    }\n\n    if (!join) {\n      continue; // skip the frame\n    }\n\n    if (originalFields.length === 0) {\n      originalFields.push(join); // first join field\n    }\n\n    nullModes.push(nullModesFrame);\n    const a: AlignedData = [join.values]; //\n\n    for (const field of fields) {\n      a.push(field.values);\n      originalFields.push(field);\n      // clear field displayName state\n      delete field.state?.displayName;\n      // store frame field order for tabular data join\n      frameFieldsOrder.push(fieldsOrder);\n      fieldsOrder++;\n    }\n    // store frame field order for tabular data join\n    originalFieldsOrderByFrame.push(frameFieldsOrder);\n    allData.push(a);\n  }\n\n  let joined: Array<Array<number | string | null | undefined>> = [];\n\n  if (options.mode === JoinMode.outerTabular) {\n    joined = joinOuterTabular(allData, originalFieldsOrderByFrame, originalFields.length, nullModes);\n  } else {\n    joined = join(allData, nullModes, options.mode);\n  }\n\n  return {\n    // ...options.data[0], // keep name, meta?\n    length: joined[0] ? joined[0].length : 0,\n    fields: originalFields.map((f, index) => ({\n      ...f,\n      values: joined[index],\n    })),\n  };\n}\n\n// The following full outer join allows for multiple/duplicated joined fields values where as the performant join from uplot creates a unique set of field values to be joined on\n// http://www.silota.com/docs/recipes/sql-join-tutorial-javascript-examples.html\n// The frame field value which is used join on is sorted to the 0 position of each table data in both tables and nullModes\n// (not sure if we need nullModes) for nullModes, the field to join on is given NULL_REMOVE and all other fields are given NULL_EXPAND\nfunction joinOuterTabular(\n  tables: AlignedData[],\n  originalFieldsOrderByFrame: number[][],\n  numberOfFields: number,\n  nullModes?: number[][]\n) {\n  // we will iterate through all frames and check frames for matches preventing duplicates.\n  // we will store each matched frame \"row\" or field values at the same index in the following hash.\n  let duplicateHash: { [key: string]: Array<number | string | null | undefined> } = {};\n\n  // iterate through the tables (frames)\n  // for each frame we get the field data where the data in the 0 pos is the value to join on\n  for (let tableIdx = 0; tableIdx < tables.length; tableIdx++) {\n    // the table (frame) to check for matches in other tables\n    let table = tables[tableIdx];\n    // the field value to join on (the join value is always in the 0 position)\n    let joinOnTableField = table[0];\n\n    // now we iterate through the other table (frame) data to look for matches\n    for (let otherTablesIdx = 0; otherTablesIdx < tables.length; otherTablesIdx++) {\n      // do not match on the same table\n      if (otherTablesIdx === tableIdx) {\n        continue;\n      }\n\n      let otherTable = tables[otherTablesIdx];\n      let otherTableJoinOnField = otherTable[0];\n\n      // iterate through the field to join on from the first table\n      for (\n        let joinTableFieldValuesIdx = 0;\n        joinTableFieldValuesIdx < joinOnTableField.length;\n        joinTableFieldValuesIdx++\n      ) {\n        // create the joined data\n        // this has the orignalFields length and should start out undefined\n        // joined row + number of other fields in each frame\n        // the order of each field is important in how we\n        // 1 check for duplicates\n        // 2 transform the row back into fields for the joined frame\n        // 3 when there is no match for the row we keep the vals undefined\n        const tableJoinOnValue = joinOnTableField[joinTableFieldValuesIdx];\n        const allOtherFields = numberOfFields - 1;\n        let joinedRow: Array<number | string | null | undefined> = [tableJoinOnValue].concat(new Array(allOtherFields));\n\n        let tableFieldValIdx = 0;\n        for (let fieldsIdx = 1; fieldsIdx < table.length; fieldsIdx++) {\n          const joinRowIdx = originalFieldsOrderByFrame[tableIdx][tableFieldValIdx];\n          joinedRow[joinRowIdx] = table[fieldsIdx][joinTableFieldValuesIdx];\n          tableFieldValIdx++;\n        }\n\n        for (let otherTableValuesIdx = 0; otherTableValuesIdx < otherTableJoinOnField.length; otherTableValuesIdx++) {\n          if (joinOnTableField[joinTableFieldValuesIdx] === otherTableJoinOnField[otherTableValuesIdx]) {\n            let tableFieldValIdx = 0;\n            for (let fieldsIdx = 1; fieldsIdx < otherTable.length; fieldsIdx++) {\n              const joinRowIdx = originalFieldsOrderByFrame[otherTablesIdx][tableFieldValIdx];\n              joinedRow[joinRowIdx] = otherTable[fieldsIdx][otherTableValuesIdx];\n              tableFieldValIdx++;\n            }\n\n            break;\n          }\n        }\n\n        // prevent duplicates by entering rows in a hash where keys are the rows\n        duplicateHash[JSON.stringify(joinedRow)] = joinedRow;\n      }\n    }\n  }\n\n  // transform the joined rows into data for a dataframe\n  let data: Array<Array<number | string | null | undefined>> = [];\n  for (let field = 0; field < numberOfFields; field++) {\n    data.push(new Array(0));\n  }\n\n  for (let key in duplicateHash) {\n    const row = duplicateHash[key];\n\n    for (let valIdx = 0; valIdx < row.length; valIdx++) {\n      data[valIdx].push(row[valIdx]);\n    }\n  }\n\n  return data;\n}\n\n//--------------------------------------------------------------------------------\n// Below here is copied from uplot (MIT License)\n// https://github.com/leeoniya/uPlot/blob/master/src/utils.js#L325\n// This avoids needing to import uplot into the data package\n//--------------------------------------------------------------------------------\n\n// Copied from uplot\nexport type TypedArray =\n  | Int8Array\n  | Uint8Array\n  | Int16Array\n  | Uint16Array\n  | Int32Array\n  | Uint32Array\n  | Uint8ClampedArray\n  | Float32Array\n  | Float64Array;\n\nexport type AlignedData =\n  | TypedArray[]\n  | [xValues: number[] | TypedArray, ...yValues: Array<Array<number | null | undefined> | TypedArray>];\n\n// nullModes\nconst NULL_REMOVE = 0; // nulls are converted to undefined (e.g. for spanGaps: true)\nconst NULL_RETAIN = 1; // nulls are retained, with alignment artifacts set to undefined (default)\nconst NULL_EXPAND = 2; // nulls are expanded to include any adjacent alignment artifacts\n\ntype JoinNullMode = number; // NULL_IGNORE | NULL_RETAIN | NULL_EXPAND;\n\n// sets undefined values to nulls when adjacent to existing nulls (minesweeper)\nfunction nullExpand(yVals: Array<number | null>, nullIdxs: number[], alignedLen: number) {\n  for (let i = 0, xi, lastNullIdx = -1; i < nullIdxs.length; i++) {\n    let nullIdx = nullIdxs[i];\n\n    if (nullIdx > lastNullIdx) {\n      xi = nullIdx - 1;\n      while (xi >= 0 && yVals[xi] == null) {\n        yVals[xi--] = null;\n      }\n\n      xi = nullIdx + 1;\n      while (xi < alignedLen && yVals[xi] == null) {\n        yVals[(lastNullIdx = xi++)] = null;\n      }\n    }\n  }\n}\n\n// nullModes is a tables-matched array indicating how to treat nulls in each series\nexport function join(tables: AlignedData[], nullModes?: number[][], mode: JoinMode = JoinMode.outer) {\n  let xVals: Set<number>;\n\n  if (mode === JoinMode.inner) {\n    // @ts-ignore\n    xVals = new Set(intersect(tables.map((t) => t[0])));\n  } else {\n    xVals = new Set();\n\n    for (let ti = 0; ti < tables.length; ti++) {\n      let t = tables[ti];\n      let xs = t[0];\n      let len = xs.length;\n\n      for (let i = 0; i < len; i++) {\n        xVals.add(xs[i]);\n      }\n    }\n  }\n\n  let data = [Array.from(xVals).sort((a, b) => a - b)];\n\n  let alignedLen = data[0].length;\n\n  let xIdxs = new Map();\n\n  for (let i = 0; i < alignedLen; i++) {\n    xIdxs.set(data[0][i], i);\n  }\n\n  for (let ti = 0; ti < tables.length; ti++) {\n    let t = tables[ti];\n    let xs = t[0];\n\n    for (let si = 1; si < t.length; si++) {\n      let ys = t[si];\n\n      let yVals = Array(alignedLen).fill(undefined);\n\n      let nullMode = nullModes ? nullModes[ti][si] : NULL_RETAIN;\n\n      let nullIdxs = [];\n\n      for (let i = 0; i < ys.length; i++) {\n        let yVal = ys[i];\n        let alignedIdx = xIdxs.get(xs[i]);\n\n        if (yVal === null) {\n          if (nullMode !== NULL_REMOVE) {\n            yVals[alignedIdx] = yVal;\n\n            if (nullMode === NULL_EXPAND) {\n              nullIdxs.push(alignedIdx);\n            }\n          }\n        } else {\n          yVals[alignedIdx] = yVal;\n        }\n      }\n\n      nullExpand(yVals, nullIdxs, alignedLen);\n\n      data.push(yVals);\n    }\n  }\n\n  return data;\n}\n\n// Test a few samples to see if the values are ascending\n// Only exported for tests\nexport function isLikelyAscendingVector(data: any[], samples = 50) {\n  const len = data.length;\n\n  // empty or single value\n  if (len <= 1) {\n    return true;\n  }\n\n  // skip leading & trailing nullish\n  let firstIdx = 0;\n  let lastIdx = len - 1;\n\n  while (firstIdx <= lastIdx && data[firstIdx] == null) {\n    firstIdx++;\n  }\n\n  while (lastIdx >= firstIdx && data[lastIdx] == null) {\n    lastIdx--;\n  }\n\n  // all nullish or one value surrounded by nullish\n  if (lastIdx <= firstIdx) {\n    return true;\n  }\n\n  const stride = Math.max(1, Math.floor((lastIdx - firstIdx + 1) / samples));\n\n  for (let prevVal = data[firstIdx], i = firstIdx + stride; i <= lastIdx; i += stride) {\n    const v = data[i];\n\n    if (v != null) {\n      if (v <= prevVal) {\n        return false;\n      }\n\n      prevVal = v;\n    }\n  }\n\n  return true;\n}\n","import { Labels } from '../types';\n\n/** replace labels in a string.  Used for loki+prometheus legend formats */\nexport function renderLegendFormat(aliasPattern: string, aliasData: Labels): string {\n  const aliasRegex = /\\{\\{\\s*(.+?)\\s*\\}\\}/g;\n  return aliasPattern.replace(aliasRegex, (_, g1) => (aliasData[g1] ? aliasData[g1] : g1));\n}\n","import { AlignedData } from 'uplot';\n\nimport { DataFrame, Field, FieldDTO, FieldType, Labels, parseLabels, QueryResultMeta } from '..';\nimport { join } from '../transformations/transformers/joinDataFrames';\nimport { renderLegendFormat } from '../utils/legend';\n\nimport {\n  DataFrameJSON,\n  decodeFieldValueEntities,\n  FieldSchema,\n  guessFieldTypeFromValue,\n  toFilteredDataFrameDTO,\n} from '.';\n\n/**\n * Indicate if the frame is appened or replace\n *\n * @alpha\n */\nexport enum StreamingFrameAction {\n  Append = 'append',\n  Replace = 'replace',\n}\n\n/**\n * @alpha\n * */\nexport interface StreamingFrameOptions {\n  maxLength: number; // 1000\n  maxDelta: number; // how long to keep things\n  action: StreamingFrameAction; // default will append\n\n  /** optionally format field names based on labels */\n  displayNameFormat?: string;\n}\n\n/**\n * Stream packet info is attached to StreamingDataFrames and indicate how many\n * rows were added to the end of the frame.  The number of discarded rows can be\n * calculated from previous state\n */\nexport interface StreamPacketInfo {\n  number: number;\n  action: StreamingFrameAction;\n  length: number;\n  schemaChanged: boolean;\n}\n\nconst PROM_STYLE_METRIC_LABEL = '__name__';\n\nenum PushMode {\n  wide,\n  labels,\n  // long\n}\n\nexport type SerializedStreamingDataFrame = {\n  name?: string;\n  fields: FieldDTO[];\n  refId?: string;\n  meta: QueryResultMeta;\n  schemaFields: FieldSchema[];\n  timeFieldIndex: number;\n  pushMode: PushMode;\n  length: number;\n  packetInfo: StreamPacketInfo;\n  options: StreamingFrameOptions;\n  labels: Set<string>;\n};\n\n/**\n * Unlike a circular buffer, this will append and periodically slice the front\n */\nexport class StreamingDataFrame implements DataFrame {\n  name?: string;\n  refId?: string;\n  meta: QueryResultMeta = {};\n\n  fields: Field[] = [];\n  length = 0;\n\n  private schemaFields: FieldSchema[] = [];\n  private timeFieldIndex = -1;\n  private pushMode = PushMode.wide;\n\n  // current labels\n  private labels: Set<string> = new Set();\n  readonly packetInfo: StreamPacketInfo = {\n    schemaChanged: true,\n    number: 0,\n    action: StreamingFrameAction.Replace,\n    length: 0,\n  };\n\n  private constructor(public options: StreamingFrameOptions) {\n    // Get Length to show up if you use spread\n    Object.defineProperty(this, 'length', {\n      enumerable: true,\n    });\n\n    // Get fields to show up if you use spread\n    Object.defineProperty(this, 'fields', {\n      enumerable: true,\n    });\n  }\n\n  serialize = (\n    fieldPredicate?: (f: Field) => boolean,\n    optionsOverride?: Partial<StreamingFrameOptions>,\n    trimValues?: {\n      maxLength?: number;\n    }\n  ): SerializedStreamingDataFrame => {\n    const options = optionsOverride ? Object.assign({}, { ...this.options, ...optionsOverride }) : this.options;\n    const dataFrameDTO = toFilteredDataFrameDTO(this, fieldPredicate);\n\n    const numberOfItemsToRemove = getNumberOfItemsToRemove(\n      dataFrameDTO.fields.map((f) => f.values) as unknown[][],\n      typeof trimValues?.maxLength === 'number' ? Math.min(trimValues.maxLength, options.maxLength) : options.maxLength,\n      this.timeFieldIndex,\n      options.maxDelta\n    );\n\n    dataFrameDTO.fields = dataFrameDTO.fields.map((f) => ({\n      ...f,\n      values: f.values?.slice(numberOfItemsToRemove),\n    }));\n\n    const length = dataFrameDTO.fields[0]?.values?.length ?? 0;\n\n    return {\n      ...dataFrameDTO,\n      // TODO: Labels and schema are not filtered by field\n      labels: this.labels,\n      schemaFields: this.schemaFields,\n\n      name: this.name,\n      refId: this.refId,\n      meta: this.meta,\n      length,\n      timeFieldIndex: this.timeFieldIndex,\n      pushMode: this.pushMode,\n      packetInfo: this.packetInfo,\n      options,\n    };\n  };\n\n  private initFromSerialized = (serialized: Omit<SerializedStreamingDataFrame, 'options'>) => {\n    this.name = serialized.name;\n    this.refId = serialized.refId;\n    this.meta = serialized.meta;\n    this.length = serialized.length;\n    this.labels = serialized.labels;\n    this.schemaFields = serialized.schemaFields;\n    this.timeFieldIndex = serialized.timeFieldIndex;\n    this.pushMode = serialized.pushMode;\n    this.packetInfo.length = serialized.packetInfo.length;\n    this.packetInfo.number = serialized.packetInfo.number;\n    this.packetInfo.action = StreamingFrameAction.Replace;\n    this.packetInfo.schemaChanged = true;\n    this.fields = serialized.fields.map((f) => ({\n      ...f,\n      type: f.type ?? FieldType.other,\n      config: f.config ?? {},\n      values: f.values ?? [],\n    }));\n\n    assureValuesAreWithinLengthLimit(\n      this.fields.map((f) => f.values),\n      this.options.maxLength,\n      this.timeFieldIndex,\n      this.options.maxDelta\n    );\n  };\n\n  static deserialize = (serialized: SerializedStreamingDataFrame) => {\n    const frame = new StreamingDataFrame(serialized.options);\n    frame.initFromSerialized(serialized);\n    return frame;\n  };\n\n  static empty = (opts?: Partial<StreamingFrameOptions>): StreamingDataFrame =>\n    new StreamingDataFrame(getStreamingFrameOptions(opts));\n\n  static fromDataFrameJSON = (frame: DataFrameJSON, opts?: Partial<StreamingFrameOptions>): StreamingDataFrame => {\n    const streamingDataFrame = new StreamingDataFrame(getStreamingFrameOptions(opts));\n    streamingDataFrame.push(frame);\n    return streamingDataFrame;\n  };\n\n  private get alwaysReplace() {\n    return this.options.action === StreamingFrameAction.Replace;\n  }\n\n  needsResizing = ({ maxLength, maxDelta }: StreamingFrameOptions) => {\n    const needsMoreLength = maxLength && this.options.maxLength < maxLength;\n    const needsBiggerDelta = maxDelta && this.options.maxDelta < maxDelta;\n    const needsToOverrideDefaultInfinityDelta = maxDelta && this.options.maxDelta === Infinity;\n    return Boolean(needsMoreLength || needsBiggerDelta || needsToOverrideDefaultInfinityDelta);\n  };\n\n  resize = ({ maxLength, maxDelta }: Partial<StreamingFrameOptions>) => {\n    if (maxDelta) {\n      if (this.options.maxDelta === Infinity) {\n        this.options.maxDelta = maxDelta;\n      } else {\n        this.options.maxDelta = Math.max(maxDelta, this.options.maxDelta);\n      }\n    }\n    this.options.maxLength = Math.max(this.options.maxLength, maxLength ?? 0);\n  };\n\n  /**\n   * apply the new message to the existing data.  This will replace the existing schema\n   * if a new schema is included in the message, or append data matching the current schema\n   */\n  push(msg: DataFrameJSON): StreamPacketInfo {\n    const { schema, data } = msg;\n\n    this.packetInfo.number++;\n    this.packetInfo.length = 0;\n    this.packetInfo.schemaChanged = false;\n\n    if (schema) {\n      this.pushMode = PushMode.wide;\n      this.timeFieldIndex = schema.fields.findIndex((f) => f.type === FieldType.time);\n      const firstField = schema.fields[0];\n      if (\n        this.timeFieldIndex === 1 &&\n        firstField.type === FieldType.string &&\n        (firstField.name === 'labels' || firstField.name === 'Labels')\n      ) {\n        this.pushMode = PushMode.labels;\n        this.timeFieldIndex = 0; // after labels are removed!\n      }\n\n      const niceSchemaFields = this.pushMode === PushMode.labels ? schema.fields.slice(1) : schema.fields;\n\n      this.refId = schema.refId;\n      if (schema.meta) {\n        this.meta = { ...schema.meta };\n      }\n\n      const { displayNameFormat } = this.options;\n      if (hasSameStructure(this.schemaFields, niceSchemaFields)) {\n        const len = niceSchemaFields.length;\n        this.fields.forEach((f, idx) => {\n          const sf = niceSchemaFields[idx % len];\n          f.config = sf.config ?? {};\n          f.labels = sf.labels;\n        });\n        if (displayNameFormat) {\n          this.fields.forEach((f) => {\n            const labels = { [PROM_STYLE_METRIC_LABEL]: f.name, ...f.labels };\n            f.config.displayNameFromDS = renderLegendFormat(displayNameFormat, labels);\n          });\n        }\n      } else {\n        this.packetInfo.schemaChanged = true;\n        const isWide = this.pushMode === PushMode.wide;\n        this.fields = niceSchemaFields.map((f) => {\n          const config = f.config ?? {};\n          if (displayNameFormat) {\n            const labels = { [PROM_STYLE_METRIC_LABEL]: f.name, ...f.labels };\n            config.displayNameFromDS = renderLegendFormat(displayNameFormat, labels);\n          }\n          return {\n            config,\n            name: f.name,\n            labels: f.labels,\n            type: f.type ?? FieldType.other,\n            // transfer old values by type & name, unless we relied on labels to match fields\n            values: isWide\n              ? this.fields.find((of) => of.name === f.name && f.type === of.type)?.values ??\n                Array(this.length).fill(undefined)\n              : [],\n          };\n        });\n      }\n\n      this.schemaFields = niceSchemaFields;\n    }\n\n    if (data && data.values.length && data.values[0].length) {\n      let { values, entities } = data;\n\n      if (entities) {\n        entities.forEach((ents, i) => {\n          if (ents) {\n            decodeFieldValueEntities(ents, values[i]);\n            // TODO: append replacements to field\n          }\n        });\n      }\n\n      if (this.pushMode === PushMode.labels) {\n        // augment and transform data to match current schema for standard circPush() path\n        const labeledTables = transpose(values);\n\n        // make sure fields are initalized for each label\n        for (const label of labeledTables.keys()) {\n          if (!this.labels.has(label)) {\n            this.packetInfo.schemaChanged = true;\n            this.addLabel(label);\n          }\n        }\n\n        // TODO: cache higher up\n        let dummyTable = Array(this.schemaFields.length).fill([]);\n\n        let tables: AlignedData[] = [];\n        this.labels.forEach((label) => {\n          tables.push(labeledTables.get(label) ?? dummyTable);\n        });\n\n        values = join(tables);\n      }\n\n      if (values.length !== this.fields.length) {\n        if (this.fields.length) {\n          throw new Error(\n            `push message mismatch.  Expected: ${this.fields.length}, received: ${values.length} (labels=${\n              this.pushMode === PushMode.labels\n            })`\n          );\n        }\n\n        this.fields = values.map((vals, idx) => {\n          let name = `Field ${idx}`;\n          let type = guessFieldTypeFromValue(vals[0]);\n          const isTime = idx === 0 && type === FieldType.number && (vals as number[])[0] > 1600016688632;\n          if (isTime) {\n            type = FieldType.time;\n            name = 'Time';\n          }\n\n          return {\n            name,\n            type,\n            config: {},\n            values: [],\n          };\n        });\n      }\n\n      let appended = values;\n      this.packetInfo.length = values[0].length;\n\n      if (this.alwaysReplace || !this.length) {\n        this.packetInfo.action = StreamingFrameAction.Replace;\n      } else {\n        this.packetInfo.action = StreamingFrameAction.Append;\n\n        // mutates appended\n        appended = this.fields.map((f) => f.values);\n        circPush(appended, values, this.options.maxLength, this.timeFieldIndex, this.options.maxDelta);\n      }\n\n      appended.forEach((v, i) => {\n        const field = this.fields[i];\n        const { state } = field;\n        field.values = v;\n        if (state) {\n          state.calcs = undefined;\n        }\n      });\n\n      // Update the frame length\n      this.length = appended[0].length;\n    }\n\n    return {\n      ...this.packetInfo,\n    };\n  }\n\n  pushNewValues = (values: unknown[][]) => {\n    if (!values?.length) {\n      return;\n    }\n\n    this.packetInfo.action = this.options.action;\n    this.packetInfo.number++;\n    this.packetInfo.length = values[0].length;\n    this.packetInfo.schemaChanged = false;\n\n    if (this.options.action === StreamingFrameAction.Append) {\n      circPush(\n        this.fields.map((f) => f.values),\n        values,\n        this.options.maxLength,\n        this.timeFieldIndex,\n        this.options.maxDelta\n      );\n    } else {\n      values.forEach((v, i) => {\n        if (this.fields[i]) {\n          this.fields[i].values = v;\n        }\n      });\n\n      assureValuesAreWithinLengthLimit(\n        this.fields.map((f) => f.values),\n        this.options.maxLength,\n        this.timeFieldIndex,\n        this.options.maxDelta\n      );\n    }\n    const newLength = this.fields?.[0]?.values.length;\n    if (newLength !== undefined) {\n      this.length = newLength;\n    }\n  };\n\n  resetStateCalculations = () => {\n    this.fields.forEach((f) => {\n      f.state = {\n        ...(f.state ?? {}),\n        calcs: undefined,\n        range: undefined,\n      };\n    });\n  };\n\n  getMatchingFieldIndexes = (fieldPredicate: (f: Field) => boolean): number[] =>\n    this.fields\n      .map((f, index) => (fieldPredicate(f) ? index : undefined))\n      .filter((val) => val !== undefined) as number[];\n\n  getValuesFromLastPacket = (): unknown[][] =>\n    this.fields.map((f) => {\n      const values = f.values;\n      return values.slice(Math.max(values.length - this.packetInfo.length));\n    });\n\n  hasAtLeastOnePacket = () => Boolean(this.packetInfo.length);\n\n  // adds a set of fields for a new label\n  private addLabel(label: string) {\n    const { displayNameFormat } = this.options;\n    const labelCount = this.labels.size;\n\n    // parse labels\n    const parsedLabels = parseLabelsFromField(label);\n\n    if (labelCount === 0) {\n      // mutate existing fields and add labels\n      this.fields.forEach((f, i) => {\n        if (i > 0) {\n          f.labels = parsedLabels;\n          if (displayNameFormat) {\n            const labels = { [PROM_STYLE_METRIC_LABEL]: f.name, ...parsedLabels };\n            f.config.displayNameFromDS = renderLegendFormat(displayNameFormat, labels);\n          }\n        }\n      });\n    } else {\n      for (let i = 1; i < this.schemaFields.length; i++) {\n        let proto = this.schemaFields[i] as Field;\n        const config = proto.config ?? {};\n        if (displayNameFormat) {\n          const labels = { [PROM_STYLE_METRIC_LABEL]: proto.name, ...parsedLabels };\n          config.displayNameFromDS = renderLegendFormat(displayNameFormat, labels);\n        }\n        this.fields.push({\n          ...proto,\n          config,\n          labels: parsedLabels,\n          values: Array(this.length).fill(undefined),\n        });\n      }\n    }\n\n    this.labels.add(label);\n  }\n\n  getOptions = (): Readonly<StreamingFrameOptions> => this.options;\n}\n\nexport function getStreamingFrameOptions(opts?: Partial<StreamingFrameOptions>): StreamingFrameOptions {\n  return {\n    maxLength: opts?.maxLength ?? 1000,\n    maxDelta: opts?.maxDelta ?? Infinity,\n    action: opts?.action ?? StreamingFrameAction.Append,\n    displayNameFormat: opts?.displayNameFormat,\n  };\n}\n\n// converts vertical insertion records with table keys in [0] and column values in [1...N]\n// to join()-able tables with column arrays\nexport function transpose(vrecs: unknown[][]) {\n  let tableKeys = new Set(vrecs[0]);\n  let tables = new Map();\n\n  tableKeys.forEach((key) => {\n    let cols = Array(vrecs.length - 1)\n      .fill(null)\n      .map(() => []);\n\n    tables.set(key, cols);\n  });\n\n  for (let r = 0; r < vrecs[0].length; r++) {\n    let table = tables.get(vrecs[0][r]);\n    for (let c = 1; c < vrecs.length; c++) {\n      table[c - 1].push(vrecs[c][r]);\n    }\n  }\n\n  return tables;\n}\n\n// binary search for index of closest value\nexport function closestIdx(num: number, arr: number[], lo?: number, hi?: number) {\n  let mid;\n  lo = lo || 0;\n  hi = hi || arr.length - 1;\n  let bitwise = hi <= 2147483647;\n\n  while (hi - lo > 1) {\n    mid = bitwise ? (lo + hi) >> 1 : Math.floor((lo + hi) / 2);\n\n    if (arr[mid] < num) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  if (num - arr[lo] <= arr[hi] - num) {\n    return lo;\n  }\n\n  return hi;\n}\n\nexport function parseLabelsFromField(str: string): Labels {\n  if (!str.length) {\n    return {};\n  }\n  if (str.charAt(0) === '{') {\n    return parseLabels(str);\n  }\n  const parsedLabels: Labels = {};\n  str.split(',').forEach((kv) => {\n    const [key, val] = kv.trim().split('=');\n    parsedLabels[key] = val;\n  });\n  return parsedLabels;\n}\n\n/**\n * @internal // not exported in yet\n */\nexport function getLastStreamingDataFramePacket(frame: DataFrame) {\n  const pi = (frame as StreamingDataFrame).packetInfo;\n  return pi?.action ? pi : undefined;\n}\n\n// mutable circular push\nfunction circPush(data: unknown[][], newData: unknown[][], maxLength = Infinity, deltaIdx = 0, maxDelta = Infinity) {\n  for (let i = 0; i < data.length; i++) {\n    for (let k = 0; k < newData[i].length; k++) {\n      data[i].push(newData[i][k]);\n    }\n  }\n\n  return assureValuesAreWithinLengthLimit(data, maxLength, deltaIdx, maxDelta);\n}\n\nfunction assureValuesAreWithinLengthLimit(data: unknown[][], maxLength = Infinity, deltaIdx = 0, maxDelta = Infinity) {\n  const count = getNumberOfItemsToRemove(data, maxLength, deltaIdx, maxDelta);\n\n  if (count) {\n    for (let i = 0; i < data.length; i++) {\n      data[i].splice(0, count);\n    }\n  }\n\n  return count;\n}\n\nfunction getNumberOfItemsToRemove(data: unknown[][], maxLength = Infinity, deltaIdx = 0, maxDelta = Infinity) {\n  if (!data[0]?.length) {\n    return 0;\n  }\n\n  const nlen = data[0].length;\n\n  let sliceIdx = 0;\n\n  if (nlen > maxLength) {\n    sliceIdx = nlen - maxLength;\n  }\n\n  if (maxDelta !== Infinity && deltaIdx >= 0) {\n    const deltaLookup = data[deltaIdx] as number[];\n\n    const low = deltaLookup[sliceIdx];\n    const high = deltaLookup[nlen - 1];\n\n    if (high - low > maxDelta) {\n      sliceIdx = closestIdx(high - maxDelta, deltaLookup, sliceIdx);\n    }\n  }\n\n  return sliceIdx;\n}\n\nfunction hasSameStructure(a: FieldSchema[], b: FieldSchema[]): boolean {\n  if (a?.length !== b.length) {\n    return false;\n  }\n  for (let i = 0; i < a.length; i++) {\n    const fA = a[i];\n    const fB = b[i];\n    if (fA.name !== fB.name || fA.type !== fB.type) {\n      return false;\n    }\n  }\n  return true;\n}\n","declare global {\n  interface Array<T> {\n    /** @deprecated Use [idx]. This only exists to help migrate Vector to Array */\n    get(idx: number): T;\n    /** @deprecated Use [idx]. This only exists to help migrate Vector to Array */\n    set(idx: number, value: T): void;\n    /** @deprecated Use .push(value). This only exists to help migrate Vector to Array */\n    add(value: T): void;\n    /** @deprecated this is not necessary.  This only exists to help migrate Vector to Array */\n    toArray(): T[];\n  }\n}\n\n// JS original sin\n// this if condition is because Jest will re-exec this block multiple times (in a browser this only runs once)\nexport function patchArrayVectorProrotypeMethods() {\n  if (!Object.getOwnPropertyDescriptor(Array.prototype, 'toArray')) {\n    Object.defineProperties(Array.prototype, {\n      get: {\n        value: function (idx: number) {\n          return this[idx];\n        },\n        writable: true,\n        enumerable: false,\n        configurable: true,\n      },\n      set: {\n        value: function (idx: number, value: unknown) {\n          this[idx] = value;\n        },\n        writable: true,\n        enumerable: false,\n        configurable: true,\n      },\n      add: {\n        value: function (value: unknown) {\n          this.push(value);\n        },\n        writable: true,\n        enumerable: false,\n        configurable: true,\n      },\n      toArray: {\n        value: function () {\n          return this;\n        },\n        writable: true,\n        enumerable: false,\n        configurable: true,\n      },\n    });\n  }\n}\n//this function call is intentional\npatchArrayVectorProrotypeMethods();\n\n/** @deprecated use a simple Array<T> */\nexport interface Vector<T = any> extends Array<T> {\n  length: number;\n\n  /**\n   * Access the value by index (Like an array)\n   *\n   * @deprecated use a simple Array<T>\n   */\n  get(index: number): T;\n\n  /**\n   * Set a value\n   *\n   * @deprecated use a simple Array<T>\n   */\n  set: (index: number, value: T) => void;\n\n  /**\n   * Adds the value to the vector\n   * Same as Array.push()\n   *\n   * @deprecated use a simple Array<T>\n   */\n  add: (value: T) => void;\n\n  /**\n   * Get the results as an array.\n   *\n   * @deprecated use a simple Array<T>\n   */\n  toArray(): T[];\n}\n\n/**\n * Apache arrow vectors are Read/Write\n *\n * @deprecated -- this is now part of the base Vector interface\n */\nexport interface ReadWriteVector<T = any> extends Vector<T> {}\n\n/**\n * Vector with standard manipulation functions\n *\n * @deprecated -- this is now part of the base Vector interface\n */\nexport interface MutableVector<T = any> extends ReadWriteVector<T> {}\n\n/**\n * This is an extremely inefficient Vector wrapper that allows vectors to\n * be treated as arrays.  We should avoid using this wrapper, but it is helpful\n * for a clean migration to arrays\n *\n * @deprecated\n */\nexport function makeArrayIndexableVector<T extends Vector>(v: T): T {\n  return new Proxy<T>(v, {\n    get(target: Vector, property: string, receiver: Vector) {\n      if (typeof property !== 'symbol') {\n        const idx = +property;\n        if (String(idx) === property) {\n          return target.get(idx);\n        }\n      }\n      return Reflect.get(target, property, receiver);\n    },\n    set(target: Vector, property: string, value: unknown, receiver: Vector) {\n      if (typeof property !== 'symbol') {\n        const idx = +property;\n        if (String(idx) === property) {\n          target.set(idx, value);\n          return true;\n        }\n      }\n      return Reflect.set(target, property, value, receiver);\n    },\n  });\n}\n","import { Vector } from '../types/vector';\n\n/** @deprecated use a simple Arrays */\nexport function vectorToArray<T>(v: Vector<T>): T[] {\n  const arr: T[] = Array(v.length);\n  for (let i = 0; i < v.length; i++) {\n    arr[i] = v.get(i);\n  }\n  return arr;\n}\n","import { Vector } from '../types';\n\nimport { vectorToArray } from './vectorToArray';\n\n/**\n * @public\n * @deprecated use a simple Arrays\n */\nexport abstract class FunctionalVector<T = any> implements Vector<T> {\n  abstract get length(): number;\n\n  abstract get(index: number): T;\n\n  // Implement \"iterator protocol\"\n  *iterator() {\n    for (let i = 0; i < this.length; i++) {\n      yield this.get(i);\n    }\n  }\n\n  set(index: number, value: T): void {\n    throw 'unsupported operation';\n  }\n\n  add(value: T): void {\n    throw 'unsupported operation';\n  }\n\n  push(...vals: T[]): number {\n    for (const v of vals) {\n      this.add(v);\n    }\n    return this.length;\n  }\n\n  // Implement \"iterable protocol\"\n  [Symbol.iterator]() {\n    return this.iterator();\n  }\n\n  forEach(iterator: (row: T, index: number, array: T[]) => void): void {\n    return vectorator(this).forEach(iterator);\n  }\n\n  map<V>(transform: (item: T, index: number, array: T[]) => V): V[] {\n    return vectorator(this).map(transform);\n  }\n\n  filter(predicate: (item: T, index: number, array: T[]) => boolean): T[] {\n    return vectorator(this).filter(predicate);\n  }\n\n  at(index: number): T | undefined {\n    return this.get(index);\n  }\n\n  toArray(): T[] {\n    return vectorToArray(this);\n  }\n\n  join(separator?: string | undefined): string {\n    return this.toArray().join(separator);\n  }\n\n  toJSON(): any {\n    return this.toArray();\n  }\n\n  //--------------------------\n  // Method not implemented\n  //--------------------------\n\n  [n: number]: T;\n\n  pop(): T | undefined {\n    throw new Error('Method not implemented.');\n  }\n  concat(...items: Array<ConcatArray<T>>): T[];\n  concat(...items: Array<T | ConcatArray<T>>): T[] {\n    throw new Error('Method not implemented.');\n  }\n  reverse(): T[] {\n    throw new Error('Method not implemented.');\n  }\n  shift(): T | undefined {\n    throw new Error('Method not implemented.');\n  }\n  sort(compareFn?: ((a: T, b: T) => number) | undefined): this {\n    throw new Error('Method not implemented.');\n  }\n  splice(start: number, deleteCount?: number | undefined): T[];\n  splice(start: number, deleteCount: number, ...items: T[]): T[] {\n    throw new Error('Method not implemented.');\n  }\n  unshift(...items: T[]): number {\n    throw new Error('Method not implemented.');\n  }\n  fill(value: T, start?: number | undefined, end?: number | undefined): this {\n    throw new Error('Method not implemented.');\n  }\n  copyWithin(target: number, start: number, end?: number | undefined): this {\n    throw new Error('Method not implemented.');\n  }\n  // Object not implemented\n  [Symbol.unscopables] = {};\n\n  //--------------------------------------------------------------------------------\n  // Delegated Array function -- these will not be efficient :grimmice:\n  //--------------------------------------------------------------------------------\n\n  slice(start?: number | undefined, end?: number | undefined): T[] {\n    return this.toArray().slice(start, end);\n  }\n  indexOf(searchElement: T, fromIndex?: number | undefined): number {\n    return this.toArray().indexOf(searchElement, fromIndex);\n  }\n  lastIndexOf(searchElement: T, fromIndex?: number | undefined): number {\n    return this.toArray().lastIndexOf(searchElement, fromIndex);\n  }\n  every<S extends T>(predicate: (value: T, index: number, array: T[]) => value is S, thisArg?: any): this is S[];\n  every(predicate: (value: T, index: number, array: T[]) => unknown, thisArg?: any): boolean;\n  every(predicate: any, thisArg?: unknown): boolean {\n    return this.toArray().every(predicate, thisArg);\n  }\n  some(predicate: (value: T, index: number, array: T[]) => unknown, thisArg?: any): boolean {\n    return this.toArray().some(predicate, thisArg);\n  }\n  reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T): T;\n  reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T;\n  reduce<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U, initialValue: U): U;\n  reduce(callbackfn: unknown, initialValue?: unknown): T {\n    throw new Error('Method not implemented.');\n  }\n  reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T): T;\n  reduceRight(\n    callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T,\n    initialValue: T\n  ): T;\n  reduceRight<U>(\n    callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U,\n    initialValue: U\n  ): U;\n  reduceRight(callbackfn: unknown, initialValue?: unknown): T {\n    throw new Error('Method not implemented.');\n  }\n  find<S extends T>(\n    predicate: (this: void, value: T, index: number, obj: T[]) => value is S,\n    thisArg?: any\n  ): S | undefined;\n  find(predicate: (value: T, index: number, obj: T[]) => unknown, thisArg?: any): T | undefined {\n    return this.toArray().find(predicate, thisArg);\n  }\n  findIndex(predicate: (value: T, index: number, obj: T[]) => unknown, thisArg?: any): number {\n    return this.toArray().findIndex(predicate, thisArg);\n  }\n  entries(): IterableIterator<[number, T]> {\n    return this.toArray().entries();\n  }\n  keys(): IterableIterator<number> {\n    return this.toArray().keys();\n  }\n  values(): IterableIterator<T> {\n    return this.toArray().values();\n  }\n  includes(searchElement: T, fromIndex?: number | undefined): boolean {\n    return this.toArray().includes(searchElement, fromIndex);\n  }\n  flatMap<U, This = undefined>(\n    callback: (this: This, value: T, index: number, array: T[]) => U | readonly U[],\n    thisArg?: This | undefined\n  ): U[] {\n    return this.toArray().flatMap(callback, thisArg);\n  }\n  flat<A, D extends number = 1>(this: A, depth?: D | undefined): Array<FlatArray<A, D>> {\n    throw new Error('Method not implemented.');\n  }\n}\n\nconst emptyarray: any[] = [];\n\n/**\n * Use functional programming with your vector\n *\n * @deprecated use a simple Arrays\n */\nexport function vectorator<T>(vector: Vector<T>) {\n  return {\n    *[Symbol.iterator]() {\n      for (let i = 0; i < vector.length; i++) {\n        yield vector.get(i);\n      }\n    },\n\n    forEach(iterator: (row: T, index: number, array: T[]) => void): void {\n      for (let i = 0; i < vector.length; i++) {\n        iterator(vector.get(i), i, emptyarray);\n      }\n    },\n\n    map<V>(transform: (item: T, index: number, array: T[]) => V): V[] {\n      const result: V[] = [];\n      for (let i = 0; i < vector.length; i++) {\n        result.push(transform(vector.get(i), i, emptyarray));\n      }\n      return result;\n    },\n\n    /** Add a predicate where you return true if it should *keep* the value */\n    filter(predicate: (item: T, index: number, array: T[]) => boolean): T[] {\n      const result: T[] = [];\n      let count = 0;\n      for (const val of this) {\n        if (predicate(val, count++, emptyarray)) {\n          result.push(val);\n        }\n      }\n      return result;\n    },\n  };\n}\n","import { makeArrayIndexableVector } from '../types';\n\nimport { FunctionalVector } from './FunctionalVector';\n\ninterface CircularOptions<T> {\n  buffer?: T[];\n  append?: 'head' | 'tail';\n  capacity?: number;\n}\n\n/**\n * Circular vector uses a single buffer to capture a stream of values\n * overwriting the oldest value on add.\n *\n * This supports adding to the 'head' or 'tail' and will grow the buffer\n * to match a configured capacity.\n *\n * @public\n * @deprecated use a simple Arrays\n */\nexport class CircularVector<T = any> extends FunctionalVector<T> {\n  private buffer: T[];\n  private index: number;\n  private capacity: number;\n  private tail: boolean;\n\n  constructor(options: CircularOptions<T>) {\n    super();\n\n    this.buffer = options.buffer || [];\n    this.capacity = this.buffer.length;\n    this.tail = 'head' !== options.append;\n    this.index = 0;\n\n    this.add = this.getAddFunction();\n    if (options.capacity) {\n      this.setCapacity(options.capacity);\n    }\n    return makeArrayIndexableVector(this);\n  }\n\n  /**\n   * This gets the appropriate add function depending on the buffer state:\n   *  * head vs tail\n   *  * growing buffer vs overwriting values\n   */\n  private getAddFunction(): (value: T) => void {\n    // When we are not at capacity, it should actually modify the buffer\n    if (this.capacity > this.buffer.length) {\n      if (this.tail) {\n        return (value: T) => {\n          this.buffer.push(value);\n          if (this.buffer.length >= this.capacity) {\n            this.add = this.getAddFunction();\n          }\n        };\n      } else {\n        return (value: T) => {\n          this.buffer.unshift(value);\n          if (this.buffer.length >= this.capacity) {\n            this.add = this.getAddFunction();\n          }\n        };\n      }\n    }\n\n    if (this.tail) {\n      return (value: T) => {\n        this.buffer[this.index] = value;\n        this.index = (this.index + 1) % this.buffer.length;\n      };\n    }\n\n    // Append values to the head\n    return (value: T) => {\n      let idx = this.index - 1;\n      if (idx < 0) {\n        idx = this.buffer.length - 1;\n      }\n      this.buffer[idx] = value;\n      this.index = idx;\n    };\n  }\n\n  setCapacity(v: number) {\n    if (this.capacity === v) {\n      return;\n    }\n    // Make a copy so it is in order and new additions can be at the head or tail\n    const copy = this.toArray();\n    if (v > this.length) {\n      this.buffer = copy;\n    } else if (v < this.capacity) {\n      // Shrink the buffer\n      const delta = this.length - v;\n      if (this.tail) {\n        this.buffer = copy.slice(delta, copy.length); // Keep last items\n      } else {\n        this.buffer = copy.slice(0, copy.length - delta); // Keep first items\n      }\n    }\n    this.capacity = v;\n    this.index = 0;\n    this.add = this.getAddFunction();\n  }\n\n  setAppendMode(mode: 'head' | 'tail') {\n    const tail = 'head' !== mode;\n    if (tail !== this.tail) {\n      this.buffer = this.toArray().reverse();\n      this.index = 0;\n      this.tail = tail;\n      this.add = this.getAddFunction();\n    }\n  }\n\n  reverse() {\n    return this.buffer.reverse();\n  }\n\n  get(index: number) {\n    return this.buffer[(index + this.index) % this.buffer.length];\n  }\n\n  set(index: number, value: T) {\n    this.buffer[(index + this.index) % this.buffer.length] = value;\n  }\n\n  get length() {\n    return this.buffer.length;\n  }\n}\n","import { guessFieldTypeFromValue } from '../dataframe/processDataFrame';\nimport { Field, FieldType } from '../types/dataFrame';\n\nexport function makeFieldParser(value: unknown, field: Field) {\n  if (!field.type) {\n    if (field.name === 'time' || field.name === 'Time') {\n      field.type = FieldType.time;\n    } else {\n      field.type = guessFieldTypeFromValue(value);\n    }\n  }\n\n  if (field.type === FieldType.number) {\n    return (value: string) => {\n      return parseFloat(value);\n    };\n  }\n\n  // Will convert anything that starts with \"T\" to true\n  if (field.type === FieldType.boolean) {\n    return (value: string) => {\n      return !(value[0] === 'F' || value[0] === 'f' || value[0] === '0');\n    };\n  }\n\n  // Just pass the string back\n  return (value: string) => value;\n}\n","import { isString } from 'lodash';\n\nimport { QueryResultMeta } from '../types/data';\nimport { Field, DataFrame, DataFrameDTO, FieldDTO, FieldType } from '../types/dataFrame';\nimport { makeFieldParser } from '../utils/fieldParser';\nimport { FunctionalVector } from '../vector/FunctionalVector';\n\nimport { guessFieldTypeFromValue, guessFieldTypeForField, toDataFrameDTO } from './processDataFrame';\n\n/** @deprecated */\nexport type MutableField<T = any> = Field<T>;\n\n/** @deprecated */\ntype MutableVectorCreator = (buffer?: any[]) => any[];\n\nexport const MISSING_VALUE = undefined; // Treated as connected in new graph panel\n\n/**\n * MutableDataFrame is a complex wrapper around the DataFrame interface\n *\n * @deprecated use standard DataFrame, or create one with PartialDataFrame\n */\nexport class MutableDataFrame<T = any> extends FunctionalVector<T> implements DataFrame {\n  name?: string;\n  refId?: string;\n  meta?: QueryResultMeta;\n  fields: MutableField[] = [];\n\n  private first: any[] = [];\n  private creator: MutableVectorCreator;\n\n  constructor(source?: DataFrame | DataFrameDTO, creator?: MutableVectorCreator) {\n    super();\n\n    // This creates the underlying storage buffers\n    this.creator = creator\n      ? creator\n      : (buffer?: any[]) => {\n          return buffer ?? [];\n        };\n\n    // Copy values from\n    if (source) {\n      const { name, refId, meta, fields } = source;\n      if (name) {\n        this.name = name;\n      }\n      if (refId) {\n        this.refId = refId;\n      }\n      if (meta) {\n        this.meta = meta;\n      }\n      if (fields) {\n        for (const f of fields) {\n          this.addField(f);\n        }\n      }\n    }\n\n    // Get Length to show up if you use spread\n    Object.defineProperty(this, 'length', {\n      enumerable: true,\n      get: () => {\n        return this.first.length;\n      },\n    });\n  }\n\n  // Defined for Vector interface\n  get length() {\n    return this.first.length;\n  }\n\n  addFieldFor(value: unknown, name?: string): Field {\n    return this.addField({\n      name: name || '', // Will be filled in\n      type: guessFieldTypeFromValue(value),\n    });\n  }\n\n  addField(f: Field | FieldDTO, startLength?: number): Field {\n    let buffer: any[] | undefined = undefined;\n\n    if (f.values) {\n      buffer = f.values;\n    }\n\n    let type = f.type;\n\n    if (!type && ('time' === f.name || 'Time' === f.name)) {\n      type = FieldType.time;\n    } else {\n      if (!type && buffer && buffer.length) {\n        type = guessFieldTypeFromValue(buffer[0]);\n      }\n      if (!type) {\n        type = FieldType.other;\n      }\n    }\n\n    // Make sure it has a name\n    let name = f.name;\n    if (!name) {\n      name = `Field ${this.fields.length + 1}`;\n    }\n\n    const field: Field = {\n      ...f,\n      name,\n      type,\n      config: f.config || {},\n      values: this.creator(buffer),\n    };\n\n    if (type === FieldType.other) {\n      type = guessFieldTypeForField(field);\n      if (type) {\n        field.type = type;\n      }\n    }\n\n    this.fields.push(field);\n    this.first = this.fields[0].values;\n\n    // Make sure the field starts with a given length\n    if (startLength) {\n      while (field.values.length < startLength) {\n        field.values.push(MISSING_VALUE);\n      }\n    } else {\n      this.validate();\n    }\n\n    return field;\n  }\n\n  validate() {\n    // Make sure all arrays are the same length\n    const length = this.fields.reduce((v: number, f) => {\n      return Math.max(v, f.values.length);\n    }, 0);\n\n    // Add empty elements until everything matches\n    for (const field of this.fields) {\n      while (field.values.length !== length) {\n        field.values.push(MISSING_VALUE);\n      }\n    }\n  }\n\n  private parsers: Map<Field, (v: string) => any> | undefined = undefined;\n\n  /**\n   * @deprecated unclear if this is actually used\n   */\n  setParser(field: Field, parser: (v: string) => any) {\n    if (!this.parsers) {\n      this.parsers = new Map<Field, (v: string) => any>();\n    }\n    this.parsers.set(field, parser);\n    return parser;\n  }\n\n  private parseValue(field: Field, v: string) {\n    let p = this.parsers?.get(field);\n    if (!p) {\n      p = this.setParser(field, makeFieldParser(v, field));\n    }\n    return p(v);\n  }\n\n  /**\n   * This will add each value to the corresponding column\n   */\n  appendRow(row: unknown[]) {\n    // Add any extra columns\n    for (let i = this.fields.length; i < row.length; i++) {\n      this.addField({\n        name: `Field ${i + 1}`,\n        type: guessFieldTypeFromValue(row[i]),\n      });\n    }\n\n    // The first line may change the field types\n    if (this.length < 1) {\n      for (let i = 0; i < this.fields.length; i++) {\n        const f = this.fields[i];\n        if (!f.type || f.type === FieldType.other) {\n          f.type = guessFieldTypeFromValue(row[i]);\n        }\n      }\n    }\n\n    for (let i = 0; i < this.fields.length; i++) {\n      const f = this.fields[i];\n      let v = row[i];\n      if (f.type !== FieldType.string && isString(v)) {\n        v = this.parseValue(f, v);\n      }\n      f.values.push(v);\n    }\n  }\n\n  /** support standard array push syntax */\n  push(...vals: T[]): number {\n    for (const v of vals) {\n      this.add(v);\n    }\n    return this.length;\n  }\n\n  reverse() {\n    for (const field of this.fields) {\n      field.values.reverse();\n    }\n    return this;\n  }\n\n  /**\n   * Add values from an object to corresponding fields. Similar to appendRow but does not create new fields.\n   */\n  add(value: T): void {\n    // Will add one value for every field\n    const obj = value as any;\n    for (const field of this.fields) {\n      let val = obj[field.name];\n\n      if (field.type !== FieldType.string && isString(val)) {\n        val = this.parseValue(field, val);\n      }\n\n      if (val === undefined) {\n        val = MISSING_VALUE;\n      }\n\n      field.values.push(val);\n    }\n  }\n\n  set(index: number, value: T) {\n    if (index > this.length) {\n      throw new Error('Unable to set value beyond current length');\n    }\n\n    const obj = (value as any) || {};\n    for (const field of this.fields) {\n      field.values[index] = obj[field.name];\n    }\n  }\n\n  /**\n   * Get an object with a property for each field in the DataFrame\n   */\n  get(idx: number): T {\n    const v: any = {};\n    for (const field of this.fields) {\n      v[field.name] = field.values[idx];\n    }\n    return v as T;\n  }\n\n  /**\n   * The simplified JSON values used in JSON.stringify()\n   */\n  toJSON() {\n    return toDataFrameDTO(this);\n  }\n}\n","import { CircularVector } from '../vector/CircularVector';\n\nimport { MutableDataFrame } from './MutableDataFrame';\n\ninterface CircularOptions {\n  append?: 'head' | 'tail';\n  capacity?: number;\n}\n\n/**\n * This dataframe can have values constantly added, and will never\n * exceed the given capacity\n */\nexport class CircularDataFrame<T = any> extends MutableDataFrame<T> {\n  constructor(options: CircularOptions) {\n    super(undefined, (buffer) => {\n      return new CircularVector({\n        ...options,\n        buffer,\n      });\n    });\n  }\n}\n","// Libraries\nimport { defaults } from 'lodash';\nimport Papa, { ParseConfig, Parser, ParseResult } from 'papaparse';\n\n// Types\nimport { MutableDataFrame } from '../dataframe/MutableDataFrame';\nimport { guessFieldTypeFromValue } from '../dataframe/processDataFrame';\nimport { getFieldDisplayName } from '../field';\nimport { DataFrame, Field, FieldConfig, FieldType } from '../types';\nimport { formattedValueToString } from '../valueFormats';\n\nexport enum CSVHeaderStyle {\n  full,\n  name,\n  none,\n}\n\n// Subset of all parse options\nexport interface CSVConfig {\n  delimiter?: string; // default: \",\"\n  newline?: string; // default: \"\\r\\n\"\n  quoteChar?: string; // default: '\"'\n  encoding?: string; // default: \"\",\n  useExcelHeader?: boolean; // default: false\n  headerStyle?: CSVHeaderStyle;\n}\n\nexport interface CSVParseCallbacks {\n  /**\n   * Get a callback before any rows are processed\n   * This can return a modified table to force any\n   * Column configurations\n   */\n  onHeader: (fields: Field[]) => void;\n\n  // Called after each row is read\n  onRow: (row: string[]) => void;\n}\n\nexport interface CSVOptions {\n  config?: CSVConfig;\n  callback?: CSVParseCallbacks;\n}\n\nexport function readCSV(csv: string, options?: CSVOptions): DataFrame[] {\n  return new CSVReader(options).readCSV(csv);\n}\n\nenum ParseState {\n  Starting,\n  InHeader,\n  ReadingRows,\n}\n\nexport class CSVReader {\n  config: CSVConfig;\n  callback?: CSVParseCallbacks;\n\n  state: ParseState;\n  data: MutableDataFrame[];\n  current: MutableDataFrame;\n\n  constructor(options?: CSVOptions) {\n    if (!options) {\n      options = {};\n    }\n    this.config = options.config || {};\n    this.callback = options.callback;\n\n    this.current = new MutableDataFrame({ fields: [] });\n    this.state = ParseState.Starting;\n    this.data = [];\n  }\n\n  // PapaParse callback on each line\n  private chunk = (results: ParseResult<string[]>, parser: Parser): void => {\n    for (let i = 0; i < results.data.length; i++) {\n      const line = results.data[i];\n      if (line.length < 1) {\n        continue;\n      }\n      const first = line[0]; // null or value, papaparse does not return ''\n      if (first) {\n        // Comment or header queue\n        if (first.startsWith('#')) {\n          // Look for special header column\n          // #{columkey}#a,b,c\n          const idx = first.indexOf('#', 2);\n          if (idx > 0) {\n            const k = first.slice(1, idx);\n            const isName = 'name' === k;\n\n            // Simple object used to check if headers match\n            const headerKeys: FieldConfig = {\n              unit: '#',\n            };\n\n            // Check if it is a known/supported column\n            if (isName || headerKeys.hasOwnProperty(k)) {\n              // Starting a new table after reading rows\n              if (this.state === ParseState.ReadingRows) {\n                this.current = new MutableDataFrame({ fields: [] });\n                this.data.push(this.current);\n              }\n\n              const v = first.slice(idx + 1);\n              if (isName) {\n                this.current.addFieldFor(undefined, v);\n                for (let j = 1; j < line.length; j++) {\n                  this.current.addFieldFor(undefined, line[j]);\n                }\n              } else {\n                const { fields } = this.current;\n                for (let j = 0; j < fields.length; j++) {\n                  if (!fields[j].config) {\n                    fields[j].config = {};\n                  }\n                  const disp = fields[j].config as any; // any lets name lookup\n                  disp[k] = j === 0 ? v : line[j];\n                }\n              }\n\n              this.state = ParseState.InHeader;\n              continue;\n            }\n          } else if (this.state === ParseState.Starting) {\n            this.state = ParseState.InHeader;\n            continue;\n          }\n          // Ignore comment lines\n          continue;\n        }\n\n        if (this.state === ParseState.Starting) {\n          const type = guessFieldTypeFromValue(first);\n          if (type === FieldType.string) {\n            for (const s of line) {\n              this.current.addFieldFor(undefined, s);\n            }\n            this.state = ParseState.InHeader;\n            continue;\n          }\n          this.state = ParseState.InHeader; // fall through to read rows\n        }\n      }\n\n      // Add the current results to the data\n      if (this.state !== ParseState.ReadingRows) {\n        // anything???\n      }\n\n      this.state = ParseState.ReadingRows;\n\n      // Make sure column structure is valid\n      if (line.length > this.current.fields.length) {\n        const { fields } = this.current;\n        for (let f = fields.length; f < line.length; f++) {\n          this.current.addFieldFor(line[f]);\n        }\n        if (this.callback) {\n          this.callback.onHeader(this.current.fields);\n        }\n      }\n\n      this.current.appendRow(line);\n      if (this.callback) {\n        // // Send the header after we guess the type\n        // if (this.series.rows.length === 0) {\n        //   this.callback.onHeader(this.series);\n        // }\n        this.callback.onRow(line);\n      }\n    }\n  };\n\n  readCSV(text: string): MutableDataFrame[] {\n    this.current = new MutableDataFrame({ fields: [] });\n    this.data = [this.current];\n\n    const papacfg = {\n      ...this.config,\n      dynamicTyping: false,\n      skipEmptyLines: true,\n      comments: false, // Keep comment lines\n      chunk: this.chunk,\n    } as ParseConfig;\n\n    Papa.parse(text, papacfg);\n\n    return this.data;\n  }\n}\n\ntype FieldWriter = (value: unknown) => string;\n\nfunction writeValue(value: unknown, config: CSVConfig): string {\n  if (value === null || value === undefined) {\n    return '';\n  }\n  const str = value.toString();\n  if (str.includes('\"')) {\n    // Escape the double quote characters\n    return config.quoteChar + str.replace(/\"/gi, '\"\"') + config.quoteChar;\n  }\n  if (str.includes('\\n') || (config.delimiter && str.includes(config.delimiter))) {\n    return config.quoteChar + str + config.quoteChar;\n  }\n  return str;\n}\n\nfunction makeFieldWriter(field: Field, config: CSVConfig): FieldWriter {\n  if (field.display) {\n    return (value: unknown) => {\n      const displayValue = field.display!(value);\n      return writeValue(formattedValueToString(displayValue), config);\n    };\n  }\n\n  return (value: unknown) => writeValue(value, config);\n}\n\nfunction getHeaderLine(key: string, fields: Field[], config: CSVConfig): string {\n  const isName = 'name' === key;\n  const isType = 'type' === key;\n\n  for (const f of fields) {\n    const display = f.config;\n    if (isName || isType || (display && display.hasOwnProperty(key))) {\n      let line = '#' + key + '#';\n      for (let i = 0; i < fields.length; i++) {\n        if (i > 0) {\n          line = line + config.delimiter;\n        }\n\n        let v = fields[i].name;\n        if (isType) {\n          v = fields[i].type;\n        } else if (isName) {\n          // already name\n        } else {\n          v = (fields[i].config as any)[key];\n        }\n        if (v) {\n          line = line + writeValue(v, config);\n        }\n      }\n      return line + config.newline;\n    }\n  }\n  return '';\n}\n\nfunction getLocaleDelimiter(): string {\n  const arr = ['x', 'y'];\n  if (arr.toLocaleString) {\n    return arr.toLocaleString().charAt(1);\n  }\n  return ',';\n}\n\nexport function toCSV(data: DataFrame[], config?: CSVConfig): string {\n  if (!data) {\n    return '';\n  }\n\n  config = defaults(config, {\n    delimiter: getLocaleDelimiter(),\n    newline: '\\r\\n',\n    quoteChar: '\"',\n    encoding: '',\n    headerStyle: CSVHeaderStyle.name,\n    useExcelHeader: false,\n  });\n  let csv = config.useExcelHeader ? `sep=${config.delimiter}${config.newline}` : '';\n\n  for (let s = 0; s < data.length; s++) {\n    const series = data[s];\n    const { fields } = series;\n\n    // ignore frames with no fields\n    if (fields.length === 0) {\n      continue;\n    }\n\n    if (config.headerStyle === CSVHeaderStyle.full) {\n      csv =\n        csv +\n        getHeaderLine('name', fields, config) +\n        getHeaderLine('type', fields, config) +\n        getHeaderLine('unit', fields, config) +\n        getHeaderLine('dateFormat', fields, config);\n    } else if (config.headerStyle === CSVHeaderStyle.name) {\n      for (let i = 0; i < fields.length; i++) {\n        if (i > 0) {\n          csv += config.delimiter;\n        }\n        csv += `\"${getFieldDisplayName(fields[i], series).replace(/\"/g, '\"\"')}\"`;\n      }\n      csv += config.newline;\n    }\n\n    const length = fields[0].values.length;\n\n    if (length > 0) {\n      const writers = fields.map((field) => makeFieldWriter(field, config!));\n      for (let i = 0; i < length; i++) {\n        for (let j = 0; j < fields.length; j++) {\n          if (j > 0) {\n            csv = csv + config.delimiter;\n          }\n\n          const v = fields[j].values[i];\n          if (v !== null) {\n            csv = csv + writers[j](v);\n          }\n        }\n\n        if (i !== length - 1) {\n          csv = csv + config.newline;\n        }\n      }\n    }\n\n    if (s !== data.length - 1) {\n      csv = csv + config.newline;\n    }\n  }\n\n  return csv;\n}\n","import { LogLevel } from '@grafana/data';\n\nlet index = 0;\n\nexport function getRandomLogLevel(): LogLevel {\n  const v = Math.random();\n  if (v > 0.9) {\n    return LogLevel.critical;\n  }\n  if (v > 0.8) {\n    return LogLevel.error;\n  }\n  if (v > 0.7) {\n    return LogLevel.warning;\n  }\n  if (v > 0.4) {\n    return LogLevel.info;\n  }\n  if (v > 0.3) {\n    return LogLevel.debug;\n  }\n  if (v > 0.1) {\n    return LogLevel.trace;\n  }\n  return LogLevel.unknown;\n}\n\nexport function getNextWord() {\n  index = (index + Math.floor(Math.random() * 5)) % words.length;\n  return words[index];\n}\n\nexport function getRandomLine(length = 60) {\n  let line = getNextWord();\n  while (line.length < length) {\n    line += ' ' + getNextWord();\n  }\n  return line;\n}\n\nconst words = [\n  'At',\n  'vero',\n  'eos',\n  'et',\n  'accusamus',\n  'et',\n  'iusto',\n  'odio',\n  'dignissimos',\n  'ducimus',\n  'qui',\n  'blanditiis',\n  'praesentium',\n  'voluptatum',\n  'deleniti',\n  'atque',\n  'corrupti',\n  'quos',\n  'dolores',\n  'et',\n  'quas',\n  'molestias',\n  'excepturi',\n  'sint',\n  'occaecati',\n  'cupiditate',\n  'non',\n  'provident',\n  'similique',\n  'sunt',\n  'in',\n  'culpa',\n  'qui',\n  'officia',\n  'deserunt',\n  'mollitia',\n  'animi',\n  'id',\n  'est',\n  'laborum',\n  'et',\n  'dolorum',\n  'fuga',\n  'Et',\n  'harum',\n  'quidem',\n  'rerum',\n  'facilis',\n  'est',\n  'et',\n  'expedita',\n  'distinctio',\n  'Nam',\n  'libero',\n  'tempore',\n  'cum',\n  'soluta',\n  'nobis',\n  'est',\n  'eligendi',\n  'optio',\n  'cumque',\n  'nihil',\n  'impedit',\n  'quo',\n  'minus',\n  'id',\n  'quod',\n  'maxime',\n  'placeat',\n  'facere',\n  'possimus',\n  'omnis',\n  'voluptas',\n  'assumenda',\n  'est',\n  'omnis',\n  'dolor',\n  'repellendus',\n  'Temporibus',\n  'autem',\n  'quibusdam',\n  'et',\n  'aut',\n  'officiis',\n  'debitis',\n  'aut',\n  'rerum',\n  'necessitatibus',\n  'saepe',\n  'eveniet',\n  'ut',\n  'et',\n  'voluptates',\n  'repudiandae',\n  'sint',\n  'et',\n  'molestiae',\n  'non',\n  'recusandae',\n  'Itaque',\n  'earum',\n  'rerum',\n  'hic',\n  'tenetur',\n  'a',\n  'sapiente',\n  'delectus',\n  'ut',\n  'aut',\n  'reiciendis',\n  'voluptatibus',\n  'maiores',\n  'alias',\n  'consequatur',\n  'aut',\n  'perferendis',\n  'doloribus',\n  'asperiores',\n  'repellat',\n];\n","import { defaults } from 'lodash';\nimport { Observable } from 'rxjs';\n\nimport {\n  DataQueryRequest,\n  DataQueryResponse,\n  FieldType,\n  CircularDataFrame,\n  CSVReader,\n  Field,\n  LoadingState,\n  DataFrameSchema,\n  DataFrameData,\n  StreamingDataFrame,\n} from '@grafana/data';\n\nimport { getRandomLine } from './LogIpsum';\nimport { TestData, StreamingQuery } from './dataquery.gen';\n\nexport const defaultStreamQuery: StreamingQuery = {\n  type: 'signal',\n  speed: 250, // ms\n  spread: 3.5,\n  noise: 2.2,\n  bands: 1,\n};\n\nexport function runStream(target: TestData, req: DataQueryRequest<TestData>): Observable<DataQueryResponse> {\n  const query = defaults(target.stream, defaultStreamQuery);\n  if ('signal' === query.type) {\n    return runSignalStream(target, query, req);\n  }\n  if ('logs' === query.type) {\n    return runLogsStream(target, query, req);\n  }\n  if ('fetch' === query.type) {\n    return runFetchStream(target, query, req);\n  }\n  throw new Error(`Unknown Stream Type: ${query.type}`);\n}\n\nexport function runSignalStream(\n  target: TestData,\n  query: StreamingQuery,\n  req: DataQueryRequest<TestData>\n): Observable<DataQueryResponse> {\n  return new Observable<DataQueryResponse>((subscriber) => {\n    const streamId = `signal-${req.panelId}-${target.refId}`;\n    const maxDataPoints = req.maxDataPoints || 1000;\n\n    const schema: DataFrameSchema = {\n      refId: target.refId,\n      fields: [\n        { name: 'time', type: FieldType.time },\n        { name: target.alias ?? 'value', type: FieldType.number },\n      ],\n    };\n\n    const { spread, speed, bands = 0, noise } = query;\n    for (let i = 0; i < bands; i++) {\n      const suffix = bands > 1 ? ` ${i + 1}` : '';\n      schema.fields.push({ name: 'Min' + suffix, type: FieldType.number });\n      schema.fields.push({ name: 'Max' + suffix, type: FieldType.number });\n    }\n\n    const frame = StreamingDataFrame.fromDataFrameJSON({ schema }, { maxLength: maxDataPoints });\n\n    let value = Math.random() * 100;\n    let timeoutId: ReturnType<typeof setTimeout>;\n    let lastSent = -1;\n\n    const addNextRow = (time: number) => {\n      value += (Math.random() - 0.5) * spread;\n\n      const data: DataFrameData = {\n        values: [[time], [value]],\n      };\n\n      let min = value;\n      let max = value;\n\n      for (let i = 0; i < bands; i++) {\n        min = min - Math.random() * noise;\n        max = max + Math.random() * noise;\n\n        data.values.push([min]);\n        data.values.push([max]);\n      }\n\n      const event = { data };\n      return frame.push(event);\n    };\n\n    // Fill the buffer on init\n    if (true) {\n      let time = Date.now() - maxDataPoints * speed;\n      for (let i = 0; i < maxDataPoints; i++) {\n        addNextRow(time);\n        time += speed;\n      }\n    }\n\n    const pushNextEvent = () => {\n      lastSent = Date.now();\n      addNextRow(lastSent);\n      subscriber.next({\n        data: [frame],\n        key: streamId,\n        state: LoadingState.Streaming,\n      });\n      timeoutId = setTimeout(pushNextEvent, speed);\n    };\n\n    // Send first event in 5ms\n    setTimeout(pushNextEvent, 5);\n\n    return () => {\n      console.log('unsubscribing to stream ' + streamId);\n      clearTimeout(timeoutId);\n    };\n  });\n}\n\nexport function runLogsStream(\n  target: TestData,\n  query: StreamingQuery,\n  req: DataQueryRequest<TestData>\n): Observable<DataQueryResponse> {\n  return new Observable<DataQueryResponse>((subscriber) => {\n    const streamId = `logs-${req.panelId}-${target.refId}`;\n    const maxDataPoints = req.maxDataPoints || 1000;\n\n    const data = new CircularDataFrame({\n      append: 'tail',\n      capacity: maxDataPoints,\n    });\n    data.refId = target.refId;\n    data.name = target.alias || 'Logs ' + target.refId;\n    data.addField({ name: 'line', type: FieldType.string });\n    data.addField({ name: 'time', type: FieldType.time });\n    data.meta = { preferredVisualisationType: 'logs' };\n\n    const { speed } = query;\n\n    let timeoutId: ReturnType<typeof setTimeout>;\n\n    const pushNextEvent = () => {\n      data.fields[0].values.push(getRandomLine());\n      data.fields[1].values.push(Date.now());\n\n      subscriber.next({\n        data: [data],\n        key: streamId,\n      });\n\n      timeoutId = setTimeout(pushNextEvent, speed);\n    };\n\n    // Send first event in 5ms\n    setTimeout(pushNextEvent, 5);\n\n    return () => {\n      console.log('unsubscribing to stream ' + streamId);\n      clearTimeout(timeoutId);\n    };\n  });\n}\n\nexport function runFetchStream(\n  target: TestData,\n  query: StreamingQuery,\n  req: DataQueryRequest<TestData>\n): Observable<DataQueryResponse> {\n  return new Observable<DataQueryResponse>((subscriber) => {\n    const streamId = `fetch-${req.panelId}-${target.refId}`;\n    const maxDataPoints = req.maxDataPoints || 1000;\n\n    let data = new CircularDataFrame({\n      append: 'tail',\n      capacity: maxDataPoints,\n    });\n    data.refId = target.refId;\n    data.name = target.alias || 'Fetch ' + target.refId;\n\n    let reader: ReadableStreamDefaultReader<Uint8Array>;\n    const csv = new CSVReader({\n      callback: {\n        onHeader: (fields: Field[]) => {\n          // Clear any existing fields\n          if (data.fields.length) {\n            data = new CircularDataFrame({\n              append: 'tail',\n              capacity: maxDataPoints,\n            });\n            data.refId = target.refId;\n            data.name = 'Fetch ' + target.refId;\n          }\n          for (const field of fields) {\n            data.addField(field);\n          }\n        },\n        onRow: (row) => {\n          data.add(row);\n        },\n      },\n    });\n\n    const processChunk = (value: ReadableStreamReadResult<Uint8Array>): any => {\n      if (value.value) {\n        const text = new TextDecoder().decode(value.value);\n        csv.readCSV(text);\n      }\n\n      subscriber.next({\n        data: [data],\n        key: streamId,\n        state: value.done ? LoadingState.Done : LoadingState.Streaming,\n      });\n\n      if (value.done) {\n        console.log('Finished stream');\n        subscriber.complete(); // necessary?\n        return;\n      }\n\n      return reader.read().then(processChunk);\n    };\n\n    if (!query.url) {\n      throw new Error('query.url is not defined');\n    }\n\n    fetch(new Request(query.url)).then((response) => {\n      if (response.body) {\n        reader = response.body.getReader();\n        reader.read().then(processChunk);\n      }\n    });\n\n    return () => {\n      // Cancel fetch?\n      console.log('unsubscribing to stream ' + streamId);\n    };\n  });\n}\n","import React, { FormEvent, useMemo } from 'react';\nimport { useAsync } from 'react-use';\n\nimport { QueryEditorProps, SelectableValue } from '@grafana/data';\nimport { selectors as editorSelectors } from '@grafana/e2e-selectors';\nimport { InlineField, InlineFieldRow, InlineSwitch, Input, Select, Icon, TextArea } from '@grafana/ui';\n\nimport { RandomWalkEditor, StreamingClientEditor } from './components';\nimport { CSVContentEditor } from './components/CSVContentEditor';\nimport { CSVFileEditor } from './components/CSVFileEditor';\nimport { CSVWavesEditor } from './components/CSVWaveEditor';\nimport ErrorEditor from './components/ErrorEditor';\nimport { GrafanaLiveEditor } from './components/GrafanaLiveEditor';\nimport { NodeGraphEditor } from './components/NodeGraphEditor';\nimport { PredictablePulseEditor } from './components/PredictablePulseEditor';\nimport { RawFrameEditor } from './components/RawFrameEditor';\nimport { SimulationQueryEditor } from './components/SimulationQueryEditor';\nimport { USAQueryEditor, usaQueryModes } from './components/USAQueryEditor';\nimport { defaultCSVWaveQuery, defaultPulseQuery, defaultQuery } from './constants';\nimport { CSVWave, NodesQuery, TestData, TestDataQueryType, USAQuery } from './dataquery.gen';\nimport { TestDataDataSource } from './datasource';\nimport { defaultStreamQuery } from './runStreams';\n\nconst endpoints = [\n  { value: 'datasources', label: 'Data Sources' },\n  { value: 'search', label: 'Search' },\n  { value: 'annotations', label: 'Annotations' },\n];\n\nconst selectors = editorSelectors.components.DataSource.TestData.QueryTab;\n\nexport interface EditorProps {\n  onChange: (value: any) => void;\n  query: TestData;\n  ds: TestDataDataSource;\n}\n\nexport type Props = QueryEditorProps<TestDataDataSource, TestData>;\n\nexport const QueryEditor = ({ query, datasource, onChange, onRunQuery }: Props) => {\n  query = { ...defaultQuery, ...query };\n\n  const { loading, value: scenarioList } = useAsync(async () => {\n    // migrate manual_entry (unusable since 7, removed in 8)\n    if (query.scenarioId === TestDataQueryType.ManualEntry && query.points) {\n      let csvContent = 'Time,Value\\n';\n      for (const point of query.points) {\n        csvContent += `${point[1]},${point[0]}\\n`;\n      }\n      onChange({\n        refId: query.refId,\n        datasource: query.datasource,\n        scenarioId: TestDataQueryType.CSVContent,\n        csvContent,\n      });\n    }\n\n    const vals = await datasource.getScenarios();\n    const hideAlias = [TestDataQueryType.Simulation, TestDataQueryType.Annotations];\n    return vals.map((v) => ({\n      ...v,\n      hideAliasField: hideAlias.includes(v.id as TestDataQueryType),\n    }));\n  }, []);\n\n  const onUpdate = (query: TestData) => {\n    onChange(query);\n    onRunQuery();\n  };\n\n  const currentScenario = useMemo(\n    () => scenarioList?.find((scenario) => scenario.id === query.scenarioId),\n    [scenarioList, query]\n  );\n  const scenarioId = currentScenario?.id;\n  const description = currentScenario?.description;\n\n  const onScenarioChange = (item: SelectableValue<string>) => {\n    const scenario = scenarioList?.find((sc) => sc.id === item.value);\n\n    if (!scenario) {\n      return;\n    }\n\n    // Clear model from existing props that belong to other scenarios\n    const update: TestData = {\n      scenarioId: item.value! as TestDataQueryType,\n      refId: query.refId,\n      alias: query.alias,\n      datasource: query.datasource,\n    };\n\n    if (scenario.stringInput) {\n      update.stringInput = scenario.stringInput;\n    }\n\n    switch (scenario.id) {\n      case TestDataQueryType.GrafanaAPI:\n        update.stringInput = 'datasources';\n        break;\n      case TestDataQueryType.StreamingClient:\n        update.stream = defaultStreamQuery;\n        break;\n      case TestDataQueryType.Live:\n        update.channel = 'random-2s-stream'; // default stream\n        break;\n      case TestDataQueryType.Simulation:\n        update.sim = { key: { type: 'flight', tick: 10 } }; // default stream\n        break;\n      case TestDataQueryType.PredictablePulse:\n        update.pulseWave = defaultPulseQuery;\n        break;\n      case TestDataQueryType.PredictableCSVWave:\n        update.csvWave = defaultCSVWaveQuery;\n        break;\n      case TestDataQueryType.Annotations:\n        update.lines = 10;\n        break;\n      case TestDataQueryType.USA:\n        update.usa = {\n          mode: usaQueryModes[0].value,\n        };\n    }\n\n    onUpdate(update);\n  };\n\n  const onInputChange = (e: FormEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value, type } = e.currentTarget;\n    let newValue: string | number | boolean = value;\n\n    if (type === 'number') {\n      newValue = Number(value);\n    }\n\n    if (name === 'levelColumn' && e.currentTarget instanceof HTMLInputElement) {\n      newValue = e.currentTarget.checked;\n    }\n\n    onUpdate({ ...query, [name]: newValue });\n  };\n\n  const onFieldChange = (field: string) => (e: { target: { name: string; value: string; type: string } }) => {\n    const { name, value, type } = e.target;\n    let newValue: string | number = value;\n\n    if (type === 'number') {\n      newValue = Number(value);\n    }\n\n    onUpdate({ ...query, [field]: { ...(query as any)[field], [name]: newValue } });\n  };\n\n  const onEndPointChange = ({ value }: SelectableValue) => {\n    onUpdate({ ...query, stringInput: value });\n  };\n\n  const onStreamClientChange = onFieldChange('stream');\n  const onPulseWaveChange = onFieldChange('pulseWave');\n  const onUSAStatsChange = (usa?: USAQuery) => {\n    onUpdate({ ...query, usa });\n  };\n\n  const onCSVWaveChange = (csvWave?: CSVWave[]) => {\n    onUpdate({ ...query, csvWave });\n  };\n\n  const options = useMemo(\n    () =>\n      (scenarioList || [])\n        .map((item) => ({ label: item.name, value: item.id }))\n        .sort((a, b) => a.label.localeCompare(b.label)),\n    [scenarioList]\n  );\n\n  // Common options that can be added to various scenarios\n  const show = useMemo(() => {\n    const scenarioId = query.scenarioId ?? '';\n    return {\n      labels: ['random_walk', 'predictable_pulse'].includes(scenarioId),\n      dropPercent: ['csv_content', 'csv_file'].includes(scenarioId),\n    };\n  }, [query?.scenarioId]);\n\n  if (loading) {\n    return null;\n  }\n\n  return (\n    <>\n      <InlineFieldRow aria-label={selectors.scenarioSelectContainer}>\n        <InlineField labelWidth={14} label=\"Scenario\">\n          <Select\n            inputId={`test-data-scenario-select-${query.refId}`}\n            options={options}\n            value={options.find((item) => item.value === query.scenarioId)}\n            onChange={onScenarioChange}\n            width={32}\n          />\n        </InlineField>\n        {currentScenario?.stringInput && (\n          <InlineField label=\"String Input\">\n            <Input\n              width={32}\n              id={`stringInput-${query.refId}`}\n              name=\"stringInput\"\n              placeholder={query.stringInput}\n              value={query.stringInput}\n              onChange={onInputChange}\n            />\n          </InlineField>\n        )}\n        {Boolean(!currentScenario?.hideAliasField) && (\n          <InlineField label=\"Alias\" labelWidth={14}>\n            <Input\n              width={32}\n              id={`alias-${query.refId}`}\n              type=\"text\"\n              placeholder=\"optional\"\n              pattern='[^<>&\\\\\"]+'\n              name=\"alias\"\n              value={query.alias}\n              onChange={onInputChange}\n            />\n          </InlineField>\n        )}\n        {show.dropPercent && (\n          <InlineField label=\"Drop\" tooltip={'Drop a random set of points'}>\n            <Input\n              type=\"number\"\n              min={0}\n              max={100}\n              step={5}\n              width={8}\n              onChange={onInputChange}\n              name=\"dropPercent\"\n              placeholder=\"0\"\n              value={query.dropPercent}\n              suffix={<Icon name=\"percentage\" />}\n            />\n          </InlineField>\n        )}\n        {show.labels && (\n          <InlineField\n            label=\"Labels\"\n            labelWidth={14}\n            tooltip={\n              <>\n                Set labels using a key=value syntax:\n                <br />\n                {`{ key = \"value\", key2 = \"value\" }`}\n                <br />\n                key=&quot;value&quot;, key2=&quot;value&quot;\n                <br />\n                key=value, key2=value\n                <br />\n                Value can contain templates:\n                <br />\n                $seriesIndex - replaced with index of the series\n              </>\n            }\n          >\n            <Input\n              width={32}\n              id={`labels-${query.refId}`}\n              name=\"labels\"\n              onChange={onInputChange}\n              value={query?.labels}\n              placeholder=\"key=value, key2=value2\"\n            />\n          </InlineField>\n        )}\n      </InlineFieldRow>\n\n      {scenarioId === TestDataQueryType.RandomWalk && (\n        <RandomWalkEditor onChange={onInputChange} query={query} ds={datasource} />\n      )}\n      {scenarioId === TestDataQueryType.StreamingClient && (\n        <StreamingClientEditor onChange={onStreamClientChange} query={query} ds={datasource} />\n      )}\n      {scenarioId === TestDataQueryType.Live && <GrafanaLiveEditor onChange={onUpdate} query={query} ds={datasource} />}\n      {scenarioId === TestDataQueryType.Simulation && (\n        <SimulationQueryEditor onChange={onUpdate} query={query} ds={datasource} />\n      )}\n      {scenarioId === TestDataQueryType.RawFrame && (\n        <RawFrameEditor onChange={onUpdate} query={query} ds={datasource} />\n      )}\n      {scenarioId === TestDataQueryType.CSVFile && <CSVFileEditor onChange={onUpdate} query={query} ds={datasource} />}\n      {scenarioId === TestDataQueryType.CSVContent && (\n        <CSVContentEditor onChange={onUpdate} query={query} ds={datasource} />\n      )}\n      {scenarioId === TestDataQueryType.Logs && (\n        <InlineFieldRow>\n          <InlineField label=\"Lines\" labelWidth={14}>\n            <Input\n              type=\"number\"\n              name=\"lines\"\n              value={query.lines}\n              width={32}\n              onChange={onInputChange}\n              placeholder=\"10\"\n            />\n          </InlineField>\n          <InlineField label=\"Level\" labelWidth={14}>\n            <InlineSwitch onChange={onInputChange} name=\"levelColumn\" value={!!query.levelColumn} />\n          </InlineField>\n        </InlineFieldRow>\n      )}\n      {scenarioId === TestDataQueryType.Annotations && (\n        <InlineFieldRow>\n          <InlineField label=\"Count\" labelWidth={14}>\n            <Input\n              type=\"number\"\n              name=\"lines\"\n              value={query.lines}\n              width={32}\n              onChange={onInputChange}\n              placeholder=\"10\"\n            />\n          </InlineField>\n        </InlineFieldRow>\n      )}\n      {scenarioId === TestDataQueryType.USA && <USAQueryEditor onChange={onUSAStatsChange} query={query.usa ?? {}} />}\n      {scenarioId === TestDataQueryType.GrafanaAPI && (\n        <InlineField labelWidth={14} label=\"Endpoint\">\n          <Select\n            options={endpoints}\n            onChange={onEndPointChange}\n            width={32}\n            value={endpoints.find((ep) => ep.value === query.stringInput)}\n          />\n        </InlineField>\n      )}\n\n      {scenarioId === TestDataQueryType.Arrow && (\n        <InlineField grow>\n          <TextArea\n            name=\"stringInput\"\n            value={query.stringInput}\n            rows={10}\n            placeholder=\"Copy base64 text data from query result\"\n            onChange={onInputChange}\n          />\n        </InlineField>\n      )}\n\n      {scenarioId === TestDataQueryType.FlameGraph && (\n        <InlineField label={'Diff profile'} grow>\n          <InlineSwitch\n            value={Boolean(query.flamegraphDiff)}\n            onChange={(e) => {\n              onUpdate({ ...query, flamegraphDiff: e.currentTarget.checked });\n            }}\n          />\n        </InlineField>\n      )}\n\n      {scenarioId === TestDataQueryType.PredictablePulse && (\n        <PredictablePulseEditor onChange={onPulseWaveChange} query={query} ds={datasource} />\n      )}\n      {scenarioId === TestDataQueryType.PredictableCSVWave && (\n        <CSVWavesEditor onChange={onCSVWaveChange} waves={query.csvWave} />\n      )}\n      {scenarioId === TestDataQueryType.NodeGraph && (\n        <NodeGraphEditor onChange={(val: NodesQuery) => onChange({ ...query, nodes: val })} query={query} />\n      )}\n      {scenarioId === TestDataQueryType.ServerError500 && (\n        <ErrorEditor onChange={onUpdate} query={query} ds={datasource} />\n      )}\n      {scenarioId === TestDataQueryType.Trace && (\n        <InlineField labelWidth={14} label=\"Span count\">\n          <Input\n            type=\"number\"\n            name=\"spanCount\"\n            value={query.spanCount}\n            width={32}\n            onChange={onInputChange}\n            placeholder=\"10\"\n          />\n        </InlineField>\n      )}\n\n      {description && <p>{description}</p>}\n    </>\n  );\n};\n","// Libraries\nimport React, { PureComponent } from 'react';\n\nimport { PluginConfigPageProps, DataSourcePluginMeta, DataSourceJsonData } from '@grafana/data';\nimport { LinkButton } from '@grafana/ui';\n\n// Types\n\ninterface Props extends PluginConfigPageProps<DataSourcePluginMeta<DataSourceJsonData>> {}\n\nexport class TestInfoTab extends PureComponent<Props> {\n  constructor(props: Props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        See github for more information about setting up a reproducible test environment.\n        <br />\n        <br />\n        <LinkButton\n          variant=\"secondary\"\n          href=\"https://github.com/grafana/grafana/tree/main/devenv\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          GitHub\n        </LinkButton>\n        <br />\n      </div>\n    );\n  }\n}\n","import { ScopedVars } from '../types';\n\nconst SEARCH_FILTER_VARIABLE = '__searchFilter';\n\nexport const containsSearchFilter = (query: string | unknown): boolean =>\n  query && typeof query === 'string' ? query.indexOf(SEARCH_FILTER_VARIABLE) !== -1 : false;\n\nexport interface SearchFilterOptions {\n  searchFilter?: string;\n}\n\nexport const getSearchFilterScopedVar = (args: {\n  query: string;\n  wildcardChar: string;\n  options?: SearchFilterOptions;\n}): ScopedVars => {\n  const { query, wildcardChar } = args;\n  if (!containsSearchFilter(query)) {\n    return {};\n  }\n\n  let { options } = args;\n\n  options = options || { searchFilter: '' };\n  const value = options.searchFilter ? `${options.searchFilter}${wildcardChar}` : `${wildcardChar}`;\n\n  return {\n    __searchFilter: {\n      value,\n      text: '',\n    },\n  };\n};\n","/**\n * The channel id is defined as:\n *\n *   ${scope}/${namespace}/${path}\n *\n * The scope drives how the namespace is used and controlled\n *\n * @alpha\n */\nexport enum LiveChannelScope {\n  DataSource = 'ds', // namespace = data source ID\n  Plugin = 'plugin', // namespace = plugin name (singleton works for apps too)\n  Grafana = 'grafana', // namespace = feature\n  Stream = 'stream', // namespace = id for the managed data stream\n}\n\n/**\n * The type of data to expect in a given channel\n *\n * @alpha\n */\nexport enum LiveChannelType {\n  DataStream = 'stream', // each message contains a batch of rows that will be appended to previous values\n  DataFrame = 'frame', // each message is an entire data frame and should *replace* previous content\n  JSON = 'json', // arbitrary json message\n}\n\nexport enum LiveChannelConnectionState {\n  /** The connection is not yet established */\n  Pending = 'pending',\n  /** Connected to the channel */\n  Connected = 'connected',\n  /** Connecting to a channel */\n  Connecting = 'connecting',\n  /** Disconnected from the channel.  The channel will reconnect when possible */\n  Disconnected = 'disconnected',\n  /** Was at some point connected, and will not try to reconnect */\n  Shutdown = 'shutdown',\n  /** Channel configuration was invalid and will not connect */\n  Invalid = 'invalid',\n}\n\nexport enum LiveChannelEventType {\n  Status = 'status',\n  Join = 'join',\n  Leave = 'leave',\n  Message = 'message',\n}\n\n/**\n * @alpha -- experimental\n */\nexport interface LiveChannelStatusEvent {\n  type: LiveChannelEventType.Status;\n\n  /**\n   * {scope}/{namespace}/{path}\n   */\n  id: string;\n\n  /**\n   * unix millies timestamp for the last status change\n   */\n  timestamp: number;\n\n  /**\n   * flag if the channel is actively connected to the channel.\n   * This may be false while the connections get established or if the network is lost\n   * As long as the `shutdown` flag is not set, the connection will try to reestablish\n   */\n  state: LiveChannelConnectionState;\n\n  /**\n   * When joining a channel, there may be an initial packet in the subscribe method\n   */\n  message?: any;\n\n  /**\n   * The last error.\n   *\n   * This will remain in the status until a new message is successfully received from the channel\n   */\n  error?: any;\n}\n\nexport interface LiveChannelJoinEvent {\n  type: LiveChannelEventType.Join;\n  user: any; // @alpha -- experimental -- will be filled in when we improve the UI\n}\n\nexport interface LiveChannelLeaveEvent {\n  type: LiveChannelEventType.Leave;\n  user: any; // @alpha -- experimental -- will be filled in when we improve the UI\n}\n\nexport interface LiveChannelMessageEvent<T> {\n  type: LiveChannelEventType.Message;\n  message: T;\n}\n\nexport type LiveChannelEvent<T = any> =\n  | LiveChannelStatusEvent\n  | LiveChannelJoinEvent\n  | LiveChannelLeaveEvent\n  | LiveChannelMessageEvent<T>;\n\nexport function isLiveChannelStatusEvent<T>(evt: LiveChannelEvent<T>): evt is LiveChannelStatusEvent {\n  return evt.type === LiveChannelEventType.Status;\n}\n\nexport function isLiveChannelJoinEvent<T>(evt: LiveChannelEvent<T>): evt is LiveChannelJoinEvent {\n  return evt.type === LiveChannelEventType.Join;\n}\n\nexport function isLiveChannelLeaveEvent<T>(evt: LiveChannelEvent<T>): evt is LiveChannelLeaveEvent {\n  return evt.type === LiveChannelEventType.Leave;\n}\n\nexport function isLiveChannelMessageEvent<T>(evt: LiveChannelEvent<T>): evt is LiveChannelMessageEvent<T> {\n  return evt.type === LiveChannelEventType.Message;\n}\n\n/**\n * @alpha -- experimental\n */\nexport interface LiveChannelPresenceStatus {\n  users: any; // @alpha -- experimental -- will be filled in when we improve the UI\n}\n\n/**\n * @alpha -- experimental\n */\nexport type LiveChannelId = string;\n\n/**\n * @alpha -- experimental\n */\nexport interface LiveChannelAddress {\n  scope: LiveChannelScope;\n  namespace: string; // depends on the scope\n  path: string;\n\n  /**\n   * Additional metadata passed to a channel.  The backend will propagate this JSON object to\n   * each OnSubscribe and RunStream calls.  This value should be constant across multiple requests\n   * to the same channel path\n   */\n  data?: any;\n}\n\n/**\n * Return an address from a string\n *\n * @alpha -- experimental\n */\nexport function parseLiveChannelAddress(id?: string): LiveChannelAddress | undefined {\n  if (id?.length) {\n    let parts = id.trim().split('/');\n    if (parts.length >= 3) {\n      return {\n        scope: parts[0] as LiveChannelScope,\n        namespace: parts[1],\n        path: parts.slice(2).join('/'),\n      };\n    }\n  }\n  return undefined;\n}\n\n/**\n * Check if the address has a scope, namespace, and path\n *\n * @alpha -- experimental\n */\nexport function isValidLiveChannelAddress(addr?: LiveChannelAddress): addr is LiveChannelAddress {\n  return !!(addr?.path && addr.namespace && addr.scope);\n}\n\n/**\n * Convert the address to an explicit channel path\n *\n * @alpha -- experimental\n */\nexport function toLiveChannelId(addr: LiveChannelAddress): LiveChannelId {\n  if (!addr.scope) {\n    return '';\n  }\n  let id = addr.scope as string;\n  if (!addr.namespace) {\n    return id;\n  }\n  id += '/' + addr.namespace;\n  if (!addr.path) {\n    return id;\n  }\n  return id + '/' + addr.path;\n}\n","export interface TreeNode {\n  name: string;\n  children: TreeNode[];\n}\n\n/*\n *  Builds a nested tree like\n *  [\n *    {\n *      name: 'A',\n *      children: [\n *        { name: 'AA', children: [] },\n *        { name: 'AB', children: [] },\n *      ]\n *    }\n *  ]\n */\nfunction buildMetricTree(parent: string, depth: number): TreeNode[] {\n  const chars = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];\n  const children: TreeNode[] = [];\n\n  if (depth > 5) {\n    return [];\n  }\n\n  for (const letter of chars) {\n    const nodeName = `${parent}${letter}`;\n    children.push({\n      name: nodeName,\n      children: buildMetricTree(nodeName, depth + 1),\n    });\n  }\n\n  return children;\n}\n\nfunction queryTree(children: TreeNode[], query: string[], queryIndex: number): TreeNode[] {\n  if (queryIndex >= query.length) {\n    return children;\n  }\n\n  if (query[queryIndex] === '*') {\n    return children;\n  }\n\n  const nodeQuery = query[queryIndex];\n  let result: TreeNode[] = [];\n  let namesToMatch = [nodeQuery];\n\n  // handle glob queries\n  if (nodeQuery.startsWith('{')) {\n    namesToMatch = nodeQuery.replace(/\\{|\\}/g, '').split(',');\n  }\n\n  for (const node of children) {\n    for (const nameToMatch of namesToMatch) {\n      if (nameToMatch.indexOf('*') !== -1) {\n        const pattern = nameToMatch.replace('*', '');\n        const regex = new RegExp(`^${pattern}.*`, 'gi');\n        if (regex.test(node.name)) {\n          result = result.concat(queryTree([node], query, queryIndex + 1));\n        }\n      } else if (node.name === nameToMatch) {\n        result = result.concat(queryTree(node.children, query, queryIndex + 1));\n      }\n    }\n  }\n\n  return result;\n}\n\nexport function queryMetricTree(query: string): TreeNode[] {\n  if (query.indexOf('value') === 0) {\n    return [{ name: query, children: [] }];\n  }\n\n  const children = buildMetricTree('', 0);\n  return queryTree(children, query.split('.'), 0);\n}\n","export enum NodeGraphDataFrameFieldNames {\n  // Unique identifier [required] [nodes + edges]\n  id = 'id',\n  // Text to show under the node [nodes]\n  title = 'title',\n  // Text to show under the node as second line [nodes]\n  subTitle = 'subtitle',\n  // Main value to be shown inside the node [nodes]\n  mainStat = 'mainstat',\n  // Second value to be shown inside the node under the mainStat [nodes]\n  secondaryStat = 'secondarystat',\n  // Prefix for fields which value will represent part of the color circle around the node, values should add up to 1 [nodes]\n  arc = 'arc__',\n  // Will show a named icon inside the node circle if defined. Can be used only with icons already available in\n  // grafana/ui [nodes]\n  icon = 'icon',\n  // Defines a single color if string (hex or html named value) or color mode config can be used as threshold or\n  // gradient. arc__ fields must not be defined if used [nodes]\n  color = 'color',\n\n  // Id of the source node [required] [edges]\n  source = 'source',\n  // Id of the target node [required] [edges]\n  target = 'target',\n\n  // Prefix for fields which will be shown in a context menu [nodes + edges]\n  detail = 'detail__',\n\n  // Radius of the node [nodes]\n  nodeRadius = 'noderadius',\n\n  // Thickness of the edge [edges]\n  thickness = 'thickness',\n\n  // Whether the node or edge should be highlighted (e.g., shown in red) in the UI\n  highlighted = 'highlighted',\n}\n","/**\n * @public\n */\nexport enum FieldColorModeId {\n  Thresholds = 'thresholds',\n  PaletteClassic = 'palette-classic',\n  PaletteClassicByName = 'palette-classic-by-name',\n  PaletteSaturated = 'palette-saturated',\n  ContinuousGrYlRd = 'continuous-GrYlRd',\n  ContinuousRdYlGr = 'continuous-RdYlGr',\n  ContinuousBlYlRd = 'continuous-BlYlRd',\n  ContinuousYlRd = 'continuous-YlRd',\n  ContinuousBlPu = 'continuous-BlPu',\n  ContinuousYlBl = 'continuous-YlBl',\n  ContinuousBlues = 'continuous-blues',\n  ContinuousReds = 'continuous-reds',\n  ContinuousGreens = 'continuous-greens',\n  ContinuousPurples = 'continuous-purples',\n  Fixed = 'fixed',\n  Shades = 'shades',\n}\n\n/**\n * @public\n */\nexport interface FieldColor {\n  /** The main color scheme mode */\n  mode: FieldColorModeId | string;\n  /** Stores the fixed color value if mode is fixed */\n  fixedColor?: string;\n  /** Some visualizations need to know how to assign a series color from by value color schemes */\n  seriesBy?: FieldColorSeriesByMode;\n}\n\n/**\n * @beta\n */\nexport type FieldColorSeriesByMode = 'min' | 'max' | 'last';\n\nexport const FALLBACK_COLOR = '#808080';\n","import { FieldColorModeId, FieldType, NodeGraphDataFrameFieldNames } from '@grafana/data';\n\nexport const nodes = {\n  fields: [\n    {\n      name: NodeGraphDataFrameFieldNames.id,\n      type: FieldType.string,\n      config: {\n        links: [\n          {\n            title: 'Traces/All',\n            url: '',\n            internal: {\n              query: {\n                queryType: 'getTraceSummaries',\n                query: 'service(id(name: \"${__data.fields.name}\", type: \"${__data.fields.type}\"))',\n              },\n              datasourceUid: 'Ax4erxHGz',\n              datasourceName: 'Trace data source',\n            },\n          },\n          {\n            title: 'Traces/OK',\n            url: '',\n            internal: {\n              query: {\n                queryType: 'getTraceSummaries',\n                query: 'service(id(name: \"${__data.fields.name}\", type: \"${__data.fields.type}\")) { ok = true }',\n              },\n              datasourceUid: 'Ax4erxHGz',\n              datasourceName: 'Trace data source',\n            },\n          },\n          {\n            title: 'Traces/Errors',\n            url: '',\n            internal: {\n              query: {\n                queryType: 'getTraceSummaries',\n                query: 'service(id(name: \"${__data.fields.name}\", type: \"${__data.fields.type}\")) { error = true }',\n              },\n              datasourceUid: 'Ax4erxHGz',\n              datasourceName: 'Trace data source',\n            },\n          },\n          {\n            title: 'Traces/Faults',\n            url: '',\n            internal: {\n              query: {\n                queryType: 'getTraceSummaries',\n                query: 'service(id(name: \"${__data.fields.name}\", type: \"${__data.fields.type}\")) { fault = true }',\n              },\n              datasourceUid: 'Ax4erxHGz',\n              datasourceName: 'Trace data source',\n            },\n          },\n        ],\n      },\n      values: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14],\n    },\n    {\n      name: NodeGraphDataFrameFieldNames.title,\n      type: FieldType.string,\n      config: { displayName: 'Name' },\n      values: [\n        'auth',\n        'products',\n        'customers',\n        'orders',\n        'products',\n        'orders',\n        'api',\n        'shipping',\n        'orders',\n        'execute-api',\n        'shipping',\n        'www',\n        'api',\n        'www',\n        'products',\n      ],\n    },\n    {\n      name: NodeGraphDataFrameFieldNames.subTitle,\n      type: FieldType.string,\n      config: { displayName: 'Type' },\n      values: [\n        'Compute',\n        'SQL',\n        'SQL',\n        'SQL',\n        'remote',\n        'Function',\n        'Compute',\n        'Function',\n        'Function',\n        'remote',\n        'Function',\n        'Compute',\n        'client',\n        'client',\n        'Compute',\n      ],\n    },\n    {\n      name: NodeGraphDataFrameFieldNames.mainStat,\n      type: FieldType.number,\n      config: { unit: 'ms/t', displayName: 'Average response time' },\n      values: [\n        3.5394042646735553, 15.906441318223264, 4.913011921591567, 7.4163203042094095, 1092, 22.85961441405067,\n        56.135855729084696, 4.45946191601527, 12.818300278280843, 4.25, 12.565442646791492, 77.63447512700567,\n        40.387096774193544, 77.63447512700567, 27.648950187374872,\n      ],\n    },\n    {\n      name: NodeGraphDataFrameFieldNames.secondaryStat,\n      type: FieldType.number,\n      config: { unit: 't/min', displayName: 'Transactions per minute' },\n      values: [\n        50.56317154501667, 682.4, 512.8416666666667, 125.64444444444445, 0.005585812037424941, 137.59722222222223,\n        300.0527777777778, 30.582348853370394, 125.77222222222223, 0.028706417080318163, 30.582348853370394, 165.675,\n        0.100021510002151, 165.675, 162.33055555555555,\n      ],\n    },\n    {\n      name: NodeGraphDataFrameFieldNames.arc + 'success',\n      type: FieldType.number,\n      config: { color: { mode: FieldColorModeId.Fixed, fixedColor: 'green' }, displayName: 'Sucesss' },\n      values: [\n        0.9338865684765882, 1, 1, 1, 0.5, 1, 0.9901128505170387, 0.9069260134520997, 1, 0, 0.9069260134520997,\n        0.9624432037288534, 0, 0.9624432037288534, 0.9824945669843769,\n      ],\n    },\n    {\n      name: NodeGraphDataFrameFieldNames.arc + 'faults',\n      type: FieldType.number,\n      config: { color: { mode: FieldColorModeId.Fixed, fixedColor: 'red' }, displayName: 'Faults' },\n      values: [\n        0, 0, 0, 0, 0.5, 0, 0.009479813736472288, 0, 0, 0, 0, 0.017168821152524185, 0, 0.017168821152524185,\n        0.01750543301562313,\n      ],\n    },\n    {\n      name: NodeGraphDataFrameFieldNames.arc + 'errors',\n      type: FieldType.number,\n      config: { color: { mode: FieldColorModeId.Fixed, fixedColor: 'semi-dark-yellow' }, displayName: 'Errors' },\n      values: [\n        0.06611343152341174, 0, 0, 0, 0, 0, 0.0004073357464890436, 0.09307398654790038, 0, 1, 0.09307398654790038,\n        0.02038797511862247, 1, 0.02038797511862247, 0,\n      ],\n    },\n    {\n      name: NodeGraphDataFrameFieldNames.arc + 'throttled',\n      type: FieldType.number,\n      config: { color: { mode: FieldColorModeId.Fixed, fixedColor: 'purple' }, displayName: 'Throttled' },\n      values: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    },\n  ],\n  meta: { preferredVisualisationType: 'nodeGraph' as const },\n  name: 'nodes',\n};\n\nexport const edges = {\n  fields: [\n    {\n      name: NodeGraphDataFrameFieldNames.id,\n      type: FieldType.string,\n      config: {\n        links: [\n          {\n            title: 'Traces/All',\n            url: '',\n            internal: {\n              query: {\n                queryType: 'getTraceSummaries',\n                query: 'edge(\"${__data.fields.sourceName}\", \"${__data.fields.targetName}\")',\n              },\n              datasourceUid: 'Ax4erxHGz',\n              datasourceName: 'Trace data source',\n            },\n          },\n          {\n            title: 'Traces/OK',\n            url: '',\n            internal: {\n              query: {\n                queryType: 'getTraceSummaries',\n                query: 'edge(\"${__data.fields.sourceName}\", \"${__data.fields.targetName}\") { ok = true }',\n              },\n              datasourceUid: 'Ax4erxHGz',\n              datasourceName: 'Trace data source',\n            },\n          },\n          {\n            title: 'Traces/Errors',\n            url: '',\n            internal: {\n              query: {\n                queryType: 'getTraceSummaries',\n                query: 'edge(\"${__data.fields.sourceName}\", \"${__data.fields.targetName}\") { error = true }',\n              },\n              datasourceUid: 'Ax4erxHGz',\n              datasourceName: 'Trace data source',\n            },\n          },\n          {\n            title: 'Traces/Faults',\n            url: '',\n            internal: {\n              query: {\n                queryType: 'getTraceSummaries',\n                query: 'edge(\"${__data.fields.sourceName}\", \"${__data.fields.targetName}\") { fault = true }',\n              },\n              datasourceUid: 'Ax4erxHGz',\n              datasourceName: 'Trace data source',\n            },\n          },\n        ],\n      },\n      values: [\n        '0__2',\n        '5__8',\n        '6__0',\n        '6__5',\n        '6__9',\n        '6__2',\n        '6__14',\n        '6__4',\n        '8__3',\n        '10__7',\n        '11__0',\n        '11__6',\n        '12__6',\n        '13__11',\n        '14__1',\n        '14__2',\n        '14__10',\n      ],\n    },\n    {\n      name: NodeGraphDataFrameFieldNames.source,\n      type: FieldType.string,\n      config: {},\n      values: [0, 5, 6, 6, 6, 6, 6, 6, 8, 10, 11, 11, 12, 13, 14, 14, 14],\n    },\n    {\n      name: 'sourceName',\n      type: FieldType.string,\n      config: {},\n      values: [\n        'auth',\n        'orders',\n        'api',\n        'api',\n        'api',\n        'api',\n        'api',\n        'api',\n        'orders',\n        'shipping',\n        'www',\n        'www',\n        'api',\n        'www',\n        'products',\n        'products',\n        'products',\n      ],\n    },\n    {\n      name: NodeGraphDataFrameFieldNames.target,\n      type: FieldType.string,\n      config: {},\n      values: [2, 8, 0, 5, 9, 2, 14, 4, 3, 7, 0, 6, 6, 11, 1, 2, 10],\n    },\n    {\n      name: 'targetName',\n      type: FieldType.string,\n      config: {},\n      values: [\n        'customers',\n        'orders',\n        'auth',\n        'orders',\n        'execute-api',\n        'customers',\n        'products',\n        'products',\n        'orders',\n        'shipping',\n        'auth',\n        'api',\n        'api',\n        'www',\n        'products',\n        'customers',\n        'shipping',\n      ],\n    },\n    {\n      name: NodeGraphDataFrameFieldNames.mainStat,\n      type: FieldType.string,\n      config: { displayName: 'Response percentage' },\n      values: [\n        'Success 100.00%',\n        'Success 100.00%',\n        'Success 100.00%',\n        'Success 100.00%',\n        'Errors 100.00%',\n        'Success 100.00%',\n        'Faults 1.75%',\n        'Faults 50.00%',\n        'Success 100.00%',\n        'Errors 9.31%',\n        'Errors 6.62%',\n        'Faults 1.13%',\n        'Errors 100.00%',\n        'Faults 1.72%',\n        'Success 100.00%',\n        'Success 100.00%',\n        'Faults 9.30%',\n      ],\n    },\n    {\n      name: NodeGraphDataFrameFieldNames.secondaryStat,\n      type: FieldType.number,\n      config: { unit: 't/min', displayName: 'Transactions per minute' },\n      values: [\n        50.56317154501667, 125.77222222222223, 0.03333333333333333, 137.59722222222223, 0.022222222222222223,\n        299.96666666666664, 162.33055555555555, 0.005555555555555556, 125.64444444444445, 30.582348853370394,\n        50.51111111111111, 299.9166666666667, 0.100021510002151, 165.675, 682.4, 162.33055555555555, 30.558333333333334,\n      ],\n    },\n  ],\n  meta: { preferredVisualisationType: 'nodeGraph' as const },\n  name: 'edges',\n};\n","import {\n  FieldColorModeId,\n  FieldDTO,\n  FieldType,\n  MutableDataFrame,\n  NodeGraphDataFrameFieldNames,\n  DataFrame,\n} from '@grafana/data';\n\nimport { nodes, edges } from './testData/serviceMapResponse';\n\nexport function generateRandomNodes(count = 10) {\n  const nodes = [];\n  const edges: string[] = [];\n\n  const root = {\n    id: 'root',\n    title: 'root',\n    subTitle: 'client',\n    success: 1,\n    error: 0,\n    stat1: Math.random(),\n    stat2: Math.random(),\n    edges,\n  };\n  nodes.push(root);\n  const nodesWithoutMaxEdges = [root];\n\n  const maxEdges = 3;\n\n  for (let i = 1; i < count; i++) {\n    const node = makeRandomNode(i);\n    nodes.push(node);\n    const sourceIndex = Math.floor(Math.random() * Math.floor(nodesWithoutMaxEdges.length - 1));\n    const source = nodesWithoutMaxEdges[sourceIndex];\n    source.edges.push(node.id);\n    if (source.edges.length >= maxEdges) {\n      nodesWithoutMaxEdges.splice(sourceIndex, 1);\n    }\n    nodesWithoutMaxEdges.push(node);\n  }\n\n  // Add some random edges to create possible cycle\n  const additionalEdges = Math.floor(count / 2);\n  for (let i = 0; i <= additionalEdges; i++) {\n    const sourceIndex = Math.floor(Math.random() * Math.floor(nodes.length - 1));\n    const targetIndex = Math.floor(Math.random() * Math.floor(nodes.length - 1));\n    if (sourceIndex === targetIndex || nodes[sourceIndex].id === '0' || nodes[targetIndex].id === '0') {\n      continue;\n    }\n\n    nodes[sourceIndex].edges.push(nodes[targetIndex].id);\n  }\n\n  const nodeFields: Record<string, Omit<FieldDTO, 'name'> & { values: any[] }> = {\n    [NodeGraphDataFrameFieldNames.id]: {\n      values: [],\n      type: FieldType.string,\n      config: {\n        links: [\n          {\n            title: 'test data link',\n            url: '',\n            internal: {\n              query: { scenarioId: 'logs', alias: 'from service graph', stringInput: 'tes' },\n              datasourceUid: 'gdev-testdata',\n              datasourceName: 'gdev-testdata',\n            },\n          },\n        ],\n      },\n    },\n    [NodeGraphDataFrameFieldNames.title]: {\n      values: [],\n      type: FieldType.string,\n    },\n    [NodeGraphDataFrameFieldNames.subTitle]: {\n      values: [],\n      type: FieldType.string,\n    },\n    [NodeGraphDataFrameFieldNames.mainStat]: {\n      values: [],\n      type: FieldType.number,\n      config: { displayName: 'Transactions per second' },\n    },\n    [NodeGraphDataFrameFieldNames.secondaryStat]: {\n      values: [],\n      type: FieldType.number,\n      config: { displayName: 'Average duration' },\n    },\n    [NodeGraphDataFrameFieldNames.arc + 'success']: {\n      values: [],\n      type: FieldType.number,\n      config: { color: { fixedColor: 'green', mode: FieldColorModeId.Fixed }, displayName: 'Success' },\n    },\n    [NodeGraphDataFrameFieldNames.arc + 'errors']: {\n      values: [],\n      type: FieldType.number,\n      config: { color: { fixedColor: 'red', mode: FieldColorModeId.Fixed }, displayName: 'Errors' },\n    },\n    [NodeGraphDataFrameFieldNames.icon]: {\n      values: [],\n      type: FieldType.string,\n    },\n    [NodeGraphDataFrameFieldNames.nodeRadius]: {\n      values: [],\n      type: FieldType.number,\n    },\n    [NodeGraphDataFrameFieldNames.highlighted]: {\n      values: [],\n      type: FieldType.boolean,\n    },\n  };\n\n  const nodeFrame = new MutableDataFrame({\n    name: 'nodes',\n    fields: Object.keys(nodeFields).map((key) => ({\n      ...nodeFields[key],\n      name: key,\n    })),\n    meta: { preferredVisualisationType: 'nodeGraph' },\n  });\n\n  const edgesFrame: DataFrame = {\n    name: 'edges',\n    fields: [\n      { name: NodeGraphDataFrameFieldNames.id, values: [], type: FieldType.string, config: {} },\n      { name: NodeGraphDataFrameFieldNames.source, values: [], type: FieldType.string, config: {} },\n      { name: NodeGraphDataFrameFieldNames.target, values: [], type: FieldType.string, config: {} },\n      { name: NodeGraphDataFrameFieldNames.mainStat, values: [], type: FieldType.number, config: {} },\n      { name: NodeGraphDataFrameFieldNames.highlighted, values: [], type: FieldType.boolean, config: {} },\n      { name: NodeGraphDataFrameFieldNames.thickness, values: [], type: FieldType.number, config: {} },\n    ],\n    meta: { preferredVisualisationType: 'nodeGraph' },\n    length: 0,\n  };\n\n  const edgesSet = new Set();\n  for (const node of nodes) {\n    nodeFields.id.values.push(node.id);\n    nodeFields.title.values.push(node.title);\n    nodeFields[NodeGraphDataFrameFieldNames.subTitle].values.push(node.subTitle);\n    nodeFields[NodeGraphDataFrameFieldNames.mainStat].values.push(node.stat1);\n    nodeFields[NodeGraphDataFrameFieldNames.secondaryStat].values.push(node.stat2);\n    nodeFields.arc__success.values.push(node.success);\n    nodeFields.arc__errors.values.push(node.error);\n    const rnd = Math.random();\n    nodeFields[NodeGraphDataFrameFieldNames.icon].values.push(rnd > 0.9 ? 'database' : rnd < 0.1 ? 'cloud' : '');\n    nodeFields[NodeGraphDataFrameFieldNames.nodeRadius].values.push(Math.max(rnd * 100, 30)); // ensure a minimum radius of 30 or icons will not fit well in the node\n    nodeFields[NodeGraphDataFrameFieldNames.highlighted].values.push(Math.random() > 0.5);\n\n    for (const edge of node.edges) {\n      const id = `${node.id}--${edge}`;\n      // We can have duplicate edges when we added some more by random\n      if (edgesSet.has(id)) {\n        continue;\n      }\n      edgesSet.add(id);\n      edgesFrame.fields[0].values.push(`${node.id}--${edge}`);\n      edgesFrame.fields[1].values.push(node.id);\n      edgesFrame.fields[2].values.push(edge);\n      edgesFrame.fields[3].values.push(Math.random() * 100);\n      edgesFrame.fields[4].values.push(Math.random() > 0.5);\n      edgesFrame.fields[5].values.push(Math.ceil(Math.random() * 15));\n    }\n  }\n  edgesFrame.length = edgesFrame.fields[0].values.length;\n\n  return [nodeFrame, edgesFrame];\n}\n\nfunction makeRandomNode(index: number) {\n  const success = Math.random();\n  const error = 1 - success;\n  return {\n    id: `service:${index}`,\n    title: `service:${index}`,\n    subTitle: 'service',\n    success,\n    error,\n    stat1: Math.random(),\n    stat2: Math.random(),\n    edges: [],\n    highlighted: Math.random() > 0.5,\n  };\n}\n\nexport function savedNodesResponse() {\n  return [new MutableDataFrame(nodes), new MutableDataFrame(edges)];\n}\n\n// Generates node graph data but only returns the edges\nexport function generateRandomEdges(count = 10) {\n  return generateRandomNodes(count)[1];\n}\n","import { DataFrameDTO, FieldType } from '@grafana/data';\n\nexport const flameGraphData: DataFrameDTO = {\n  name: 'response',\n  // @ts-ignore\n  meta: { preferredVisualisationType: 'flamegraph' },\n  fields: [\n    {\n      name: 'level',\n      values: [\n        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 11, 12, 13, 14, 15, 16, 10, 11, 12, 13, 9, 10, 9, 9, 7, 7, 6, 5, 6, 7,\n        8, 8, 9, 10, 11, 12, 13, 8, 9, 10, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 4, 5, 6, 7, 8, 9, 9, 10, 11, 12, 11, 12,\n        13, 8, 8, 7, 8, 8, 7, 6, 7, 8, 9, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 9, 8, 8, 7, 8, 6, 7, 8, 8, 7, 6, 7, 8,\n        8, 8, 9, 10, 11, 12, 4, 5, 6, 7, 8, 9, 9, 10, 11, 9, 10, 7, 4, 5, 6, 7, 8, 8, 7, 8, 9, 10, 11, 12, 13, 10, 10,\n        11, 9, 10, 10, 11, 12, 13, 14, 15, 16, 17, 8, 9, 5, 6, 7, 6, 7, 6, 5, 6, 6, 6, 6, 5, 6, 7, 6, 5, 6, 7, 8, 4, 5,\n        6, 5, 6, 5, 4, 5, 5, 3, 4, 5, 6, 7, 7, 8, 7, 8, 9, 8, 9, 8, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\n        14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 24, 24, 25, 26, 24, 25, 22, 23, 23, 24, 25, 26, 27, 28, 29, 30, 31,\n        32, 21, 22, 23, 24, 25, 26, 27, 26, 24, 25, 26, 25, 24, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 25, 26,\n        27, 25, 26, 24, 23, 24, 24, 25, 23, 23, 22, 23, 24, 24, 23, 24, 25, 26, 24, 25, 23, 24, 24, 25, 23, 23, 24, 24,\n        23, 23, 23, 23, 23, 24, 25, 22, 23, 24, 25, 22, 23, 24, 25, 26, 27, 28, 25, 26, 27, 28, 29, 24, 22, 23, 24, 25,\n        26, 27, 28, 29, 30, 31, 32, 33, 21, 22, 23, 23, 24, 24, 24, 22, 23, 24, 25, 24, 23, 24, 24, 23, 22, 23, 24, 25,\n        25, 26, 27, 24, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 24, 21, 22, 23, 24, 25, 26, 27, 28, 21, 22, 19, 20,\n        21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 24, 25, 26, 27, 28, 23, 24, 25, 26, 27, 28, 19, 20,\n        21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,\n        31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 31, 30, 28, 29, 30, 31, 32, 33, 34,\n        35, 36, 37, 29, 30, 31, 26, 27, 28, 28, 28, 29, 27, 26, 27, 26, 25, 26, 27, 28, 29, 30, 31, 32, 32, 33, 34, 30,\n        31, 32, 33, 34, 33, 34, 35, 36, 37, 38, 39, 29, 30, 31, 32, 32, 27, 28, 28, 27, 28, 29, 30, 31, 32, 33, 34, 35,\n        36, 37, 38, 39, 40, 27, 28, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 28, 27, 28, 28, 29, 27, 27, 28, 27, 27, 26,\n        27, 28, 28, 29, 29, 29, 26, 27, 27, 28, 29, 30, 29, 30, 30, 29, 30, 31, 28, 29, 30, 28, 28, 28, 28, 29, 30, 29,\n        30, 27, 28, 28, 26, 27, 26, 27, 27, 28, 29, 26, 27, 28, 29, 28, 27, 28, 29, 30, 30, 28, 29, 30, 31, 32, 32, 27,\n        28, 26, 25, 25, 26, 27, 28, 29, 30, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n        48, 31, 30, 31, 32, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 29, 26, 27, 28,\n        29, 30, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 31, 30, 29, 29, 29, 25, 26, 27, 28, 26,\n        26, 27, 28, 27, 28, 28, 26, 27, 28, 28, 27, 28, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 25, 25, 26, 27, 28, 25,\n        26, 24, 25, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 33, 34, 34, 32, 33, 34, 34, 32, 28, 29, 30, 31, 27,\n        28, 29, 26, 27, 28, 29, 30, 31, 32, 33, 34, 26, 27, 28, 29, 24, 25, 26, 27, 28, 29, 30, 27, 28, 26, 27, 25, 26,\n        27, 28, 29, 26, 25, 26, 27, 26, 27, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 38, 39, 30, 31, 32, 26, 27,\n        28, 27, 28, 29, 25, 26, 27, 28, 29, 30, 31, 32, 28, 29, 28, 29, 28, 29, 27, 28, 29, 30, 31, 29, 30, 31, 32, 33,\n        34, 35, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 28, 29, 30, 31, 28, 29, 30, 31, 26, 25, 26, 27, 28, 29,\n        27, 28, 29, 30, 25, 26, 15, 14, 15, 16, 17, 13, 14, 15, 16, 15, 16, 17, 18, 19, 20, 12, 13, 14, 15, 16, 17, 10,\n        11, 12, 13, 14, 12, 13, 10, 11, 12, 13, 14, 15, 2, 3, 4, 5, 6, 7, 8, 4, 5, 6, 7, 8, 9, 2, 3, 1, 2, 3, 4, 5, 6,\n        6, 6, 6, 7, 8, 8, 9, 6, 7, 6, 6, 6, 6, 5, 5, 6, 5, 5, 5, 5, 5, 6, 7, 4, 2, 3, 4, 5, 6, 4, 5, 6, 7, 8, 9, 1, 2,\n        3, 4, 5, 6, 7, 8, 2, 3, 4, 5, 6, 7, 8, 9, 2, 3, 4, 5, 6, 1, 2, 3, 3, 4, 3, 2, 1, 2, 3, 4, 5, 6, 5, 6, 7, 8, 5,\n        5, 6, 7, 4, 5, 6, 4, 2, 3, 4, 3, 4, 5, 6, 5, 5, 6, 4, 1, 2, 3, 4, 5, 6, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\n        2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\n        23, 16, 17, 18, 19, 16, 17, 18, 19, 20, 21, 22, 23, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\n        23, 8, 9, 10, 11, 12, 13, 14, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4,\n      ],\n    },\n    {\n      name: 'value',\n      values: [\n        16460000000, 4100000000, 4100000000, 3670000000, 1130000000, 1060000000, 1020000000, 150000000, 150000000,\n        50000000, 30000000, 20000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 80000000, 40000000, 10000000, 10000000, 530000000, 80000000, 40000000, 70000000,\n        50000000, 50000000, 30000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 20000000, 20000000, 20000000, 20000000, 20000000, 20000000, 20000000, 20000000, 20000000, 10000000,\n        390000000, 390000000, 180000000, 70000000, 50000000, 10000000, 20000000, 20000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 20000000, 10000000, 10000000, 10000000, 110000000, 80000000, 60000000,\n        10000000, 20000000, 20000000, 20000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        20000000, 10000000, 10000000, 30000000, 20000000, 40000000, 30000000, 20000000, 10000000, 10000000, 40000000,\n        40000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 210000000, 210000000, 210000000,\n        130000000, 130000000, 10000000, 50000000, 40000000, 40000000, 70000000, 10000000, 40000000, 1840000000,\n        240000000, 240000000, 50000000, 10000000, 10000000, 190000000, 130000000, 50000000, 20000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 80000000, 20000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 60000000, 10000000, 1330000000, 1290000000, 320000000, 10000000,\n        10000000, 10000000, 130000000, 10000000, 10000000, 60000000, 30000000, 100000000, 40000000, 10000000, 10000000,\n        40000000, 30000000, 10000000, 10000000, 70000000, 10000000, 10000000, 50000000, 40000000, 10000000, 30000000,\n        20000000, 10000000, 430000000, 430000000, 430000000, 430000000, 10000000, 40000000, 20000000, 370000000,\n        20000000, 10000000, 180000000, 10000000, 30000000, 10000000, 10000000, 10000000, 5630000000, 5580000000,\n        5580000000, 5580000000, 5580000000, 5580000000, 5580000000, 5580000000, 5580000000, 5540000000, 5540000000,\n        5530000000, 5510000000, 5500000000, 5490000000, 5490000000, 1610000000, 1610000000, 1540000000, 1540000000,\n        190000000, 170000000, 170000000, 10000000, 20000000, 120000000, 10000000, 10000000, 20000000, 20000000,\n        20000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 850000000, 350000000, 300000000, 120000000, 110000000, 80000000, 20000000, 10000000, 80000000,\n        40000000, 20000000, 10000000, 10000000, 50000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 20000000, 20000000, 20000000,\n        20000000, 10000000, 10000000, 10000000, 10000000, 10000000, 370000000, 40000000, 20000000, 10000000, 100000000,\n        10000000, 10000000, 10000000, 30000000, 30000000, 80000000, 20000000, 10000000, 10000000, 10000000, 40000000,\n        10000000, 10000000, 10000000, 20000000, 10000000, 20000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 110000000, 110000000, 60000000, 20000000, 20000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 480000000, 150000000, 10000000, 130000000, 10000000, 10000000,\n        50000000, 140000000, 80000000, 40000000, 10000000, 10000000, 20000000, 10000000, 10000000, 20000000, 120000000,\n        60000000, 40000000, 10000000, 10000000, 10000000, 10000000, 20000000, 30000000, 30000000, 20000000, 20000000,\n        20000000, 20000000, 20000000, 20000000, 20000000, 20000000, 20000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 60000000, 60000000, 60000000, 60000000,\n        30000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 20000000, 20000000, 20000000, 20000000, 20000000, 30000000, 30000000, 30000000, 30000000,\n        30000000, 30000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 3880000000, 3880000000, 3880000000,\n        3880000000, 3870000000, 3230000000, 3230000000, 3210000000, 320000000, 70000000, 70000000, 40000000, 40000000,\n        20000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 20000000,\n        30000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 20000000,\n        20000000, 20000000, 70000000, 60000000, 20000000, 30000000, 10000000, 10000000, 10000000, 100000000, 20000000,\n        50000000, 1850000000, 410000000, 110000000, 110000000, 90000000, 60000000, 60000000, 40000000, 20000000,\n        20000000, 20000000, 30000000, 30000000, 30000000, 10000000, 10000000, 20000000, 20000000, 20000000, 20000000,\n        20000000, 20000000, 10000000, 20000000, 20000000, 20000000, 10000000, 10000000, 30000000, 20000000, 10000000,\n        40000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 40000000, 10000000, 80000000, 30000000, 30000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 20000000, 60000000, 30000000, 30000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 160000000, 120000000, 20000000, 100000000, 50000000, 10000000, 10000000,\n        640000000, 10000000, 550000000, 410000000, 80000000, 60000000, 260000000, 20000000, 170000000, 60000000,\n        30000000, 20000000, 20000000, 20000000, 10000000, 10000000, 10000000, 20000000, 50000000, 40000000, 10000000,\n        10000000, 10000000, 70000000, 30000000, 40000000, 290000000, 90000000, 30000000, 10000000, 10000000, 10000000,\n        10000000, 210000000, 20000000, 10000000, 10000000, 10000000, 120000000, 90000000, 90000000, 60000000, 10000000,\n        30000000, 30000000, 30000000, 30000000, 10000000, 20000000, 50000000, 10000000, 10000000, 10000000, 280000000,\n        150000000, 150000000, 150000000, 60000000, 30000000, 80000000, 50000000, 20000000, 20000000, 20000000, 20000000,\n        20000000, 20000000, 20000000, 20000000, 20000000, 20000000, 20000000, 20000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 20000000, 20000000, 20000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 130000000, 130000000, 130000000, 70000000, 30000000, 30000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 40000000, 10000000, 590000000, 20000000,\n        20000000, 10000000, 40000000, 150000000, 30000000, 30000000, 120000000, 10000000, 80000000, 370000000,\n        260000000, 40000000, 150000000, 110000000, 90000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 20000000, 20000000, 20000000, 20000000, 20000000, 70000000, 60000000,\n        20000000, 20000000, 640000000, 640000000, 250000000, 250000000, 230000000, 180000000, 170000000, 170000000,\n        170000000, 170000000, 50000000, 10000000, 40000000, 10000000, 10000000, 60000000, 60000000, 10000000, 30000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 50000000, 50000000, 20000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 390000000,\n        60000000, 40000000, 30000000, 20000000, 20000000, 10000000, 10000000, 10000000, 10000000, 10000000, 30000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 90000000, 10000000, 10000000, 60000000, 10000000, 40000000,\n        40000000, 40000000, 30000000, 30000000, 30000000, 30000000, 30000000, 30000000, 30000000, 30000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 20000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        180000000, 170000000, 50000000, 20000000, 20000000, 20000000, 20000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 30000000, 30000000, 20000000, 20000000, 20000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 90000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 70000000, 70000000,\n        70000000, 70000000, 10000000, 20000000, 20000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 20000000, 20000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 20000000, 20000000, 10000000, 10000000, 10000000, 10000000, 10000000, 20000000, 20000000,\n        20000000, 20000000, 20000000, 10000000, 40000000, 40000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        30000000, 30000000, 30000000, 30000000, 30000000, 30000000, 10000000, 10000000, 6190000000, 6170000000,\n        6170000000, 6070000000, 4460000000, 10000000, 50000000, 440000000, 540000000, 20000000, 10000000, 10000000,\n        10000000, 980000000, 10000000, 50000000, 480000000, 540000000, 50000000, 210000000, 30000000, 30000000,\n        60000000, 180000000, 10000000, 210000000, 20000000, 20000000, 20000000, 100000000, 20000000, 20000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 40000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 20000000, 20000000, 20000000, 20000000, 20000000, 20000000,\n        20000000, 20000000, 10000000, 10000000, 10000000, 10000000, 10000000, 170000000, 160000000, 70000000, 30000000,\n        10000000, 40000000, 10000000, 170000000, 90000000, 90000000, 70000000, 20000000, 10000000, 30000000, 30000000,\n        30000000, 30000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 80000000,\n        10000000, 10000000, 70000000, 60000000, 10000000, 10000000, 20000000, 20000000, 20000000, 10000000, 80000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 20000000, 20000000, 20000000, 20000000, 20000000, 20000000,\n        20000000, 20000000, 20000000, 20000000, 20000000, 20000000, 50000000, 50000000, 50000000, 50000000, 50000000,\n        50000000, 50000000, 10000000, 10000000, 10000000, 60000000, 60000000, 60000000, 60000000, 60000000, 60000000,\n        60000000, 40000000, 40000000, 30000000, 30000000, 30000000, 30000000, 30000000, 30000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000,\n      ],\n      config: {\n        unit: 'short',\n      },\n    },\n    {\n      name: 'self',\n      values: [\n        16460, 4100, 4100, 3670, 1130, 1060, 1020, 150, 150, 50, 30, 20, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 80,\n        40, 10, 10, 530, 80, 40, 70, 50, 50, 30, 10, 10, 10, 10, 10, 10, 10, 10, 10, 20, 20, 20, 20, 20, 20, 20, 20, 20,\n        10, 390, 390, 180, 70, 50, 10, 20, 20, 10, 10, 10, 10, 10, 10, 10, 20, 10, 10, 10, 110, 80, 60, 10, 20, 20, 20,\n        10, 10, 10, 10, 10, 10, 10, 20, 10, 10, 30, 20, 40, 30, 20, 10, 10, 40, 40, 10, 10, 10, 10, 10, 10, 10, 210,\n        210, 210, 130, 130, 10, 50, 40, 40, 70, 10, 40, 1840, 240, 240, 50, 10, 10, 190, 130, 50, 20, 10, 10, 10, 10,\n        10, 10, 80, 20, 10, 10, 10, 10, 10, 10, 10, 10, 60, 10, 1330, 1290, 320, 10, 10, 10, 130, 10, 10, 60, 30, 100,\n        40, 10, 10, 40, 30, 10, 10, 70, 10, 10, 50, 40, 10, 30, 20, 10, 430, 430, 430, 430, 10, 40, 20, 370, 20, 10,\n        180, 10, 30, 10, 10, 10, 5630, 5580, 5580, 5580, 5580, 5580, 5580, 5580, 5580, 5540, 5540, 5530, 5510, 5500,\n        5490, 5490, 1610, 1610, 1540, 1540, 190, 170, 170, 10, 20, 120, 10, 10, 20, 20, 20, 10, 10, 10, 10, 10, 10, 10,\n        10, 10, 10, 10, 850, 350, 300, 120, 110, 80, 20, 10, 80, 40, 20, 10, 10, 50, 10, 10, 10, 10, 10, 10, 10, 10, 10,\n        10, 10, 10, 10, 10, 20, 20, 20, 20, 10, 10, 10, 10, 10, 370, 40, 20, 10, 100, 10, 10, 10, 30, 30, 80, 20, 10,\n        10, 10, 40, 10, 10, 10, 20, 10, 20, 10, 10, 10, 10, 10, 10, 10, 110, 110, 60, 20, 20, 10, 10, 10, 10, 10, 10,\n        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 480, 150, 10, 130, 10, 10, 50, 140, 80, 40, 10, 10, 20,\n        10, 10, 20, 120, 60, 40, 10, 10, 10, 10, 20, 30, 30, 20, 20, 20, 20, 20, 20, 20, 20, 20, 10, 10, 10, 10, 10, 10,\n        10, 10, 10, 10, 10, 60, 60, 60, 60, 30, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 20, 20, 20, 20, 20, 30,\n        30, 30, 30, 30, 30, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 3880, 3880, 3880, 3880,\n        3870, 3230, 3230, 3210, 320, 70, 70, 40, 40, 20, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\n        10, 10, 10, 10, 20, 30, 10, 10, 10, 10, 10, 10, 10, 10, 10, 20, 20, 20, 70, 60, 20, 30, 10, 10, 10, 100, 20, 50,\n        1850, 410, 110, 110, 90, 60, 60, 40, 20, 20, 20, 30, 30, 30, 10, 10, 20, 20, 20, 20, 20, 20, 10, 20, 20, 20, 10,\n        10, 30, 20, 10, 40, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 40, 10, 80, 30, 30, 10, 10, 10, 10, 10,\n        10, 10, 20, 60, 30, 30, 10, 10, 10, 10, 10, 10, 160, 120, 20, 100, 50, 10, 10, 640, 10, 550, 410, 80, 60, 260,\n        20, 170, 60, 30, 20, 20, 20, 10, 10, 10, 20, 50, 40, 10, 10, 10, 70, 30, 40, 290, 90, 30, 10, 10, 10, 10, 210,\n        20, 10, 10, 10, 120, 90, 90, 60, 10, 30, 30, 30, 30, 10, 20, 50, 10, 10, 10, 280, 150, 150, 150, 60, 30, 80, 50,\n        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 10, 10, 10, 10, 10, 10, 10, 20, 20, 20, 10, 10, 10, 10, 10, 10,\n        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 130, 130, 130, 70, 30, 30, 10, 10, 10, 10, 10, 10, 10,\n        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 40, 10, 590, 20, 20, 10, 40, 150, 30, 30, 120, 10, 80, 370, 260, 40,\n        150, 110, 90, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 20, 20, 20, 20, 20, 70, 60, 20, 20, 640, 640, 250, 250,\n        230, 180, 170, 170, 170, 170, 50, 10, 40, 10, 10, 60, 60, 10, 30, 10, 10, 10, 10, 10, 50, 50, 20, 10, 10, 10,\n        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 390, 60, 40, 30, 20, 20, 10, 10, 10, 10, 10, 30, 10, 10, 10, 10, 10, 90,\n        10, 10, 60, 10, 40, 40, 40, 30, 30, 30, 30, 30, 30, 30, 30, 10, 10, 10, 10, 10, 10, 20, 10, 10, 10, 10, 10, 180,\n        170, 50, 20, 20, 20, 20, 10, 10, 10, 10, 10, 10, 10, 30, 30, 20, 20, 20, 10, 10, 10, 10, 10, 10, 10, 90, 10, 10,\n        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 70, 70, 70, 70, 10, 20, 20, 10, 10, 10, 10, 10, 10, 10, 10,\n        10, 10, 10, 10, 10, 10, 20, 20, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 20, 20, 10, 10, 10, 10,\n        10, 20, 20, 20, 20, 20, 10, 40, 40, 10, 10, 10, 10, 10, 30, 30, 30, 30, 30, 30, 10, 10, 6190, 6170, 6170, 6070,\n        4460, 10, 50, 440, 540, 20, 10, 10, 10, 980, 10, 50, 480, 540, 50, 210, 30, 30, 60, 180, 10, 210, 20, 20, 20,\n        100, 20, 20, 10, 10, 10, 10, 10, 10, 10, 10, 10, 40, 10, 10, 10, 10, 10, 10, 10, 20, 20, 20, 20, 20, 20, 20, 20,\n        10, 10, 10, 10, 10, 170, 160, 70, 30, 10, 40, 10, 170, 90, 90, 70, 20, 10, 30, 30, 30, 30, 10, 10, 10, 10, 10,\n        10, 10, 10, 80, 10, 10, 70, 60, 10, 10, 20, 20, 20, 10, 80, 10, 10, 10, 10, 10, 20, 20, 20, 20, 20, 20, 20, 20,\n        20, 20, 20, 20, 50, 50, 50, 50, 50, 50, 50, 10, 10, 10, 60, 60, 60, 60, 60, 60, 60, 40, 40, 30, 30, 30, 30, 30,\n        30, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\n        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\n        10, 10, 10, 10,\n      ],\n      config: {\n        unit: 'short',\n      },\n    },\n    {\n      name: 'label',\n      type: FieldType.enum,\n      values: [\n        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 15, 15, 16, 17, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25,\n        26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 28, 30, 31, 32, 33, 34, 35, 41, 42, 43, 44, 40, 28,\n        29, 45, 46, 47, 48, 49, 50, 51, 52, 53, 27, 53, 28, 54, 55, 27, 28, 56, 45, 46, 49, 50, 51, 31, 57, 58, 59, 60,\n        36, 53, 52, 54, 28, 54, 28, 36, 29, 12, 27, 28, 36, 29, 45, 46, 47, 48, 61, 62, 63, 6, 7, 8, 21, 9, 10, 11, 19,\n        20, 23, 64, 14, 15, 18, 65, 66, 15, 15, 15, 15, 15, 16, 65, 18, 16, 66, 18, 65, 66, 67, 68, 69, 31, 70, 71, 72,\n        18, 65, 73, 74, 75, 54, 12, 12, 76, 77, 78, 79, 80, 81, 82, 83, 84, 74, 85, 74, 86, 87, 88, 89, 90, 91, 92, 90,\n        93, 91, 94, 95, 96, 97, 12, 98, 12, 99, 100, 12, 101, 102, 103, 104, 99, 103, 105, 106, 107, 108, 109, 107, 110,\n        107, 111, 107, 112, 107, 113, 114, 115, 116, 117, 118, 119, 120, 95, 121, 122, 123, 124, 125, 126, 12, 127, 125,\n        54, 12, 28, 128, 51, 31, 57, 58, 129, 130, 131, 132, 133, 134, 135, 136, 137, 82, 83, 138, 139, 79, 12, 77, 82,\n        140, 141, 142, 143, 28, 144, 145, 146, 31, 147, 148, 149, 150, 54, 151, 152, 153, 154, 27, 155, 28, 36, 156,\n        157, 135, 158, 159, 160, 140, 150, 54, 53, 152, 153, 161, 160, 162, 159, 163, 164, 78, 79, 165, 166, 154, 138,\n        167, 137, 82, 168, 169, 170, 171, 172, 173, 140, 152, 153, 174, 175, 141, 142, 143, 28, 36, 82, 176, 28, 45, 46,\n        49, 50, 51, 31, 57, 58, 59, 60, 43, 27, 53, 28, 177, 56, 36, 55, 54, 28, 36, 53, 27, 52, 28, 178, 44, 40, 28,\n        29, 45, 46, 49, 155, 54, 28, 144, 145, 146, 31, 147, 148, 179, 180, 181, 29, 182, 183, 184, 185, 186, 187, 180,\n        188, 189, 190, 191, 192, 193, 194, 195, 62, 4, 26, 27, 28, 30, 31, 32, 33, 34, 35, 196, 197, 198, 199, 200, 29,\n        201, 197, 198, 199, 200, 29, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217,\n        218, 107, 219, 220, 221, 222, 223, 224, 225, 226, 4, 5, 227, 228, 19, 20, 229, 230, 231, 232, 233, 234, 235,\n        236, 237, 235, 236, 238, 239, 240, 241, 242, 217, 243, 244, 26, 245, 40, 28, 30, 31, 32, 33, 34, 35, 27, 28, 29,\n        246, 247, 158, 248, 249, 12, 250, 251, 12, 252, 253, 254, 226, 4, 26, 27, 28, 29, 36, 37, 38, 245, 40, 28, 255,\n        29, 30, 31, 32, 33, 34, 35, 41, 5, 227, 228, 19, 9, 54, 28, 155, 256, 141, 142, 143, 28, 144, 145, 146, 31, 147,\n        148, 179, 180, 181, 257, 159, 140, 152, 153, 258, 175, 69, 31, 70, 71, 196, 83, 259, 248, 249, 12, 260, 249, 12,\n        261, 248, 262, 27, 53, 28, 36, 29, 56, 263, 260, 186, 187, 264, 265, 180, 188, 181, 266, 267, 268, 269, 267,\n        268, 149, 261, 270, 271, 180, 181, 264, 265, 27, 53, 28, 82, 83, 272, 149, 271, 264, 265, 273, 54, 28, 36, 12,\n        256, 274, 275, 159, 276, 141, 142, 143, 28, 29, 36, 158, 159, 277, 278, 279, 4, 5, 227, 244, 280, 228, 19, 20,\n        229, 230, 231, 232, 233, 234, 235, 236, 237, 235, 236, 238, 239, 240, 241, 242, 217, 281, 9, 10, 11, 282, 20,\n        229, 230, 231, 232, 233, 234, 235, 236, 237, 235, 236, 238, 239, 240, 241, 242, 217, 283, 62, 63, 227, 228, 9,\n        19, 281, 229, 230, 231, 232, 233, 234, 235, 236, 237, 284, 285, 286, 287, 288, 20, 289, 283, 244, 290, 291, 27,\n        28, 36, 149, 271, 264, 265, 180, 188, 181, 187, 180, 188, 181, 264, 265, 292, 293, 294, 54, 28, 30, 31, 32, 33,\n        34, 260, 295, 269, 267, 268, 296, 297, 298, 260, 299, 300, 301, 302, 303, 304, 31, 305, 306, 148, 179, 264, 180,\n        181, 188, 307, 180, 188, 181, 149, 308, 309, 269, 267, 310, 308, 309, 311, 31, 312, 313, 314, 315, 316, 317,\n        318, 31, 319, 306, 148, 320, 321, 284, 285, 286, 287, 288, 322, 12, 323, 53, 256, 141, 142, 143, 53, 159, 253,\n        273, 324, 254, 259, 226, 4, 26, 245, 40, 28, 30, 31, 32, 33, 34, 325, 35, 326, 27, 28, 29, 263, 27, 53, 186,\n        187, 180, 292, 293, 327, 328, 329, 330, 331, 332, 333, 334, 323, 53, 335, 54, 336, 329, 330, 331, 332, 337, 338,\n        339, 31, 340, 341, 342, 294, 54, 28, 45, 46, 49, 50, 51, 31, 57, 58, 343, 344, 345, 346, 217, 347, 215, 216,\n        217, 27, 14, 15, 18, 348, 349, 15, 16, 348, 257, 225, 251, 27, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359,\n        360, 361, 362, 363, 364, 182, 183, 184, 185, 146, 365, 366, 367, 352, 353, 27, 53, 368, 355, 358, 359, 360, 361,\n        369, 236, 237, 370, 371, 372, 373, 238, 239, 240, 241, 242, 217, 374, 375, 376, 31, 377, 378, 35, 379, 380, 41,\n        326, 381, 382, 383, 384, 72, 196, 385, 196, 386, 387, 56, 388, 389, 390, 391, 392, 325, 393, 394, 382, 395, 396,\n        397, 398, 399, 400, 31, 401, 402, 403, 404, 405, 406, 407, 408, 409, 31, 410, 411, 412, 413, 414, 415, 213, 214,\n        215, 216, 217, 416, 417, 27, 28, 29, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432,\n        433, 318, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 439, 444, 427, 445, 446, 435, 428, 435, 446, 447,\n        448, 449, 450, 352, 353, 451, 452, 408, 409, 31, 410, 411, 314, 315, 316, 317, 318, 236, 453, 239, 240, 241,\n        242, 217, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 203, 465, 205, 466, 467, 468, 469, 470, 40, 28,\n        45, 46, 49, 50, 471, 472, 473, 474, 148, 475, 476, 473, 474, 148, 307, 180, 181, 191, 477, 193, 478, 479, 480,\n        481, 482, 483, 67, 68, 69, 31, 70, 71, 72, 484, 485, 486, 487, 27, 28, 36, 488, 489, 490, 40, 28, 30, 31, 32,\n        33, 34, 35, 41, 491, 213, 214, 492,\n      ],\n      config: {\n        type: {\n          enum: {\n            text: [\n              'total',\n              'test/pkg/agent.(*Target).start.func1',\n              'test/pkg/agent.(*Target).scrape',\n              'test/pkg/distributor.(*Distributor).Push',\n              'compress/gzip.(*Writer).Write',\n              'compress/flate.(*compressor).write',\n              'compress/flate.(*compressor).deflate',\n              'compress/flate.(*compressor).writeBlock',\n              'compress/flate.(*huffmanBitWriter).writeBlock',\n              'compress/flate.(*huffmanBitWriter).indexTokens',\n              'compress/flate.(*huffmanEncoder).generate',\n              'compress/flate.(*huffmanEncoder).bitCounts',\n              'runtime.memmove',\n              'compress/flate.(*huffmanEncoder).assignEncodingAndSize',\n              'sort.Sort',\n              'sort.quickSort',\n              'sort.insertionSort',\n              'compress/flate.(*byFreq).sort',\n              'sort.doPivot',\n              'compress/flate.(*huffmanBitWriter).writeTokens',\n              'compress/flate.(*huffmanBitWriter).writeCode',\n              'compress/flate.offsetCode',\n              'compress/flate.(*huffmanBitWriter).dynamicSize',\n              'compress/flate.(*compressor).findMatch',\n              'compress/flate.matchLen',\n              'compress/flate.hash4',\n              'compress/flate.NewWriter',\n              'runtime.newobject',\n              'runtime.mallocgc',\n              'runtime.memclrNoHeapPointers',\n              'runtime.gcAssistAlloc',\n              'runtime.systemstack',\n              'runtime.gcAssistAlloc.func1',\n              'runtime.gcAssistAlloc1',\n              'runtime.gcDrainN',\n              'runtime.scanobject',\n              'runtime.heapBitsSetType',\n              'runtime.heapBitsSetTypeGCProg',\n              'runtime.runGCProg',\n              'compress/flate.(*compressor).initDeflate',\n              'runtime.makeslice',\n              'runtime.pageIndexOf',\n              'test/pkg/pprof.OpenRaw',\n              'test/pkg/gen/google/v1.(*Profile).UnmarshalVT',\n              'test/pkg/gen/google/v1.(*Sample).UnmarshalVT',\n              'runtime.(*mcache).nextFree',\n              'runtime.(*mcache).refill',\n              'runtime.(*mcentral).uncacheSpan',\n              'runtime.(*spanSet).push',\n              'runtime.(*mcentral).cacheSpan',\n              'runtime.(*mcentral).grow',\n              'runtime.(*mheap).alloc',\n              'runtime.getMCache',\n              'runtime.nextFreeFast',\n              'runtime.growslice',\n              'test/pkg/gen/google/v1.(*Location).UnmarshalVT',\n              'runtime.heapBitsForAddr',\n              'runtime.(*mheap).alloc.func1',\n              'runtime.(*mheap).allocSpan',\n              'runtime.(*mheap).allocMSpanLocked',\n              'runtime.(*fixalloc).alloc',\n              'runtime.(*headTailIndex).incTail',\n              'compress/gzip.(*Writer).Close',\n              'compress/flate.(*compressor).close',\n              'test/pkg/pprof.(*Profile).Normalize',\n              'test/pkg/pprof.(*sortedSample).Less',\n              'test/pkg/pprof.(*sortedSample).Swap',\n              'runtime.gcWriteBarrierR8',\n              'runtime.gcWriteBarrier',\n              'runtime.wbBufFlush',\n              'runtime.wbBufFlush.func1',\n              'runtime.wbBufFlush1',\n              'runtime.findObject',\n              'test/pkg/pprof.(*Profile).clearSampleReferences',\n              'test/pkg/slices.RemoveInPlace[...]',\n              'test/pkg/pprof.(*Profile).clearSampleReferences.func1',\n              'test/pkg/pprof.StacktracesHasher.Hashes',\n              'github.com/cespare/xxhash/v2.round',\n              'github.com/cespare/xxhash/v2.(*Digest).Sum64',\n              'github.com/cespare/xxhash/v2.(*Digest).Write',\n              'github.com/cespare/xxhash/v2.u64',\n              'github.com/samber/lo.Uniq[...]',\n              'runtime.mapaccess2_fast64',\n              'runtime.memhash64',\n              'runtime.bucketMask',\n              'test/pkg/pprof.(*Profile).Normalize.func1',\n              'test/pkg/pprof.(*Profile).Normalize.func1.1',\n              'test/pkg/gen/google/v1.(*Profile).MarshalToVT',\n              'test/pkg/gen/google/v1.(*Profile).MarshalToSizedBufferVT',\n              'test/pkg/gen/google/v1.(*Sample).MarshalToSizedBufferVT',\n              'test/pkg/gen/google/v1.(*Profile).SizeVT',\n              'test/pkg/gen/google/v1.(*Sample).SizeVT',\n              'test/pkg/gen/google/v1.encodeVarint',\n              'test/pkg/gen/google/v1.(*Location).SizeVT',\n              'io/ioutil.ReadAll',\n              'io.ReadAll',\n              'compress/gzip.(*Reader).Read',\n              'compress/flate.(*decompressor).Read',\n              'compress/flate.(*dictDecoder).tryWriteCopy',\n              'compress/flate.(*decompressor).huffmanBlock',\n              'compress/flate.(*dictDecoder).writeCopy',\n              'compress/flate.(*decompressor).huffSym',\n              'bytes.(*Reader).ReadByte',\n              'compress/flate.(*decompressor).moreBits',\n              'compress/flate.(*decompressor).nextBlock',\n              'net/http.(*conn).serve',\n              'net/http.serverHandler.ServeHTTP',\n              'net/http.HandlerFunc.ServeHTTP',\n              'test/pkg/util.glob..func1.1',\n              'golang.org/x/net/http2/h2c.h2cHandler.ServeHTTP',\n              'test/pkg/create.(*create).initServer.func2.1',\n              'github.com/opentracing-contrib/go-stdlib/nethttp.MiddlewareFunc.func5',\n              'github.com/weaveworks/common/middleware.Log.Wrap.func1',\n              'github.com/weaveworks/common/middleware.Instrument.Wrap.func1',\n              'github.com/felixge/httpsnoop.(*Metrics).CaptureMetrics',\n              'github.com/weaveworks/common/middleware.Instrument.Wrap.func1.2',\n              'github.com/gorilla/mux.(*Router).ServeHTTP',\n              'github.com/bufbuild/connect-go.(*Handler).ServeHTTP',\n              'github.com/bufbuild/connect-go.NewUnaryHandler[...].func1',\n              'github.com/bufbuild/connect-go.NewUnaryHandler[...].func1.1',\n              'test/pkg/ingester.(*Ingester).Push',\n              'github.com/klauspost/compress/gzip.(*Reader).Read',\n              'github.com/klauspost/compress/flate.(*decompressor).Read',\n              'github.com/klauspost/compress/flate.(*dictDecoder).tryWriteCopy',\n              'github.com/klauspost/compress/flate.(*dictDecoder).writeByte',\n              'github.com/klauspost/compress/flate.(*decompressor).huffmanBytesReader',\n              'github.com/klauspost/compress/flate.(*dictDecoder).writeCopy',\n              'github.com/klauspost/compress/flate.(*decompressor).nextBlock',\n              'runtime.(*mcache).allocLarge',\n              'runtime.(*pageAlloc).alloc',\n              'runtime.(*pageAlloc).allocRange',\n              'runtime.(*pageAlloc).update',\n              'runtime.(*pallocBits).summarize',\n              'test/pkg/create.(*Head).Ingest',\n              'test/pkg/create.(*Head).convertSamples',\n              'test/pkg/create.(*deduplicatingSlice[...]).ingest',\n              'test/pkg/create.(*stacktracesHelper).rewrite',\n              'test/pkg/create.idConversionTable.rewriteUint64',\n              'runtime.add',\n              'test/pkg/create.(*stacktracesHelper).key',\n              'runtime.mapassign_fast64',\n              'runtime.hashGrow',\n              'runtime.makeBucketArray',\n              'runtime.newarray',\n              'runtime.profilealloc',\n              'runtime.mProf_Malloc',\n              'runtime.callers',\n              'runtime.callers.func1',\n              'runtime.gentraceback',\n              'runtime.findfunc',\n              'runtime.(*hmap).newoverflow',\n              'runtime.releasem',\n              'runtime.growWork_fast64',\n              'runtime.evacuate_fast64',\n              'encoding/binary.littleEndian.PutUint64',\n              'runtime.acquirem',\n              'test/pkg/create.(*labelCache).rewriteLabels',\n              'runtime.mapaccess1_fast64',\n              'runtime.mapaccess2_faststr',\n              'aeshashbody',\n              'memeqbody',\n              'runtime.mapaccess2',\n              'runtime.memhash_varlen',\n              'runtime.evacuated',\n              'test/pkg/create.(*locationsHelper).key',\n              'runtime.bucketShift',\n              'test/pkg/create.(*stringsHelper).addToRewriter',\n              'test/pkg/create.(*locationsHelper).rewrite',\n              'github.com/prometheus/client_golang/prometheus.(*CounterVec).WithLabelValues',\n              'github.com/prometheus/client_golang/prometheus.(*MetricVec).GetMetricWithLabelValues',\n              'github.com/prometheus/client_golang/prometheus.(*MetricVec).hashLabelValues',\n              'github.com/prometheus/client_golang/prometheus.hashAdd',\n              'test/pkg/create.(*deltaProfiles).computeDelta',\n              'test/pkg/create.deltaSamples',\n              'runtime.typedmemmove',\n              'runtime.bulkBarrierPreWrite',\n              'test/pkg/create.copySlice[...]',\n              'runtime.add1',\n              'runtime.roundupsize',\n              'runtime.pcdatavalue',\n              'runtime.pcvalue',\n              'runtime.step',\n              'github.com/go-kit/log.(*context).Log',\n              'github.com/go-kit/log.bindValues',\n              'github.com/go-kit/log.Caller.func1',\n              'runtime.Caller',\n              'runtime.(*Frames).Next',\n              'runtime.funcline1',\n              'runtime.readvarint',\n              'test/pkg/gen/google/v1.(*Profile).ReturnToVTPool',\n              'test/pkg/gen/google/v1.(*Profile).ResetVT',\n              'github.com/bufbuild/connect-go.(*errorTranslatingSender).Send',\n              'github.com/bufbuild/connect-go.(*connectUnaryHandlerSender).Send',\n              'github.com/bufbuild/connect-go.(*connectUnaryMarshaler).Marshal',\n              'github.com/bufbuild/connect-go.(*compressionPool).Compress',\n              'github.com/bufbuild/connect-go.(*compressionPool).putCompressor',\n              'runtime.spanOf',\n              'compress/gzip.(*Writer).Reset',\n              'compress/gzip.(*Writer).init',\n              'compress/flate.(*Writer).Reset',\n              'compress/flate.(*compressor).reset',\n              'github.com/bufbuild/connect-go.(*compressionPool).getCompressor',\n              'github.com/bufbuild/connect-go.receiveUnaryRequest[...]',\n              'github.com/bufbuild/connect-go.(*errorTranslatingReceiver).Receive',\n              'github.com/bufbuild/connect-go.(*connectUnaryHandlerReceiver).Receive',\n              'github.com/bufbuild/connect-go.(*connectUnaryUnmarshaler).UnmarshalFunc',\n              'bytes.(*Buffer).ReadFrom',\n              'github.com/weaveworks/common/middleware.(*reqBody).Read',\n              'net/http.(*body).Read',\n              'net/http.(*body).readLocked',\n              'net/http/internal.(*chunkedReader).Read',\n              'bufio.(*Reader).Read',\n              'net/http.(*connReader).Read',\n              'net.(*conn).Read',\n              'net.(*netFD).Read',\n              'syscall.Read',\n              'syscall.read',\n              'syscall.Syscall',\n              'net/http.(*ServeMux).ServeHTTP',\n              'net/http/pprof.Index',\n              'net/http/pprof.handler.ServeHTTP',\n              'runtime/pprof.(*Profile).WriteTo',\n              'runtime/pprof.writeAlloc',\n              'runtime/pprof.writeHeapInternal',\n              'runtime/pprof.writeHeapProto',\n              'runtime/pprof.(*profileBuilder).pbSample',\n              'runtime/pprof.(*profileBuilder).flush',\n              'compress/flate.(*compressor).encSpeed',\n              'compress/flate.(*huffmanBitWriter).writeBlockDynamic',\n              'github.com/felixge/httpsnoop.(*rw).Write',\n              'github.com/felixge/httpsnoop.(*Metrics).CaptureMetrics.func2.1',\n              'github.com/weaveworks/common/middleware.(*badResponseLoggingWriter).Write',\n              'github.com/opentracing-contrib/go-stdlib/nethttp.(*statusCodeTracker).Write',\n              'net/http.(*response).Write',\n              'net/http.(*response).write',\n              'bufio.(*Writer).Write',\n              'bufio.(*Writer).Flush',\n              'net/http.(*chunkWriter).Write',\n              'net/http.checkConnErrorWriter.Write',\n              'net.(*conn).Write',\n              'net.(*netFD).Write',\n              'internal/poll.(*FD).Write',\n              'syscall.write',\n              'compress/flate.token.length',\n              'compress/flate.(*deflateFast).encode',\n              'compress/flate.(*compressor).init',\n              'runtime/pprof.writeHeapProto.func1',\n              'runtime/pprof.(*profileBuilder).pbLabel',\n              'runtime/pprof.(*protobuf).int64Opt',\n              'runtime/pprof.(*protobuf).endMessage',\n              'runtime/pprof.(*protobuf).startMessage',\n              'runtime/pprof.(*protobuf).uint64s',\n              'runtime/pprof.(*protobuf).int64s',\n              'runtime/pprof.(*profileBuilder).appendLocsForStack',\n              'runtime/pprof.(*profileBuilder).emitLocation',\n              'runtime.memclrNoHeapPointersChunked',\n              'runtime.mapassign_faststr',\n              'runtime.mapaccess1_faststr',\n              'runtime.memclrHasPointers',\n              'runtime/pprof.(*profileBuilder).pbLine',\n              'runtime.duffcopy',\n              'runtime.duffzero',\n              'runtime.CallersFrames',\n              'runtime/pprof.allFrames',\n              'runtime.funcInfo.entry',\n              'runtime.(*moduledata).textAddr',\n              'runtime.funcfile',\n              'runtime.findnull',\n              'indexbytebody',\n              'runtime.funcname',\n              'runtime.(*Func).Entry',\n              'runtime.pcdatavalue1',\n              'runtime/pprof.runtime_expandFinalInlineFrame',\n              'runtime/pprof.(*profileBuilder).stringIndex',\n              'runtime.growWork_faststr',\n              'runtime.evacuate_faststr',\n              'runtime.advanceEvacuationMark',\n              'runtime/pprof.(*protobuf).uint64Opt',\n              'runtime.funcdata',\n              'runtime/pprof.(*profileBuilder).build',\n              'compress/flate.(*deflateFast).matchLen',\n              'compress/flate.(*huffmanBitWriter).writeBits',\n              'compress/flate.(*huffmanBitWriter).writeDynamicHeader',\n              'compress/flate.hash',\n              'fmt.Fprintf',\n              'fmt.(*pp).doPrintf',\n              'fmt.(*pp).printArg',\n              'fmt.(*pp).fmtInteger',\n              'fmt.(*fmt).fmtInteger',\n              'compress/flate.token.offset',\n              'compress/flate.load64',\n              'runtime.FuncForPC',\n              'runtime/pprof.newProfileBuilder',\n              'runtime/pprof.(*profileBuilder).readMapping',\n              'os.ReadFile',\n              'runtime.(*Func).Name',\n              'runtime/pprof.scaleHeapSample',\n              'math.archExp',\n              'runtime.(*MemProfileRecord).Stack',\n              'runtime/pprof.writeGoroutine',\n              'runtime/pprof.writeRuntimeProfile',\n              'runtime/pprof.runtime_goroutineProfileWithLabels',\n              'runtime.goroutineProfileWithLabels',\n              'runtime.forEachGRace',\n              'runtime.goroutineProfileWithLabels.func4',\n              'runtime.goroutineProfileWithLabels.func4.1',\n              'runtime.saveg',\n              'runtime.funcspdelta',\n              'runtime.goroutineProfileWithLabels.func1',\n              'runtime.isSystemGoroutine',\n              'runtime.goroutineProfileWithLabels.func2',\n              'runtime.startTheWorld',\n              'runtime.startTheWorld.func1',\n              'runtime.startTheWorldWithSema',\n              'runtime.wakep',\n              'runtime.startm',\n              'runtime.notewakeup',\n              'runtime.futexwakeup',\n              'runtime.futex',\n              'runtime.goroutineProfileWithLabels.func3',\n              'runtime/pprof.printCountProfile',\n              'runtime/pprof.printCountProfile.func1',\n              'bytes.(*Buffer).Write',\n              'runtime.slicebytetostring',\n              'runtime.overLoadFactor',\n              'runtime.heapBits.bits',\n              'runtime.greyobject',\n              'runtime/pprof.parseProcSelfMaps',\n              'runtime/pprof.elfBuildID',\n              'os.OpenFile',\n              'syscall.Open',\n              'syscall.openat',\n              'syscall.Syscall6',\n              'runtime/pprof.parseProcSelfMaps.func1',\n              'bytes.Cut',\n              'runtime/pprof.(*profileBuilder).addMapping',\n              'os.Open',\n              'os.openFileNolog',\n              'os.newFile',\n              'runtime.SetFinalizer',\n              'runtime.SetFinalizer.func2',\n              'runtime.addfinalizer',\n              'runtime.addspecial',\n              'runtime.(*pageAlloc).allocToCache',\n              'os.(*File).Stat',\n              'internal/poll.(*FD).Fstat',\n              'syscall.Fstat',\n              'os.(*File).Read',\n              'runtime/pprof.(*keysByCount).Less',\n              'cmpbody',\n              'github.com/prometheus/client_golang/prometheus.(*GaugeVec).WithLabelValues',\n              'runtime.assertI2I',\n              'runtime.getitab',\n              'runtime.(*itabTableType).find',\n              'github.com/weaveworks/common/middleware.Instrument.getRouteName',\n              'github.com/weaveworks/common/middleware.getRouteName',\n              'github.com/weaveworks/common/middleware.MakeLabelValue',\n              'strings.Trim',\n              'github.com/gorilla/mux.(*Router).Match',\n              'github.com/gorilla/mux.(*Route).Match',\n              'github.com/gorilla/mux.(*routeRegexp).Match',\n              'regexp.(*Regexp).doExecute',\n              'regexp.(*Regexp).backtrack',\n              'regexp.(*Regexp).tryBacktrack',\n              'github.com/weaveworks/common/logging.gokit.Debugf',\n              'github.com/uber/jaeger-client-go.(*Tracer).Extract',\n              'github.com/uber/jaeger-client-go.(*TextMapPropagator).Extract',\n              'runtime.assertE2I2',\n              'github.com/weaveworks/common/middleware.Tracer.Wrap.func1',\n              'net/http.(*response).finishRequest',\n              'net/http.(*chunkWriter).writeHeader',\n              'net/http.Header.writeSubset',\n              'net/http.Header.sortedKeyValues',\n              'sync.(*Pool).Get',\n              'net/http.(*conn).readRequest',\n              'runtime.mapiterinit',\n              'runtime.gcBgMarkWorker',\n              'runtime.gcBgMarkWorker.func2',\n              'runtime.gcDrain',\n              'runtime.(*gcBits).bytep',\n              'runtime.(*mspan).objIndex',\n              'runtime.(*gcWork).put',\n              'runtime.getempty',\n              'runtime.putfull',\n              'runtime.(*lfstack).push',\n              'runtime.(*mspan).markBitsForIndex',\n              'runtime.markBits.isMarked',\n              'runtime.arenaIndex',\n              'runtime.(*gcWork).tryGet',\n              'runtime.trygetfull',\n              'runtime.spanOfUnchecked',\n              'runtime.heapBits.next',\n              'runtime.gcFlushBgCredit',\n              'runtime.(*gcWork).balance',\n              'runtime.handoff',\n              'runtime.(*gcWork).tryGetFast',\n              'runtime.gcMarkDone',\n              'runtime.gcMarkTermination',\n              'runtime.mProf_Flush',\n              'runtime.mProf_FlushLocked',\n              'runtime.(*bucket).mp',\n              'runtime.gcMarkTermination.func4',\n              'runtime.forEachP',\n              'runtime.gcMarkTermination.func4.1',\n              'runtime.(*mcache).prepareForSweep',\n              'runtime.(*mcache).releaseAll',\n              'net/http.(*persistConn).readLoop',\n              'runtime.selectgo',\n              'runtime.send',\n              'runtime.goready',\n              'runtime.goready.func1',\n              'runtime.ready',\n              'runtime.runqput',\n              'bufio.(*Reader).Peek',\n              'bufio.(*Reader).fill',\n              'net/http.(*persistConn).Read',\n              'net/http.(*persistConn).readResponse',\n              'github.com/opentracing-contrib/go-stdlib/nethttp.(*Tracer).gotFirstResponseByte',\n              'runtime.bgsweep',\n              'runtime.sweepone',\n              'runtime.(*sweepLocker).tryAcquire',\n              'runtime.(*sweepLocked).sweep',\n              'runtime.(*gcBitsArena).tryAlloc',\n              'runtime.spanClass.sizeclass',\n              'runtime/internal/atomic.(*Uint32).CompareAndSwap',\n              'runtime.mcall',\n              'runtime.park_m',\n              'runtime.schedule',\n              'runtime.findrunnable',\n              'runtime.netpoll',\n              'runtime.epollwait',\n              'runtime.stopm',\n              'runtime.notesleep',\n              'runtime.futexsleep',\n              'runtime.(*randomOrder).start',\n              'runtime.checkTimers',\n              'runtime.runtimer',\n              'runtime.dodeltimer0',\n              'runtime.gcstopm',\n              'runtime.lock2',\n              'runtime.procyield',\n              'runtime.(*lfstack).pop',\n              'runtime.gosched_m',\n              'runtime.lock',\n              'runtime.goschedImpl',\n              'runtime.execute',\n              'runtime.casgstatus',\n              'net/http.(*persistConn).writeLoop',\n              'net/http.(*Request).write',\n              'net/http.newTransferWriter',\n              'runtime.convI2I',\n              'runtime.chansend1',\n              'runtime.chansend',\n              'net/http.persistConnWriter.Write',\n              'runtime.exitsyscall',\n              'runtime.exitsyscallfast',\n              'runtime.exitsyscallfast_reacquired',\n              'test/pkg/distributor.(*Distributor).Push.func1',\n              'test/pkg/distributor.(*Distributor).sendProfiles',\n              'test/pkg/distributor.(*Distributor).sendProfilesErr',\n              'test/pkg/gen/ingester/v1/ingesterv1connect.(*ingesterServiceClient).Push',\n              'github.com/bufbuild/connect-go.(*Client[...]).CallUnary',\n              'github.com/bufbuild/connect-go.NewClient[...].func2',\n              'github.com/bufbuild/connect-go.NewClient[...].func1',\n              'github.com/bufbuild/connect-go.receiveUnaryResponse[...]',\n              'github.com/bufbuild/connect-go.(*connectUnaryClientReceiver).Receive',\n              'github.com/bufbuild/connect-go.(*compressionPool).Decompress',\n              'github.com/bufbuild/connect-go.(*compressionPool).getDecompressor',\n              'compress/gzip.(*Reader).Reset',\n              'compress/gzip.(*Reader).readHeader',\n              'compress/flate.(*dictDecoder).init',\n              'runtime.heapBits.initSpan',\n              'compress/flate.(*decompressor).Reset',\n              'runtime.newstack',\n              'runtime.copystack',\n              'compress/flate.NewReader',\n              'compress/flate.fixedHuffmanDecoderInit',\n              'github.com/bufbuild/connect-go.(*connectClientSender).Send',\n              'github.com/bufbuild/connect-go.(*connectUnaryMarshaler).write',\n              'github.com/bufbuild/connect-go.(*duplexHTTPCall).Write',\n              'io.(*pipe).write',\n              'runtime.chanrecv1',\n              'runtime.chanrecv',\n              'runtime.recv',\n              'github.com/bufbuild/connect-go.(*errorTranslatingReceiver).Close',\n              'github.com/bufbuild/connect-go.(*connectUnaryClientReceiver).Close',\n              'github.com/bufbuild/connect-go.(*duplexHTTPCall).CloseRead',\n              'github.com/opentracing-contrib/go-stdlib/nethttp.closeTracker.Close',\n              'runtime/pprof.profileWriter',\n              'runtime/pprof.(*profileBuilder).addCPUData',\n              'runtime/pprof.(*profMap).lookup',\n              'net/http.(*connReader).backgroundRead',\n              'internal/poll.(*FD).Read',\n            ],\n          },\n        },\n      },\n    },\n  ],\n};\n\nexport const flameGraphDataDiff: DataFrameDTO = {\n  name: 'response',\n  meta: { preferredVisualisationType: 'flamegraph' },\n  fields: [\n    {\n      name: 'level',\n      values: [\n        0, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 20, 21,\n        19, 20, 21, 19, 17, 18, 19, 20, 20, 21, 19, 20, 21, 19, 17, 18, 19, 20, 21, 22, 23, 24, 25, 23, 24, 21, 19, 20,\n        21, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 22, 15, 16, 17, 18, 19,\n        20, 17, 18, 19, 20, 21, 22, 23, 23, 24, 24, 25, 21, 17, 18, 19, 19, 17, 18, 19, 20, 16, 17, 15, 16, 17, 18, 19,\n        20, 21, 22, 23, 24, 25, 22, 22, 22, 22, 23, 20, 20, 16, 17, 18, 19, 16, 17, 15, 16, 17, 18, 19, 20, 21, 22, 23,\n        24, 17, 18, 19, 20, 21, 22, 23, 15, 16, 15, 16, 12, 13, 9, 9, 10, 9, 10, 6, 6, 6, 6, 7, 8, 6, 7, 2, 3, 4, 5, 6,\n        7, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 10, 11, 12, 13, 14, 15, 16, 16, 17, 18, 19, 20, 21, 22,\n        14, 15, 16, 14, 11, 12, 13, 14, 9, 10, 11, 12, 10, 9, 10, 11, 12, 13, 14, 15, 16, 17, 15, 16, 17, 16, 15, 16,\n        17, 16, 17, 16, 15, 16, 17, 18, 19, 20, 21, 19, 4, 5, 6, 7, 8, 9, 6, 7, 8, 6, 7, 8, 9, 10, 7, 4, 5, 6, 7, 8, 3,\n        4, 5, 6, 7, 8, 9, 10, 11, 12, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 6,\n        7, 8, 9, 10, 11, 7, 8, 6, 7, 8, 9, 10, 11, 12, 13, 6, 7, 8, 9, 10, 11, 12, 13, 14, 6, 7, 5, 6, 7, 8, 9, 10, 11,\n        12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 3, 4, 5, 6, 1, 2,\n      ],\n    },\n    {\n      name: 'label',\n      values: [\n        'total',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!Heartbeat.<>c.<.ctor>b__8_0',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!Heartbeat.TimerLoop',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!Heartbeat.OnHeartbeat',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!DateHeaderValueManager.SetDateValues',\n        'Microsoft.Net.Http.Headers!HeaderUtilities.FormatDate',\n        'System!DateTimeFormat.Format',\n        'System.Threading!PortableThreadPool.WorkerThread.WorkerThreadStart',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!KestrelConnection<T>.System.Threading.IThreadPoolWorkItem.Execute',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!KestrelConnection<T>.ExecuteAsync',\n        'System.Runtime.CompilerServices!AsyncMethodBuilderCore.Start<!<ExecuteAsync>d__6>',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!KestrelConnection.<ExecuteAsync>d__6<T>.MoveNext',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal!HttpConnection..ctor',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal!HttpConnection.ProcessRequestsAsync<!T0>',\n        'System.Runtime.CompilerServices!AsyncMethodBuilderCore.Start<!<ProcessRequestsAsync>d__12>',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal!HttpConnection.<ProcessRequestsAsync>d__12<TContext>.MoveNext',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1Connection..ctor',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1OutputProducer..ctor',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpProtocol..ctor',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpProtocol.ProcessRequestsAsync<!T0>',\n        'System.Runtime.CompilerServices!AsyncMethodBuilderCore.Start<!<ProcessRequestsAsync>d__222>',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpProtocol.<ProcessRequestsAsync>d__222<TContext>.MoveNext',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpProtocol.ProcessRequests<!T0>',\n        'System.Runtime.CompilerServices!AsyncMethodBuilderCore.Start<!<ProcessRequests>d__223>',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpProtocol.<ProcessRequests>d__223<TContext>.MoveNext',\n        'Microsoft.AspNetCore.HostFiltering!HostFilteringMiddleware.Invoke',\n        'Microsoft.AspNetCore.Routing!EndpointMiddleware.Invoke',\n        'Example!Program.<>c__DisplayClass0_0.<Main>b__0',\n        'Example!BikeService.Order',\n        'Example!OrderService.FindNearestVehicle',\n        'Pyroscope!LabelSet.BuildUpon',\n        'Pyroscope!LabelsWrapper.Do',\n        'Pyroscope!Profiler.get_Instance',\n        'Pyroscope!LabelSet.Builder.Add',\n        'System.Collections.Generic!Dictionary<TKey, TKey>.TryInsert',\n        'System.Collections.Generic!Dictionary<TKey, TKey>.Initialize',\n        'Pyroscope!LabelSet.Builder.Build',\n        'Example!Program.<>c__DisplayClass0_0.<Main>b__1',\n        'Example!ScooterService.Order',\n        'Example!OrderService.FindNearestVehicle',\n        'Pyroscope!LabelSet.BuildUpon',\n        'Pyroscope!LabelsWrapper.Do',\n        'Pyroscope!Profiler.get_Instance',\n        'Pyroscope!LabelSet.Builder.Add',\n        'System.Collections.Generic!Dictionary<TKey, TKey>.TryInsert',\n        'System.Collections.Generic!Dictionary<TKey, TKey>.Initialize',\n        'Pyroscope!LabelSet.Builder.Build',\n        'Example!Program.<>c__DisplayClass0_0.<Main>b__2',\n        'Example!CarService.Order',\n        'Example!OrderService.FindNearestVehicle',\n        'Pyroscope!LabelsWrapper.Do',\n        'Example!OrderService.<>c__DisplayClass0_1.<FindNearestVehicle>b__0',\n        'Example!OrderService.CheckDriverAvailability',\n        'Pyroscope!LabelSet.BuildUpon',\n        'System.Collections.Generic!Dictionary<TKey, TKey>..ctor',\n        'System.Collections.Generic!Dictionary<TKey, TKey>.Initialize',\n        'Pyroscope!LabelsWrapper.Do',\n        'Pyroscope!Profiler.get_Instance',\n        'Pyroscope!Profiler.get_Instance',\n        'Pyroscope!LabelSet.Builder.Add',\n        'System.Collections.Generic!Dictionary<TKey, TKey>.TryInsert',\n        'System.Collections.Generic!Dictionary<TKey, TKey>.Initialize',\n        'Microsoft.AspNetCore.Http!RequestDelegateFactory.ExecuteWriteStringResponseAsync',\n        'Microsoft.AspNetCore.Http!HttpResponseWritingExtensions.WriteAsync',\n        'Microsoft.AspNetCore.Http!HttpResponseWritingExtensions.WriteAsync',\n        'Microsoft.AspNetCore.Http!DefaultHttpResponse.StartAsync',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpProtocol.Microsoft.AspNetCore.Http.Features.IHttpResponseBodyFeature.StartAsync',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1OutputProducer.WriteResponseHeaders',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.PipeWriterHelpers!ConcurrentPipeWriter.GetSpan',\n        'System.IO.Pipelines!Pipe.DefaultPipeWriter.GetSpan',\n        'System.IO.Pipelines!Pipe.AllocateWriteHeadSynchronized',\n        'System.IO.Pipelines!Pipe.CreateSegmentUnsynchronized',\n        'Microsoft.Extensions.Logging!LoggerMessage.<>c__DisplayClass10_0<T1>.<Define>g__Log|0',\n        'Microsoft.Extensions.Logging!Logger<T>.Microsoft.Extensions.Logging.ILogger.Log<!LogValues>',\n        'Microsoft.Extensions.Logging!Logger.Log<!LogValues>',\n        'Microsoft.Extensions.Logging!Logger.<Log>g__LoggerLog|12_0<!LogValues>',\n        'Microsoft.Extensions.Logging.Console!ConsoleLogger.Log<!LogValues>',\n        'Microsoft.Extensions.Logging.Console!SimpleConsoleFormatter.Write<!LogValues>',\n        'Microsoft.Extensions.Logging!LoggerMessage.LogValues.<>c<T0>.<.cctor>b__12_0',\n        'Microsoft.Extensions.Logging!LoggerMessage.LogValues<T0>.ToString',\n        'System!String.FormatHelper',\n        'System!Span<System!Char>.ToString',\n        'System!String.Ctor',\n        'System.Text!StringBuilder.ToString',\n        'Microsoft.AspNetCore.Hosting!HostingApplication.CreateContext',\n        'Microsoft.AspNetCore.Hosting!HostingApplicationDiagnostics.BeginRequest',\n        'Microsoft.AspNetCore.Hosting!HostingApplicationDiagnostics.Log.RequestScope',\n        'Microsoft.AspNetCore.Hosting!HostingApplicationDiagnostics.Log.HostingLogScope..ctor',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpProtocol.Microsoft.AspNetCore.Http.Features.IHttpRequestIdentifierFeature.get_TraceIdentifier',\n        'System!String.Create<System!ValueTuple>',\n        'Microsoft.AspNetCore.Hosting!HostingApplicationDiagnostics.LogRequestStarting',\n        'Microsoft.Extensions.Logging!Logger.Log<!T0>',\n        'Microsoft.Extensions.Logging!Logger.<Log>g__LoggerLog|12_0<!T0>',\n        'Microsoft.Extensions.Logging.Console!ConsoleLogger.Log<!T0>',\n        'Microsoft.Extensions.Logging.Console!SimpleConsoleFormatter.Write<!T0>',\n        'Microsoft.AspNetCore.Hosting!HostingRequestStartingLog.ToString',\n        'System.Buffers!TlsOverPerCoreLockedStacksArrayPool<System!Char>.Rent',\n        'System.Runtime.CompilerServices!DefaultInterpolatedStringHandler.ToStringAndClear',\n        'System!String.Ctor',\n        'System.Buffers!TlsOverPerCoreLockedStacksArrayPool<System!Char>.Return',\n        'System.Buffers!TlsOverPerCoreLockedStacksArrayPool<System!Char>.InitializeTlsBucketsAndTrimming',\n        'System.Text!StringBuilder.ToString',\n        'Microsoft.AspNetCore.Hosting!HostingApplicationDiagnostics.StartActivity',\n        'System.Diagnostics!Activity.Start',\n        'System!String.Create<System!ValueTuple>',\n        'System.Threading!ExecutionContext.SetLocalValue',\n        'Microsoft.Extensions.Logging!Logger.BeginScope<!T0>',\n        'Microsoft.Extensions.Logging!LoggerFactoryScopeProvider.Push',\n        'System.Threading!ExecutionContext.SetLocalValue',\n        'System.Threading!AsyncLocalValueMap.TwoElementAsyncLocalValueMap.Set',\n        'Microsoft.AspNetCore.Http!DefaultHttpContextFactory.Create',\n        'Microsoft.AspNetCore.Http!DefaultHttpContext..ctor',\n        'Microsoft.AspNetCore.Hosting!HostingApplication.DisposeContext',\n        'Microsoft.AspNetCore.Hosting!HostingApplicationDiagnostics.LogRequestFinished',\n        'Microsoft.Extensions.Logging!Logger.Log<!T0>',\n        'Microsoft.Extensions.Logging!Logger.<Log>g__LoggerLog|12_0<!T0>',\n        'Microsoft.Extensions.Logging.Console!ConsoleLogger.Log<!T0>',\n        'Microsoft.Extensions.Logging.Console!SimpleConsoleFormatter.Write<!T0>',\n        'Microsoft.AspNetCore.Hosting!HostingRequestFinishedLog.ToString',\n        'System!Number.FormatDouble',\n        'System.Text!ValueStringBuilder.ToString',\n        'System!Span<System!Char>.ToString',\n        'System!String.Ctor',\n        'System!Number.UInt32ToDecStr',\n        'System!String.Replace',\n        'System!String.Substring',\n        'System.Runtime.CompilerServices!DefaultInterpolatedStringHandler.ToStringAndClear',\n        'System!String.Ctor',\n        'System.Text!StringBuilder.ToString',\n        'System.Text!StringBuilder.set_Length',\n        'Microsoft.AspNetCore.Hosting!HostingApplicationDiagnostics.StopActivity',\n        'System.Diagnostics!Activity.Stop',\n        'System.Threading!ExecutionContext.SetLocalValue',\n        'System.Threading!AsyncLocalValueMap.TwoElementAsyncLocalValueMap.Set',\n        'Microsoft.Extensions.Logging!LoggerFactoryScopeProvider.Scope.Dispose',\n        'System.Threading!ExecutionContext.SetLocalValue',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1Connection.TryParseRequest',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1Connection.ParseRequest',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1Connection.TakeMessageHeaders',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpParser<Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1ParsingHandler>.ParseHeaders',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpParser<Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1ParsingHandler>.TryTakeSingleHeader',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpProtocol.OnHeader',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpRequestHeaders.Append',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!HttpUtilities.GetRequestHeaderString',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!StringUtilities.GetAsciiOrUTF8StringNonNullCharacters',\n        'System!String.Create<System!IntPtr>',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1Connection.TakeStartLine',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpParser<Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1ParsingHandler>.ParseRequestLine',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpParser<Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1ParsingHandler>.ParseRequestLine',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1Connection.OnStartLine',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1Connection.OnOriginFormTarget',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!StringUtilities.GetAsciiStringNonNullCharacters',\n        'System!String.Create<System!IntPtr>',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpProtocol.InitializeBodyControl',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!BodyControl..ctor',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder<System.Threading.Tasks!VoidTaskResult>.AwaitUnsafeOnCompleted<System.Runtime.CompilerServices!ValueTaskAwaiter, !<ProcessRequests>d__223>',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder<System.Threading.Tasks!VoidTaskResult>.GetStateMachineBox<!<ProcessRequests>d__223>',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder<System.Threading.Tasks!VoidTaskResult>.AwaitUnsafeOnCompleted<System.Runtime.CompilerServices!TaskAwaiter, !<ProcessRequestsAsync>d__222>',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder<System.Threading.Tasks!VoidTaskResult>.GetStateMachineBox<!<ProcessRequestsAsync>d__222>',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!KestrelConnection.OnHeartbeat',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder<System.Threading.Tasks!VoidTaskResult>.AwaitUnsafeOnCompleted<System.Runtime.CompilerServices!TaskAwaiter, !<ProcessRequestsAsync>d__12>',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder<System.Threading.Tasks!VoidTaskResult>.GetStateMachineBox<!<ProcessRequestsAsync>d__12>',\n        'System.Threading!CancellationToken.Register',\n        'System.Threading!CancellationTokenSource.Register',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal!HttpConnectionMiddleware<TContext>.OnConnectionAsync',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!KestrelConnection.BeginConnectionScope',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!TimeoutControl..ctor',\n        'Microsoft.Extensions.Logging!Logger.BeginScope<!T0>',\n        'Microsoft.Extensions.Logging!LoggerFactoryScopeProvider.Push',\n        'System.Threading!ExecutionContext.SetLocalValue',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder<System.Threading.Tasks!VoidTaskResult>.AwaitUnsafeOnCompleted<System.Runtime.CompilerServices!TaskAwaiter, !<ExecuteAsync>d__6>',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder<System.Threading.Tasks!VoidTaskResult>.GetStateMachineBox<!<ExecuteAsync>d__6>',\n        'System.Threading!ThreadPoolWorkQueue.Dispatch',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!IOQueue.System.Threading.IThreadPoolWorkItem.Execute',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder.AsyncStateMachineBox<System.Threading.Tasks!VoidTaskResult, Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketConnection.<DoSend>d__28>.MoveNext',\n        'System.Threading!ExecutionContext.RunInternal',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketConnection.<DoSend>d__28.MoveNext',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketConnection.Shutdown',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketConnection.<>c.<FireConnectionClosed>b__29_0',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketConnection.CancelConnectionClosedToken',\n        'System.Threading!CancellationTokenSource.ExecuteCallbackHandlers',\n        'System.Threading!ExecutionContext.RunInternal',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal!HttpConnection.OnConnectionClosed',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1Connection.OnInputOrOutputCompleted',\n        'System.Net.Sockets!SocketAsyncEngine.System.Threading.IThreadPoolWorkItem.Execute',\n        'System.Net.Sockets!Socket.AwaitableSocketAsyncEventArgs.OnCompleted',\n        'System.Net.Sockets!Socket.AwaitableSocketAsyncEventArgs.InvokeContinuation',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder.AsyncStateMachineBox<TResult, TResult>.MoveNext',\n        'System.Threading!ExecutionContext.RunInternal',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets!SocketConnectionListener.<AcceptAsync>d__10.MoveNext',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets!SocketConnectionContextFactory.Create',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketConnection..ctor',\n        'System.IO.Pipelines!DuplexPipe.CreateConnectionPair',\n        'System.IO.Pipelines!Pipe..ctor',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketConnection.Start',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketConnection.DoReceive',\n        'System.Runtime.CompilerServices!AsyncMethodBuilderCore.Start<!<DoReceive>d__27>',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketConnection.<DoReceive>d__27.MoveNext',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketReceiver.WaitForDataAsync',\n        'System.Net.Sockets!Socket.ReceiveAsync',\n        'System.Net.Sockets!SocketAsyncContext..ctor',\n        'System.Net.Sockets!SocketAsyncEventArgs.DoOperationReceive',\n        'System.Net.Sockets!SocketAsyncContext.ReceiveAsync',\n        'System.Net.Sockets!SocketAsyncContext.OperationQueue<TOperation>.StartAsyncOperation',\n        'System.Net.Sockets!SocketAsyncContext.TryRegister',\n        'System.Net.Sockets!SocketAsyncEngine.TryRegisterSocket',\n        'System.Net.Sockets!SocketAsyncEngine.TryRegisterCore',\n        'System.Collections.Concurrent!ConcurrentDictionary<System!IntPtr, System.Net.Sockets!SocketAsyncEngine.SocketAsyncContextWrapper>.TryAddInternal',\n        'System.IO.Pipelines!Pipe.GetMemory',\n        'System.IO.Pipelines!Pipe.AllocateWriteHeadSynchronized',\n        'System.IO.Pipelines!Pipe.CreateSegmentUnsynchronized',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder<System.Threading.Tasks!VoidTaskResult>.GetStateMachineBox<!<DoReceive>d__27>',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketConnection.DoSend',\n        'System.Runtime.CompilerServices!AsyncMethodBuilderCore.Start<!<DoSend>d__28>',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketConnection.<DoSend>d__28.MoveNext',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder<System.Threading.Tasks!VoidTaskResult>.GetStateMachineBox<!<DoSend>d__28>',\n        'System.Net.Sockets!Socket.get_LocalEndPoint',\n        'System.Net.Sockets!IPEndPointExtensions.Create',\n        'System.Net.Internals!SocketAddress.GetIPEndPoint',\n        'System.Net.Internals!SocketAddress.GetIPAddress',\n        'System.Net.Sockets!IPEndPointExtensions.Serialize',\n        'System.Threading.Tasks!Task<TResult>.TrySetResult',\n        'System.Threading.Tasks!Task.RunContinuations',\n        'System.Threading.Tasks!AwaitTaskContinuation.RunOrScheduleAction',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder.AsyncStateMachineBox<TResult, TResult>.MoveNext',\n        'System.Threading!ExecutionContext.RunInternal',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal!ConnectionDispatcher.<>c__DisplayClass8_0.<<StartAcceptingConnectionsCore>g__AcceptConnectionsAsync|0>d<T>.MoveNext',\n        'Microsoft.AspNetCore.Connections!TransportConnection.Microsoft.AspNetCore.Http.Features.IFeatureCollection.Set<!T0>',\n        'System.Collections.Generic!List<T>.AddWithResize',\n        'System.Collections.Generic!List<T>.set_Capacity',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!KestrelConnection<T>..ctor',\n        'Microsoft.AspNetCore.Connections!TransportConnection.Microsoft.AspNetCore.Http.Features.IFeatureCollection.Set<!T0>',\n        'Microsoft.AspNetCore.Connections!TransportConnection.ExtraFeatureSet',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!KestrelConnection..ctor',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!TransportConnectionManager.AddConnection',\n        'Microsoft.AspNetCore.Connections!TransportConnection.get_ConnectionId',\n        'System!String.Create<System!Int64>',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!ConnectionManager.AddConnection',\n        'System.Collections.Concurrent!ConcurrentDictionary<TKey, TKey>.TryAddInternal',\n        'System.Collections.Concurrent!ConcurrentDictionary<TKey, TKey>.TryAddInternal',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!TransportManager.GenericConnectionListener.AcceptAsync',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets!SocketConnectionListener.AcceptAsync',\n        'System.Runtime.CompilerServices!AsyncMethodBuilderCore.Start<!<AcceptAsync>d__10>',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets!SocketConnectionListener.<AcceptAsync>d__10.MoveNext',\n        'System.Net.Sockets!Socket.AwaitableSocketAsyncEventArgs.AcceptAsync',\n        'System.Net.Sockets!Socket.AcceptAsync',\n        'System.Net.Sockets!SocketAsyncEventArgs.DoOperationAccept',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder<TResult>.GetStateMachineBox<!<AcceptAsync>d__10>',\n        'System.Net.Sockets!SocketAsyncEventArgs.AcceptCompletionCallback',\n        'System.Net.Sockets!SocketAsyncEventArgs.FinishOperationSyncSuccess',\n        'System.Net.Sockets!IPEndPointExtensions.Create',\n        'System.Net.Internals!SocketAddress.GetIPEndPoint',\n        'System.Net.Internals!SocketAddress.GetIPAddress',\n        'System.Net!IPAddress..ctor',\n        'System.Net.Sockets!IPEndPointExtensions.Serialize',\n        'System.Net.Internals!SocketAddress..ctor',\n        'System.Net.Internals!SocketAddress..ctor',\n        'System.Net.Sockets!SocketAsyncEventArgs.FinishOperationAccept',\n        'System.Net.Sockets!IPEndPointExtensions.Create',\n        'System.Net.Internals!SocketAddress.GetIPEndPoint',\n        'System.Net.Internals!SocketAddress.GetIPAddress',\n        'System.Net!IPAddress..ctor',\n        'System.Net.Sockets!SocketPal.CreateSocket',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder.AsyncStateMachineBox<System.Threading.Tasks!VoidTaskResult, Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketConnection.<DoReceive>d__27>.MoveNext',\n        'System.Threading!ExecutionContext.RunInternal',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketConnection.<DoReceive>d__27.MoveNext',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketConnection.FireConnectionClosed',\n        'System.Threading!ThreadPool.UnsafeQueueUserWorkItem<!T0>',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder.AsyncStateMachineBox<TResult, TResult>.MoveNext',\n        'System.Threading!ExecutionContext.RunFromThreadPoolDispatchLoop',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpProtocol.<ProcessRequests>d__223<TContext>.MoveNext',\n        'Microsoft.AspNetCore.HostFiltering!HostFilteringMiddleware.Invoke',\n        'Microsoft.AspNetCore.Routing!EndpointMiddleware.Invoke',\n        'Example!Program.<>c__DisplayClass0_0.<Main>b__0',\n        'Example!BikeService.Order',\n        'Example!OrderService.FindNearestVehicle',\n        'Pyroscope!LabelsWrapper.Do',\n        'Pyroscope!Profiler.get_Instance',\n        'Microsoft.AspNetCore.Http!RequestDelegateFactory.ExecuteWriteStringResponseAsync',\n        'Microsoft.AspNetCore.Http!HttpResponseWritingExtensions.WriteAsync',\n        'Microsoft.AspNetCore.Http!HttpResponseWritingExtensions.WriteAsync',\n        'Microsoft.AspNetCore.Http!DefaultHttpResponse.StartAsync',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpProtocol.Microsoft.AspNetCore.Http.Features.IHttpResponseBodyFeature.StartAsync',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1OutputProducer.WriteResponseHeaders',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.PipeWriterHelpers!ConcurrentPipeWriter.GetSpan',\n        'System.IO.Pipelines!Pipe.DefaultPipeWriter.GetSpan',\n        'System.IO.Pipelines!Pipe.AllocateWriteHeadSynchronized',\n        'System.IO.Pipelines!Pipe.CreateSegmentUnsynchronized',\n        'Microsoft.Extensions.Logging!LoggerMessage.<>c__DisplayClass10_0<T1>.<Define>g__Log|0',\n        'Microsoft.Extensions.Logging!Logger<T>.Microsoft.Extensions.Logging.ILogger.Log<!LogValues>',\n        'Microsoft.Extensions.Logging!Logger.Log<!LogValues>',\n        'Microsoft.Extensions.Logging!Logger.<Log>g__LoggerLog|12_0<!LogValues>',\n        'Microsoft.Extensions.Logging.Console!ConsoleLogger.Log<!LogValues>',\n        'Microsoft.Extensions.Logging.Console!SimpleConsoleFormatter.Write<!LogValues>',\n        'Microsoft.Extensions.Logging!LoggerMessage.LogValues.<>c<T0>.<.cctor>b__12_0',\n        'Microsoft.Extensions.Logging!LoggerMessage.LogValues<T0>.ToString',\n        'System!String.FormatHelper',\n        'System!Span<System!Char>.ToString',\n        'System!String.Ctor',\n        'Microsoft.AspNetCore.Hosting!HostingApplication.CreateContext',\n        'Microsoft.AspNetCore.Hosting!HostingApplicationDiagnostics.BeginRequest',\n        'Microsoft.AspNetCore.Hosting!HostingApplicationDiagnostics.Log.RequestScope',\n        'Microsoft.AspNetCore.Hosting!HostingApplicationDiagnostics.Log.HostingLogScope..ctor',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpProtocol.Microsoft.AspNetCore.Http.Features.IHttpRequestIdentifierFeature.get_TraceIdentifier',\n        'System!String.Create<System!ValueTuple>',\n        'Microsoft.AspNetCore.Http!DefaultHttpContextFactory.Create',\n        'Microsoft.AspNetCore.Http!DefaultHttpContext..ctor',\n        'Microsoft.AspNetCore.Hosting!HostingApplication.DisposeContext',\n        'Microsoft.AspNetCore.Hosting!HostingApplicationDiagnostics.LogRequestFinished',\n        'Microsoft.Extensions.Logging!Logger.Log<!T0>',\n        'Microsoft.Extensions.Logging!Logger.<Log>g__LoggerLog|12_0<!T0>',\n        'Microsoft.Extensions.Logging.Console!ConsoleLogger.Log<!T0>',\n        'Microsoft.Extensions.Logging.Console!SimpleConsoleFormatter.Write<!T0>',\n        'Microsoft.AspNetCore.Hosting!HostingRequestFinishedLog.ToString',\n        'System!Number.UInt32ToDecStr',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1Connection.TryParseRequest',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1Connection.ParseRequest',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1Connection.TakeStartLine',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpParser<Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1ParsingHandler>.ParseRequestLine',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpParser<Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1ParsingHandler>.ParseRequestLine',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1Connection.OnStartLine',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1Connection.OnOriginFormTarget',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!StringUtilities.GetAsciiStringNonNullCharacters',\n        'System!String.Create<System!IntPtr>',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpProtocol.InitializeBodyControl',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!BodyControl..ctor',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder.SetResult',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder<System.Threading.Tasks!VoidTaskResult>.SetExistingTaskResult',\n        'System.Threading.Tasks!Task.RunContinuations',\n        'System.Threading.Tasks!AwaitTaskContinuation.RunOrScheduleAction',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder.AsyncStateMachineBox<TResult, TResult>.MoveNext',\n        'System.Threading!ExecutionContext.RunInternal',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpProtocol.<ProcessRequestsAsync>d__222<TContext>.MoveNext',\n        'System.Threading.Tasks!Task<System.Threading.Tasks!VoidTaskResult>.TrySetResult',\n        'System.Threading.Tasks!Task.RunContinuations',\n        'System.Threading.Tasks!AwaitTaskContinuation.RunOrScheduleAction',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder.AsyncStateMachineBox<TResult, TResult>.MoveNext',\n        'System.Threading!ExecutionContext.RunInternal',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal!HttpConnection.<ProcessRequestsAsync>d__12<TContext>.MoveNext',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder<System.Threading.Tasks!VoidTaskResult>.SetExistingTaskResult',\n        'System.Threading.Tasks!Task.RunContinuations',\n        'System.Threading.Tasks!AwaitTaskContinuation.RunOrScheduleAction',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder.AsyncStateMachineBox<TResult, TResult>.MoveNext',\n        'System.Threading!ExecutionContext.RunInternal',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!KestrelConnection.<ExecuteAsync>d__6<T>.MoveNext',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketConnection.DisposeAsync',\n        'System.Runtime.CompilerServices!AsyncMethodBuilderCore.Start<!<DisposeAsync>d__26>',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketConnection.<DisposeAsync>d__26.MoveNext',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder<System.Threading.Tasks!VoidTaskResult>.GetStateMachineBox<!<DisposeAsync>d__26>',\n        'System.Threading!UnmanagedThreadPoolWorkItem.System.Threading.IThreadPoolWorkItem.Execute',\n        'System.Threading!TimerQueue.FireNextTimers',\n        'System.Threading!TimerQueueTimer.Fire',\n        'Microsoft.Extensions.FileProviders.Physical!PhysicalFilesWatcher.RaiseChangeEvents',\n        'System.Threading!ThreadPoolWorkQueueThreadLocals.Finalize',\n        'System.Threading!ThreadPoolWorkQueue.WorkStealingQueueList.Remove',\n      ],\n    },\n    {\n      name: 'self',\n      values: [\n        0, 0, 0, 0, 0, 0, 12, 4, 0, 0, 0, 0, 8, 0, 0, 17, 3, 12, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1,\n        0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 3, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 15, 2, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 8, 7, 0, 1, 3, 2, 1, 0, 1,\n        3, 5, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 4, 0, 5, 12, 1, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0,\n        0, 0, 0, 0, 0, 0, 0, 10, 0, 1, 0, 3, 2, 0, 0, 0, 7, 7, 1, 1, 0, 0, 6, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3,\n        0, 0, 0, 0, 0, 0, 15, 14, 14, 4, 0, 0, 0, 0, 0, 0, 3, 9, 3, 0, 0, 0, 0, 2, 0, 0, 1, 2, 0, 0, 0, 6, 0, 0, 2, 3,\n        1, 0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0, 2, 5, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 5, 0, 3,\n        2, 0, 1, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 1, 0, 1,\n      ],\n    },\n    {\n      name: 'value',\n      values: [\n        378, 12, 12, 12, 12, 12, 12, 365, 230, 230, 230, 230, 8, 206, 206, 206, 15, 12, 26, 139, 139, 139, 136, 136,\n        136, 42, 42, 3, 3, 2, 0, 1, 1, 1, 1, 1, 0, 4, 4, 2, 0, 1, 1, 1, 1, 1, 1, 9, 9, 7, 5, 4, 4, 0, 0, 0, 3, 3, 1, 2,\n        2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 22, 22, 22, 22, 22, 7, 7, 7, 7, 7, 7, 15, 42, 32, 3, 3, 3, 3, 14, 13, 13,\n        13, 5, 5, 0, 5, 4, 1, 1, 8, 11, 4, 1, 3, 4, 2, 1, 1, 8, 5, 29, 26, 25, 25, 25, 12, 12, 2, 2, 2, 2, 0, 1, 4, 5,\n        5, 12, 1, 3, 3, 3, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 0, 0, 0, 0, 0, 10, 10, 1, 1, 3, 3, 2,\n        0, 0, 7, 7, 7, 1, 1, 6, 6, 6, 1, 1, 131, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 117, 97, 97, 97, 97, 97, 73, 32, 18,\n        4, 26, 20, 20, 20, 17, 17, 3, 14, 5, 2, 2, 2, 2, 2, 1, 1, 1, 2, 6, 6, 6, 6, 6, 5, 5, 3, 1, 18, 18, 18, 18, 18,\n        18, 3, 3, 3, 7, 2, 2, 5, 3, 0, 0, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 20, 20, 2, 2, 1, 0, 8, 3, 3, 10, 6, 6, 5, 2,\n        2, 0, 0, 0, 0, 0, 10, 10, 7, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n        2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1,\n      ],\n    },\n    {\n      name: 'selfRight',\n      values: [\n        0, 0, 0, 0, 0, 0, 16, 5, 0, 0, 0, 0, 1, 0, 0, 19, 2, 8, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1,\n        1, 0, 0, 1, 1, 0, 2, 0, 0, 2, 1, 0, 0, 1, 0, 0, 0, 1, 0, 2, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 11, 1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 7, 3, 0, 3, 2, 2, 0, 1, 1,\n        4, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 3, 0, 4, 13, 0, 0, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0,\n        0, 0, 0, 0, 0, 1, 1, 4, 0, 5, 0, 1, 0, 0, 1, 0, 7, 9, 3, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1,\n        0, 0, 0, 0, 0, 0, 4, 12, 12, 5, 0, 0, 0, 0, 0, 0, 2, 9, 0, 0, 0, 0, 0, 1, 0, 0, 4, 3, 0, 0, 0, 6, 0, 0, 1, 2, 0,\n        0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 6, 8, 0, 0, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 3, 0, 0, 0, 0, 0, 1, 0, 0, 1, 3,\n        0, 2, 1, 0, 2, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      ],\n    },\n    {\n      name: 'valueRight',\n      values: [\n        316, 16, 16, 16, 16, 16, 16, 300, 190, 190, 190, 190, 1, 173, 173, 173, 10, 8, 28, 108, 108, 108, 107, 107, 107,\n        34, 34, 4, 4, 2, 1, 1, 1, 1, 1, 1, 1, 7, 7, 4, 1, 2, 2, 2, 2, 2, 1, 9, 9, 9, 8, 8, 8, 3, 2, 2, 5, 5, 0, 0, 0, 0,\n        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 13, 13, 13, 13, 13, 2, 2, 2, 2, 2, 2, 11, 31, 24, 2, 2, 2, 2, 10, 10, 10, 10, 3,\n        3, 1, 2, 2, 0, 0, 7, 8, 5, 3, 2, 4, 2, 2, 1, 6, 2, 28, 24, 24, 24, 24, 11, 11, 1, 1, 1, 1, 1, 2, 3, 4, 4, 13, 0,\n        1, 1, 1, 1, 3, 3, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 5, 4, 5, 5, 1, 1, 0, 1, 1, 7, 7, 9, 3, 0,\n        4, 4, 2, 0, 0, 105, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 100, 87, 87, 87, 87, 87, 58, 29, 17, 5, 25, 19, 19, 19, 12,\n        12, 2, 10, 1, 1, 1, 1, 1, 1, 4, 4, 4, 3, 6, 6, 6, 6, 3, 3, 3, 2, 0, 26, 26, 26, 26, 26, 26, 1, 1, 1, 14, 6, 6,\n        8, 4, 2, 2, 1, 1, 1, 5, 5, 5, 5, 2, 2, 2, 3, 10, 10, 1, 1, 1, 1, 1, 1, 1, 8, 3, 3, 1, 0, 2, 3, 3, 3, 3, 3, 3, 3,\n        3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      ],\n    },\n  ],\n};\n","import { StandardVariableQuery, StandardVariableSupport } from '@grafana/data';\n\nimport { TestData, TestDataQueryType } from './dataquery.gen';\nimport { TestDataDataSource } from './datasource';\n\nexport class TestDataVariableSupport extends StandardVariableSupport<TestDataDataSource> {\n  toDataQuery(query: StandardVariableQuery): TestData {\n    return {\n      refId: 'TestDataDataSource-QueryVariable',\n      stringInput: query.query,\n      scenarioId: TestDataQueryType.VariablesQuery,\n      csvWave: undefined,\n    };\n  }\n}\n","import { from, merge, Observable, of, throwError } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\nimport {\n  AnnotationEvent,\n  ArrayDataFrame,\n  DataFrame,\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceInstanceSettings,\n  DataTopic,\n  LiveChannelScope,\n  LoadingState,\n  TimeRange,\n  ScopedVars,\n  toDataFrame,\n  MutableDataFrame,\n  AnnotationQuery,\n  getSearchFilterScopedVar,\n} from '@grafana/data';\nimport { DataSourceWithBackend, getBackendSrv, getGrafanaLiveSrv, getTemplateSrv, TemplateSrv } from '@grafana/runtime';\n\nimport { Scenario, TestData, TestDataQueryType } from './dataquery.gen';\nimport { queryMetricTree } from './metricTree';\nimport { generateRandomEdges, generateRandomNodes, savedNodesResponse } from './nodeGraphUtils';\nimport { runStream } from './runStreams';\nimport { flameGraphData, flameGraphDataDiff } from './testData/flameGraphResponse';\nimport { TestDataVariableSupport } from './variables';\n\nexport class TestDataDataSource extends DataSourceWithBackend<TestData> {\n  scenariosCache?: Promise<Scenario[]>;\n\n  constructor(\n    instanceSettings: DataSourceInstanceSettings,\n    private readonly templateSrv: TemplateSrv = getTemplateSrv()\n  ) {\n    super(instanceSettings);\n    this.variables = new TestDataVariableSupport();\n    this.annotations = {\n      getDefaultQuery: () => ({ scenarioId: TestDataQueryType.Annotations, lines: 10 }),\n\n      // Make sure annotations have scenarioId set\n      prepareAnnotation: (old: AnnotationQuery<TestData>) => {\n        if (old.target?.scenarioId?.length) {\n          return old;\n        }\n        return {\n          ...old,\n          target: {\n            refId: 'Anno',\n            scenarioId: TestDataQueryType.Annotations,\n            lines: 10,\n          },\n        };\n      },\n    };\n  }\n\n  getDefaultQuery(): Partial<TestData> {\n    return {\n      scenarioId: TestDataQueryType.RandomWalk,\n      seriesCount: 1,\n    };\n  }\n\n  query(options: DataQueryRequest<TestData>): Observable<DataQueryResponse> {\n    const backendQueries: TestData[] = [];\n    const streams: Array<Observable<DataQueryResponse>> = [];\n\n    // Start streams and prepare queries\n    for (const target of options.targets) {\n      if (target.hide) {\n        continue;\n      }\n\n      this.resolveTemplateVariables(target, options.scopedVars);\n\n      switch (target.scenarioId) {\n        case 'live':\n          streams.push(runGrafanaLiveQuery(target, options));\n          break;\n        case 'streaming_client':\n          streams.push(runStream(target, options));\n          break;\n        case 'grafana_api':\n          streams.push(runGrafanaAPI(target, options));\n          break;\n        case TestDataQueryType.Annotations:\n          streams.push(this.annotationDataTopicTest(target, options));\n          break;\n        case 'variables-query':\n          streams.push(this.variablesQuery(target, options));\n          break;\n        case 'node_graph':\n          streams.push(this.nodesQuery(target, options));\n          break;\n        case 'flame_graph':\n          streams.push(this.flameGraphQuery(target));\n          break;\n        case 'trace':\n          streams.push(this.trace(options));\n          break;\n        case 'raw_frame':\n          streams.push(this.rawFrameQuery(target, options));\n          break;\n        case 'server_error_500':\n          // this now has an option where it can return/throw an error from the frontend.\n          // if it doesn't, send it to the backend where it might panic there :)\n          const query = this.serverErrorQuery(target, options);\n          query ? streams.push(query) : backendQueries.push(target);\n          break;\n        // Unusable since 7, removed in 8\n        case 'manual_entry': {\n          let csvContent = 'Time,Value\\n';\n          if (target.points) {\n            for (const point of target.points) {\n              csvContent += `${point[1]},${point[0]}\\n`;\n            }\n          }\n          target.scenarioId = TestDataQueryType.CSVContent;\n          target.csvContent = csvContent;\n        }\n\n        default:\n          backendQueries.push(target);\n      }\n    }\n\n    if (backendQueries.length) {\n      const backendOpts = {\n        ...options,\n        targets: backendQueries,\n      };\n      streams.push(super.query(backendOpts));\n    }\n\n    if (streams.length === 0) {\n      return of({ data: [] });\n    }\n\n    return merge(...streams);\n  }\n\n  resolveTemplateVariables(query: TestData, scopedVars: ScopedVars) {\n    if (query.labels) {\n      query.labels = this.templateSrv.replace(query.labels, scopedVars);\n    }\n    if (query.alias) {\n      query.alias = this.templateSrv.replace(query.alias, scopedVars);\n    }\n    if (query.scenarioId) {\n      query.scenarioId = this.templateSrv.replace(query.scenarioId, scopedVars) as TestDataQueryType;\n    }\n    if (query.stringInput) {\n      query.stringInput = this.templateSrv.replace(query.stringInput, scopedVars);\n    }\n    if (query.csvContent) {\n      query.csvContent = this.templateSrv.replace(query.csvContent, scopedVars);\n    }\n    if (query.rawFrameContent) {\n      query.rawFrameContent = this.templateSrv.replace(query.rawFrameContent, scopedVars);\n    }\n  }\n\n  applyTemplateVariables(query: TestData, scopedVars: ScopedVars): TestData {\n    this.resolveTemplateVariables(query, scopedVars);\n    return query;\n  }\n\n  annotationDataTopicTest(target: TestData, req: DataQueryRequest<TestData>): Observable<DataQueryResponse> {\n    const events = this.buildFakeAnnotationEvents(req.range, target.lines ?? 10);\n    const dataFrame = new ArrayDataFrame(events);\n    dataFrame.meta = { dataTopic: DataTopic.Annotations };\n    return of({ key: target.refId, data: [dataFrame] }).pipe(delay(100));\n  }\n\n  buildFakeAnnotationEvents(range: TimeRange, count: number): AnnotationEvent[] {\n    let timeWalker = range.from.valueOf();\n    const to = range.to.valueOf();\n    const events = [];\n    const step = (to - timeWalker) / count;\n\n    for (let i = 0; i < count; i++) {\n      events.push({\n        time: timeWalker,\n        text: 'This is the text, <a href=\"https://grafana.com\">Grafana.com</a>',\n        tags: ['text', 'server'],\n      });\n      timeWalker += step;\n    }\n\n    return events;\n  }\n\n  getQueryDisplayText(query: TestData) {\n    const scenario = query.scenarioId ?? 'Default scenario';\n\n    if (query.alias) {\n      return scenario + ' as ' + query.alias;\n    }\n\n    return scenario;\n  }\n\n  testDatasource() {\n    return Promise.resolve({\n      status: 'success',\n      message: 'Data source is working',\n    });\n  }\n\n  getScenarios(): Promise<Scenario[]> {\n    if (!this.scenariosCache) {\n      this.scenariosCache = this.getResource('scenarios');\n    }\n\n    return this.scenariosCache;\n  }\n\n  variablesQuery(target: TestData, options: DataQueryRequest<TestData>): Observable<DataQueryResponse> {\n    const query = target.stringInput ?? '';\n    const interpolatedQuery = this.templateSrv.replace(query, getSearchFilterScopedVar({ query, wildcardChar: '*' }));\n    const children = queryMetricTree(interpolatedQuery);\n    const items = children.map((item) => ({ value: item.name, text: item.name }));\n    const dataFrame = new ArrayDataFrame(items);\n\n    return of({ data: [dataFrame] }).pipe(delay(100));\n  }\n\n  nodesQuery(target: TestData, options: DataQueryRequest<TestData>): Observable<DataQueryResponse> {\n    const type = target.nodes?.type || 'random';\n    let frames: DataFrame[];\n    switch (type) {\n      case 'random':\n        frames = generateRandomNodes(target.nodes?.count);\n        break;\n      case 'response':\n        frames = savedNodesResponse();\n        break;\n      case 'random edges':\n        frames = [generateRandomEdges(target.nodes?.count)];\n        break;\n      default:\n        throw new Error(`Unknown node_graph sub type ${type}`);\n    }\n\n    return of({ data: frames }).pipe(delay(100));\n  }\n\n  flameGraphQuery(target: TestData): Observable<DataQueryResponse> {\n    const data = target.flamegraphDiff ? flameGraphDataDiff : flameGraphData;\n    return of({ data: [{ ...data, refId: target.refId }] }).pipe(delay(100));\n  }\n\n  trace(options: DataQueryRequest<TestData>): Observable<DataQueryResponse> {\n    const frame = new MutableDataFrame({\n      meta: {\n        preferredVisualisationType: 'trace',\n      },\n      fields: [\n        { name: 'traceID' },\n        { name: 'spanID' },\n        { name: 'parentSpanID' },\n        { name: 'operationName' },\n        { name: 'serviceName' },\n        { name: 'serviceTags' },\n        { name: 'startTime' },\n        { name: 'duration' },\n        { name: 'logs' },\n        { name: 'references' },\n        { name: 'tags' },\n        { name: 'kind' },\n        { name: 'statusCode' },\n      ],\n    });\n    const numberOfSpans = options.targets[0].spanCount || 10;\n    const spanIdPrefix = '75c665dfb68';\n    const start = Date.now() - 1000 * 60 * 30;\n    const kinds = ['client', 'server', ''];\n    const statusCodes = [0, 1, 2];\n\n    for (let i = 0; i < numberOfSpans; i++) {\n      frame.add({\n        traceID: spanIdPrefix + '10000',\n        spanID: spanIdPrefix + (10000 + i),\n        parentSpanID: i === 0 ? '' : spanIdPrefix + 10000,\n        operationName: `Operation ${i}`,\n        serviceName: `Service ${i}`,\n        startTime: start + i * 100,\n        duration: 300,\n        tags: [\n          { key: 'http.method', value: 'POST' },\n          { key: 'http.status_code', value: 200 },\n          { key: 'http.url', value: `Service${i}:80` },\n        ],\n        serviceTags: [\n          { key: 'client-uuid', value: '6238bacefsecba865' },\n          { key: 'service.name', value: `Service${i}` },\n          { key: 'ip', value: '0.0.0.1' },\n          { key: 'latest_version', value: false },\n        ],\n        logs:\n          i % 4 === 0\n            ? [\n                { timestamp: start + i * 100, fields: [{ key: 'msg', value: 'Service updated' }] },\n                { timestamp: start + i * 100 + 200, fields: [{ key: 'host', value: 'app' }] },\n              ]\n            : [],\n        kind: i === 0 ? 'client' : kinds[Math.floor(Math.random() * kinds.length)],\n        statusCode: statusCodes[Math.floor(Math.random() * statusCodes.length)],\n      });\n    }\n\n    return of({ data: [frame] }).pipe(delay(100));\n  }\n\n  rawFrameQuery(target: TestData, options: DataQueryRequest<TestData>): Observable<DataQueryResponse> {\n    try {\n      const data = JSON.parse(target.rawFrameContent ?? '[]').map((v: any) => {\n        const f = toDataFrame(v);\n        f.refId = target.refId;\n        return f;\n      });\n      return of({ data, state: LoadingState.Done }).pipe(delay(100));\n    } catch (ex) {\n      return of({\n        data: [],\n        error: ex instanceof Error ? ex : new Error('Unkown error'),\n      }).pipe(delay(100));\n    }\n  }\n\n  serverErrorQuery(target: TestData, options: DataQueryRequest<TestData>): Observable<DataQueryResponse> | null {\n    const { errorType } = target;\n\n    if (errorType === 'server_panic') {\n      return null;\n    }\n\n    const stringInput = target.stringInput ?? '';\n    if (stringInput === '') {\n      if (errorType === 'frontend_exception') {\n        throw new Error('Scenario threw an exception in the frontend because the input was empty.');\n      } else {\n        return throwError(() => new Error('Scenario returned an error because the input was empty.'));\n      }\n    }\n\n    return null;\n  }\n}\n\nfunction runGrafanaAPI(target: TestData, req: DataQueryRequest<TestData>): Observable<DataQueryResponse> {\n  const url = `/api/${target.stringInput}`;\n  return from(\n    getBackendSrv()\n      .get(url)\n      .then((res) => {\n        const frame = new ArrayDataFrame(res);\n        return {\n          state: LoadingState.Done,\n          data: [frame],\n        };\n      })\n  );\n}\n\nlet liveQueryCounter = 1000;\n\nfunction runGrafanaLiveQuery(target: TestData, req: DataQueryRequest<TestData>): Observable<DataQueryResponse> {\n  if (!target.channel) {\n    throw new Error(`Missing channel config`);\n  }\n  return getGrafanaLiveSrv().getDataStream({\n    addr: {\n      scope: LiveChannelScope.Plugin,\n      namespace: 'testdata',\n      path: target.channel,\n    },\n    key: `testStream.${liveQueryCounter++}`,\n  });\n}\n","import { DataSourcePlugin } from '@grafana/data';\n\nimport { ConfigEditor } from './ConfigEditor';\nimport { MetaDataInspector } from './MetaDataInspector';\nimport { QueryEditor } from './QueryEditor';\nimport { TestInfoTab } from './TestInfoTab';\nimport { TestDataDataSource } from './datasource';\n\nexport const plugin = new DataSourcePlugin(TestDataDataSource)\n  .setConfigEditor(ConfigEditor)\n  .setQueryEditor(QueryEditor)\n  .setMetadataInspector(MetaDataInspector)\n  .addConfigPage({\n    title: 'Setup',\n    icon: 'list-ul',\n    body: TestInfoTab,\n    id: 'setup',\n  });\n","import { css, cx } from '@emotion/css';\nimport React, { HTMLProps, ReactNode } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\n\nexport interface Props extends Omit<HTMLProps<HTMLDivElement>, 'css'> {\n  children: ReactNode | ReactNode[];\n}\n\nexport const InlineFieldRow = ({ children, className, ...htmlProps }: Props) => {\n  const styles = useStyles2(getStyles);\n  return (\n    <div className={cx(styles.container, className)} {...htmlProps}>\n      {children}\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css({\n      label: 'InlineFieldRow',\n      display: 'flex',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      alignContent: 'flex-start',\n      rowGap: theme.spacing(0.5),\n    }),\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport React, { HTMLProps } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { getFocusStyle, sharedInputStyle } from '../Forms/commonStyles';\n\nexport interface Props extends Omit<HTMLProps<HTMLTextAreaElement>, 'size'> {\n  /** Show an invalid state around the input */\n  invalid?: boolean;\n}\n\nexport const TextArea = React.forwardRef<HTMLTextAreaElement, Props>(({ invalid, className, ...props }, ref) => {\n  const styles = useStyles2(getTextAreaStyle, invalid);\n\n  return <textarea {...props} className={cx(styles.textarea, className)} ref={ref} />;\n});\n\nconst getTextAreaStyle = (theme: GrafanaTheme2, invalid = false) => ({\n  textarea: cx(\n    sharedInputStyle(theme),\n    getFocusStyle(theme),\n    css({\n      display: 'block',\n      borderRadius: theme.shape.radius.default,\n      padding: `${theme.spacing.gridSize / 4}px ${theme.spacing.gridSize}px`,\n      width: '100%',\n      borderColor: invalid ? theme.colors.error.border : theme.components.input.borderColor,\n    })\n  ),\n});\n\nTextArea.displayName = 'TextArea';\n"],"names":["ConfigEditor","MetaDataInspector","data","Stack","frame","index","useMountedState","mountedRef","get","useAsyncFn","fn","deps","initialState","lastCallId","isMounted","_a","state","set","callback","args","_i","callId","prevState","value","error","useAsync","streamingClientFields","types","StreamingClientEditor","onChange","query","onSelectChange","onInputChange","e","name","InlineFieldRow","InlineField","Select","label","id","min","step","placeholder","Input","randomWalkFields","testSelectors","selectors","RandomWalkEditor","tooltip","selector","CSVContentEditor","onSaveCSV","csvContent","CodeEditor","CSVFileEditor","onChangeFileName","files","f","TestDataQueryType","defaultUSAQuery","defaultTestData","defaultPulseQuery","defaultCSVWaveQuery","defaultQuery","CSVWaveEditor","props","wave","last","onAdd","valuesCSV","setValuesCSV","labels","setLabels","setName","onAction","onValueChange","key","onKeyDown","evt","Button","CSVWavesEditor","waves","ERROR_OPTIONS","v","liveTestDataChannels","GrafanaLiveEditor","onChannelChange","NodeGraphEditor","type","options","o","item","fields","PredictablePulseEditor","RawFrameEditor","setError","warning","setWarning","onSaveFrames","rawFrameContent","json","Alert","getLegendStyles","theme","Legend","children","className","legendProps","styles","FieldSet","rest","getStyles","renderInput","field","config","newValue","SimulationSchemaForm","schema","jsonView","setJsonView","onUpdateTextArea","event","element","TextArea","SimulationQueryEditor","ds","simQuery","simKey","cfgValue","setCfgValue","info","s","current","path","onUpdateKey","onUIDChanged","onTickChanged","tick","onTypeChange","onToggleStream","onToggleLast","onSchemaFormChange","res","Label","USAQueryEditor","usaQueryModes","ep","fieldNames","vals","stateNames","labelRegexp","parseLabels","labelsByKey","_","operator","findCommonLabels","labelsSets","acc","findUniqueLabels","commonLabels","uncommonLabels","matchAllLabels","expect","against","formatLabels","defaultValue","withoutBraces","cleanSelector","Registry","init","ext","filter","select","currentOptions","option","ids","found","alias","MatcherID","FieldMatcherID","FrameMatcherID","ValueMatcherID","fieldTypeMatcher","allFrames","fieldTypesMatcher","numericMatcher","timeMatcher","getFieldTypeMatchers","ReducerID","isReducerID","reduceField","reducers","missing","queue","fieldReducers","calcs","reducer","nullValueMode","ignoreNulls","nullAsZero","values","doStandardCalcs","calculateLastNotNull","calculateLast","calculateFirstNotNull","calculateFirst","calculateStdDev","calculateChangeCount","calculateDistinctCount","isNumberField","i","currentValue","isFirst","idx","squareSum","runningMean","runningNonNullCount","_oldMean","variance","count","first","distinct","compareValues","left","op","right","isBooleanReducer","r","fieldValueMatcherInfo","isBoolean","getFrameDisplayName","valueFieldNames","cacheFieldDisplayNames","frames","existingTitle","multipleFrames","displayName","calculateFieldDisplayName","hasConfigTitle","isComparisonSeries","parts","frameNamesDiffer","frameNameAdded","labelsAdded","singleLabelName","getSingleLabelName","allLabels","getUniqueFieldName","dupeCount","foundSelf","otherField","singleName","labelKey","specialMatcher","specialCharEscape","specialCharUnescape","escapeStringForRegex","unEscapeStringFromRegex","stringStartsAsRegEx","str","stringToJsRegex","match","stringToMs","nr","unit","m","h","d","toNumberString","toIntegerOrUndefined","toFloatOrUndefined","toPascalCase","string","escapeRegex","ByNamesMatcherMode","fieldNameMatcher","fallback","fieldNameFallback","multipleFieldNamesMatcher","names","mode","uniqueNames","matcher","displayText","regexpFieldNameMatcher","pattern","regexp","patternToRegex","fieldsInFrameMatcher","refId","regexpOrMultipleNamesMatcher","regexpMatcher","namesMatcher","frameNameMatcher","regex","getFieldNameMatchers","getFrameNameMatchers","anyFieldMatcher","getFieldMatcher","child","text","sub","fieldMatchers","anyFrameMatcher","getFrameMatchers","frameMatchers","allFieldsMatcher","allFramesMatcher","notFieldMatcher","check","notFrameMatcher","alwaysFieldMatcher","alwaysFrameMatcher","neverFieldMatcher","notTimeFieldMatcher","neverFrameMatcher","alwaysFieldMatcherInfo","_option","_options","alwaysFrameMatcherInfo","neverFieldMatcherInfo","neverFrameMatcherInfo","getFieldPredicateMatchers","getFramePredicateMatchers","refIdMatcher","getRefIdMatchers","firstFieldMatcher","firstTimeFieldMatcher","getSimpleFieldMatchers","isEqualValueMatcher","valueIndex","isNotEqualValueMatcher","getEqualValueMatchers","isNullValueMatcher","isNotNullValueMatcher","getNullValueMatchers","isGreaterValueMatcher","isGreaterOrEqualValueMatcher","isLowerValueMatcher","isLowerOrEqualValueMatcher","getNumericValueMatchers","isBetweenValueMatcher","getRangeValueMatchers","regexValueMatcher","getRegexValueMatcher","valueMatchers","getValueMatcher","DataTransformerID","JoinMode","joinByFieldTransformer","ctx","source","map","joinBy","joined","joinDataFrames","pickBestJoinField","timeField","common","getJoinMatcher","maybeSortFrame","fieldIdx","sortByField","isLikelyAscendingVector","frameCopy","joinFieldMatcher","joinIndex","fieldIndex","copy","origin","joinField","nullModes","allData","originalFields","originalFieldsOrderByFrame","fieldsOrder","frameIndex","nullModesFrame","NULL_REMOVE","join","frameFieldsOrder","spanNulls","NULL_RETAIN","NULL_EXPAND","a","joinOuterTabular","tables","numberOfFields","duplicateHash","tableIdx","table","joinOnTableField","otherTablesIdx","otherTable","otherTableJoinOnField","joinTableFieldValuesIdx","tableJoinOnValue","allOtherFields","joinedRow","tableFieldValIdx","fieldsIdx","joinRowIdx","otherTableValuesIdx","row","valIdx","nullExpand","yVals","nullIdxs","alignedLen","xi","lastNullIdx","nullIdx","xVals","t","ti","xs","len","b","xIdxs","si","ys","nullMode","yVal","alignedIdx","samples","firstIdx","lastIdx","stride","prevVal","renderLegendFormat","aliasPattern","aliasData","aliasRegex","g1","StreamingFrameAction","PROM_STYLE_METRIC_LABEL","PushMode","fieldPredicate","optionsOverride","trimValues","dataFrameDTO","numberOfItemsToRemove","getNumberOfItemsToRemove","length","serialized","assureValuesAreWithinLengthLimit","maxLength","maxDelta","needsMoreLength","needsBiggerDelta","needsToOverrideDefaultInfinityDelta","circPush","newLength","val","msg","firstField","niceSchemaFields","displayNameFormat","hasSameStructure","sf","isWide","of","entities","ents","labeledTables","transpose","dummyTable","appended","labelCount","parsedLabels","parseLabelsFromField","proto","StreamingDataFrame","opts","getStreamingFrameOptions","streamingDataFrame","vrecs","tableKeys","cols","c","closestIdx","num","arr","lo","hi","mid","bitwise","kv","getLastStreamingDataFramePacket","pi","newData","deltaIdx","k","nlen","sliceIdx","deltaLookup","low","high","fA","fB","patchArrayVectorProrotypeMethods","makeArrayIndexableVector","target","property","receiver","vectorToArray","FunctionalVector","iterator","vectorator","transform","predicate","separator","items","compareFn","start","deleteCount","end","searchElement","fromIndex","thisArg","callbackfn","initialValue","depth","emptyarray","vector","result","CircularVector","delta","tail","makeFieldParser","MISSING_VALUE","MutableDataFrame","creator","buffer","meta","startLength","parser","p","obj","CircularDataFrame","CSVHeaderStyle","readCSV","csv","CSVReader","ParseState","results","line","isName","j","disp","papacfg","writeValue","makeFieldWriter","displayValue","getHeaderLine","isType","display","getLocaleDelimiter","toCSV","series","writers","getRandomLogLevel","getNextWord","words","getRandomLine","defaultStreamQuery","runStream","req","runSignalStream","runLogsStream","runFetchStream","Observable","subscriber","streamId","maxDataPoints","spread","speed","bands","noise","suffix","timeoutId","lastSent","addNextRow","time","max","pushNextEvent","reader","processChunk","response","endpoints","QueryEditor","datasource","onRunQuery","loading","scenarioList","point","hideAlias","onUpdate","currentScenario","scenario","scenarioId","description","onScenarioChange","sc","update","onFieldChange","onEndPointChange","onStreamClientChange","onPulseWaveChange","onUSAStatsChange","usa","onCSVWaveChange","csvWave","show","Icon","ErrorEditor","TestInfoTab","SEARCH_FILTER_VARIABLE","containsSearchFilter","getSearchFilterScopedVar","wildcardChar","LiveChannelScope","LiveChannelType","LiveChannelConnectionState","LiveChannelEventType","isLiveChannelStatusEvent","isLiveChannelJoinEvent","isLiveChannelLeaveEvent","isLiveChannelMessageEvent","parseLiveChannelAddress","isValidLiveChannelAddress","addr","toLiveChannelId","buildMetricTree","parent","chars","letter","nodeName","queryTree","queryIndex","nodeQuery","namesToMatch","node","nameToMatch","queryMetricTree","NodeGraphDataFrameFieldNames","FieldColorModeId","FALLBACK_COLOR","nodes","edges","generateRandomNodes","root","nodesWithoutMaxEdges","maxEdges","makeRandomNode","sourceIndex","additionalEdges","targetIndex","nodeFields","nodeFrame","edgesFrame","edgesSet","rnd","edge","success","savedNodesResponse","generateRandomEdges","flameGraphData","flameGraphDataDiff","TestDataVariableSupport","TestDataDataSource","DataSourceWithBackend","instanceSettings","templateSrv","old","backendQueries","streams","runGrafanaLiveQuery","runGrafanaAPI","backendOpts","merge","scopedVars","events","dataFrame","ArrayDataFrame","delay","range","timeWalker","to","interpolatedQuery","numberOfSpans","spanIdPrefix","kinds","statusCodes","ex","errorType","throwError","url","from","liveQueryCounter","htmlProps","invalid","ref","getTextAreaStyle"],"sourceRoot":""}