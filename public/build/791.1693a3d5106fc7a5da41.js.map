{"version":3,"file":"791.1693a3d5106fc7a5da41.js","mappings":"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","sources":["webpack://grafana/./public/app/features/alerting/unified/components/MetaText.tsx","webpack://grafana/./public/app/features/alerting/unified/components/MoreButton.tsx","webpack://grafana/./public/app/features/alerting/unified/components/AlertStateDot.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-viewer/tabs/Details.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-viewer/tabs/History.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-viewer/tabs/Instances.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-viewer/tabs/Routing.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-viewer/v2/DeleteModal.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-viewer/v2/RuleViewer.v2.tsx","webpack://grafana/./.yarn/cache/date-fns-npm-2.30.0-895c790e0f-70b3e8ea7a.zip/node_modules/date-fns/esm/_lib/assign/index.js","webpack://grafana/./.yarn/cache/date-fns-npm-2.30.0-895c790e0f-70b3e8ea7a.zip/node_modules/date-fns/esm/_lib/cloneObject/index.js","webpack://grafana/./.yarn/cache/date-fns-npm-2.30.0-895c790e0f-70b3e8ea7a.zip/node_modules/date-fns/esm/formatDistanceStrict/index.js","webpack://grafana/./.yarn/cache/date-fns-npm-2.30.0-895c790e0f-70b3e8ea7a.zip/node_modules/date-fns/esm/formatDistanceToNowStrict/index.js"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { ComponentProps, HTMLAttributes } from 'react';\n\nimport { Icon, IconName, useStyles2, Text, Stack } from '@grafana/ui';\n\ninterface Props extends HTMLAttributes<HTMLDivElement> {\n  icon?: IconName;\n  direction?: 'row' | 'column';\n  color?: ComponentProps<typeof Text>['color'];\n}\n\nconst MetaText = ({ children, icon, color = 'secondary', direction = 'row', ...rest }: Props) => {\n  const styles = useStyles2(getStyles);\n  const interactive = typeof rest.onClick === 'function';\n\n  const rowDirection = direction === 'row';\n  const alignItems = rowDirection ? 'center' : 'flex-start';\n  const gap = rowDirection ? 0.5 : 0;\n\n  return (\n    <div\n      className={cx({\n        [styles.interactive]: interactive,\n      })}\n      // allow passing ARIA and data- attributes\n      {...rest}\n    >\n      <Text variant=\"bodySmall\" color={color}>\n        <Stack direction={direction} alignItems={alignItems} gap={gap} wrap={'wrap'}>\n          {icon && <Icon size=\"sm\" name={icon} />}\n          {children}\n        </Stack>\n      </Text>\n    </div>\n  );\n};\n\nconst getStyles = () => ({\n  interactive: css`\n    cursor: pointer;\n  `,\n});\n\nexport { MetaText };\n","import React, { forwardRef, Ref } from 'react';\n\nimport { Button, ButtonProps, Icon, Stack } from '@grafana/ui';\n\nconst MoreButton = forwardRef(function MoreButton(props: ButtonProps, ref: Ref<HTMLButtonElement>) {\n  return (\n    <Button\n      variant=\"secondary\"\n      size=\"sm\"\n      type=\"button\"\n      aria-label=\"more-actions\"\n      data-testid=\"more-actions\"\n      ref={ref}\n      {...props}\n    >\n      <Stack direction=\"row\" alignItems=\"center\" gap={0}>\n        More <Icon name=\"angle-down\" />\n      </Stack>\n    </Button>\n  );\n});\n\nexport default MoreButton;\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { ComponentSize, Stack, useStyles2 } from '@grafana/ui';\nimport { PromAlertingRuleState } from 'app/types/unified-alerting-dto';\n\nconst AlertStateDot = (props: DotStylesProps) => {\n  const styles = useStyles2(getDotStyles, props);\n\n  return (\n    <Stack direction=\"row\" gap={0.5}>\n      <div className={styles.dot} />\n    </Stack>\n  );\n};\n\ninterface DotStylesProps {\n  state: PromAlertingRuleState;\n  includeState?: boolean;\n  size?: ComponentSize; // TODO support this\n}\n\nconst getDotStyles = (theme: GrafanaTheme2, props: DotStylesProps) => {\n  const size = theme.spacing(1.25);\n  const outlineSize = `calc(${size} / 2.5)`;\n\n  return {\n    dot: css`\n      width: ${size};\n      height: ${size};\n\n      border-radius: 100%;\n\n      background-color: ${theme.colors.secondary.main};\n      outline: solid ${outlineSize} ${theme.colors.secondary.transparent};\n      margin: ${outlineSize};\n\n      ${props.state === PromAlertingRuleState.Inactive &&\n      css`\n        background-color: ${theme.colors.success.main};\n        outline-color: ${theme.colors.success.transparent};\n      `}\n\n      ${props.state === PromAlertingRuleState.Pending &&\n      css`\n        background-color: ${theme.colors.warning.main};\n        outline-color: ${theme.colors.warning.transparent};\n      `}\n\n      ${props.state === PromAlertingRuleState.Firing &&\n      css`\n        background-color: ${theme.colors.error.main};\n        outline-color: ${theme.colors.error.transparent};\n      `}\n    `,\n  };\n};\n\nexport { AlertStateDot };\n","import { css } from '@emotion/css';\nimport { formatDistanceToNowStrict } from 'date-fns';\nimport React, { useCallback } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Text, Stack, useStyles2, ClipboardButton, TextLink } from '@grafana/ui';\nimport { CombinedRule } from 'app/types/unified-alerting';\nimport { Annotations } from 'app/types/unified-alerting-dto';\n\nimport { isGrafanaRulerRule, isRecordingRulerRule } from '../../../utils/rules';\nimport { MetaText } from '../../MetaText';\nimport { Tokenize } from '../../Tokenize';\n\ninterface DetailsProps {\n  rule: CombinedRule;\n}\n\nenum RuleType {\n  GrafanaManagedAlertRule = 'Grafana-managed alert rule',\n  CloudAlertRule = 'Cloud alert rule',\n  CloudRecordingRule = 'Cloud recording rule',\n}\n\nconst Details = ({ rule }: DetailsProps) => {\n  const styles = useStyles2(getStyles);\n\n  let ruleType: RuleType;\n\n  if (isGrafanaRulerRule(rule.rulerRule)) {\n    ruleType = RuleType.GrafanaManagedAlertRule;\n  } else if (isRecordingRulerRule(rule.rulerRule)) {\n    ruleType = RuleType.CloudRecordingRule;\n  } else {\n    // probably not the greatest assumption\n    ruleType = RuleType.CloudAlertRule;\n  }\n\n  const evaluationDuration = rule.promRule?.evaluationTime;\n  const evaluationTimestamp = rule.promRule?.lastEvaluation;\n\n  const copyRuleUID = useCallback(() => {\n    if (isGrafanaRulerRule(rule.rulerRule)) {\n      return rule.rulerRule.grafana_alert.uid;\n    } else {\n      return '';\n    }\n  }, [rule.rulerRule]);\n\n  const annotations: Annotations | undefined = !isRecordingRulerRule(rule.rulerRule)\n    ? rule.annotations ?? []\n    : undefined;\n\n  return (\n    <Stack direction=\"column\" gap={3}>\n      <div className={styles.metadataWrapper}>\n        {/* type and identifier (optional) */}\n        <MetaText direction=\"column\">\n          Rule type\n          <Text color=\"primary\">{ruleType}</Text>\n        </MetaText>\n        <MetaText direction=\"column\">\n          {isGrafanaRulerRule(rule.rulerRule) && (\n            <>\n              Rule Identifier\n              <Stack direction=\"row\" alignItems=\"center\" gap={0.5}>\n                <Text color=\"primary\">\n                  {rule.rulerRule.grafana_alert.uid}\n                  <ClipboardButton fill=\"text\" variant=\"secondary\" icon=\"copy\" size=\"sm\" getText={copyRuleUID} />\n                </Text>\n              </Stack>\n            </>\n          )}\n        </MetaText>\n\n        {/* evaluation duration and pending period */}\n        <MetaText direction=\"column\">\n          {evaluationDuration && (\n            <>\n              Last evaluation\n              {evaluationTimestamp && evaluationDuration && (\n                <span>\n                  <Text color=\"primary\">{formatDistanceToNowStrict(new Date(evaluationTimestamp))} ago</Text>, took{' '}\n                  <Text color=\"primary\">{evaluationDuration}ms</Text>\n                </span>\n              )}\n            </>\n          )}\n        </MetaText>\n        <MetaText direction=\"column\">\n          {!isRecordingRulerRule(rule.rulerRule) && (\n            <>\n              Pending period\n              <Text color=\"primary\">{rule.rulerRule?.for ?? '0s'}</Text>\n            </>\n          )}\n        </MetaText>\n\n        {/* nodata and execution error state mapping */}\n        {isGrafanaRulerRule(rule.rulerRule) && (\n          <>\n            <MetaText direction=\"column\">\n              Alert state if no data or all values are null\n              <Text color=\"primary\">{rule.rulerRule.grafana_alert.no_data_state}</Text>\n            </MetaText>\n            <MetaText direction=\"column\">\n              Alert state if execution error or timeout\n              <Text color=\"primary\">{rule.rulerRule.grafana_alert.exec_err_state}</Text>\n            </MetaText>\n          </>\n        )}\n      </div>\n\n      {/* annotations go here */}\n      {annotations && (\n        <>\n          <Text variant=\"h4\">Annotations</Text>\n          {Object.keys(annotations).length === 0 ? (\n            <Text variant=\"bodySmall\" color=\"secondary\" italic>\n              No annotations\n            </Text>\n          ) : (\n            <div className={styles.metadataWrapper}>\n              {Object.entries(annotations).map(([name, value]) => (\n                <MetaText direction=\"column\" key={name}>\n                  {name}\n                  <AnnotationValue value={value} />\n                </MetaText>\n              ))}\n            </div>\n          )}\n        </>\n      )}\n    </Stack>\n  );\n};\n\ninterface AnnotationValueProps {\n  value: string;\n}\n\nfunction AnnotationValue({ value }: AnnotationValueProps) {\n  const needsExternalLink = value && value.startsWith('http');\n  const tokenizeValue = <Tokenize input={value} delimiter={['{{', '}}']} />;\n\n  if (needsExternalLink) {\n    return (\n      <TextLink variant=\"bodySmall\" href={value} external>\n        {value}\n      </TextLink>\n    );\n  }\n\n  return <Text color=\"primary\">{tokenizeValue}</Text>;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  metadataWrapper: css({\n    display: 'grid',\n    gridTemplateColumns: 'auto auto',\n    rowGap: theme.spacing(3),\n    columnGap: theme.spacing(12),\n  }),\n});\n\nexport { Details };\n","import React, { lazy, Suspense } from 'react';\n\nimport { config } from '@grafana/runtime';\nimport { RulerGrafanaRuleDTO } from 'app/types/unified-alerting-dto';\n\nimport { StateHistoryImplementation } from '../../../hooks/useStateHistoryModal';\n\nconst AnnotationsStateHistory = lazy(() => import('../../../components/rules/state-history/StateHistory'));\nconst LokiStateHistory = lazy(() => import('../../../components/rules/state-history/LokiStateHistory'));\n\ninterface HistoryProps {\n  rule: RulerGrafanaRuleDTO;\n}\n\nconst History = ({ rule }: HistoryProps) => {\n  // can be \"loki\", \"multiple\" or \"annotations\"\n  const stateHistoryBackend = config.unifiedAlerting.alertStateHistoryBackend;\n  // can be \"loki\" or \"annotations\"\n  const stateHistoryPrimary = config.unifiedAlerting.alertStateHistoryPrimary;\n\n  // if \"loki\" is either the backend or the primary, show the new state history implementation\n  const usingNewAlertStateHistory = [stateHistoryBackend, stateHistoryPrimary].some(\n    (implementation) => implementation === StateHistoryImplementation.Loki\n  );\n  const implementation = usingNewAlertStateHistory\n    ? StateHistoryImplementation.Loki\n    : StateHistoryImplementation.Annotations;\n\n  const ruleID = rule.grafana_alert.id ?? '';\n  const ruleUID = rule.grafana_alert.uid;\n\n  return (\n    <Suspense fallback={'Loading...'}>\n      {implementation === StateHistoryImplementation.Loki && <LokiStateHistory ruleUID={ruleUID} />}\n      {implementation === StateHistoryImplementation.Annotations && <AnnotationsStateHistory alertId={ruleID} />}\n    </Suspense>\n  );\n};\n\nexport { History };\n","import React from 'react';\n\nimport { DEFAULT_PER_PAGE_PAGINATION } from 'app/core/constants';\nimport { CombinedRule } from 'app/types/unified-alerting';\n\nimport { RuleDetailsMatchingInstances } from '../../rules/RuleDetailsMatchingInstances';\n\ninterface Props {\n  rule: CombinedRule;\n}\n\nconst InstancesList = ({ rule }: Props) => (\n  <RuleDetailsMatchingInstances\n    rule={rule}\n    pagination={{ itemsPerPage: DEFAULT_PER_PAGE_PAGINATION }}\n    enableFiltering\n  />\n);\n\nexport { InstancesList };\n","import React from 'react';\n\nconst Routing = () => <>Routing</>;\n\nexport { Routing };\n","import React, { useState, useCallback, useMemo } from 'react';\n\nimport { ConfirmModal } from '@grafana/ui';\nimport { dispatch } from 'app/store/store';\nimport { CombinedRule } from 'app/types/unified-alerting';\n\nimport { deleteRuleAction } from '../../../state/actions';\nimport { getRulesSourceName } from '../../../utils/datasource';\nimport { fromRulerRule } from '../../../utils/rule-id';\n\ntype DeleteModalHook = [JSX.Element, (rule: CombinedRule) => void, () => void];\n\nexport const useDeleteModal = (): DeleteModalHook => {\n  const [ruleToDelete, setRuleToDelete] = useState<CombinedRule | undefined>();\n\n  const dismissModal = useCallback(() => {\n    setRuleToDelete(undefined);\n  }, []);\n\n  const showModal = useCallback((rule: CombinedRule) => {\n    setRuleToDelete(rule);\n  }, []);\n\n  const deleteRule = useCallback(\n    (ruleToDelete?: CombinedRule) => {\n      if (ruleToDelete && ruleToDelete.rulerRule) {\n        const identifier = fromRulerRule(\n          getRulesSourceName(ruleToDelete.namespace.rulesSource),\n          ruleToDelete.namespace.name,\n          ruleToDelete.group.name,\n          ruleToDelete.rulerRule\n        );\n\n        dispatch(deleteRuleAction(identifier, { navigateTo: '/alerting/list' }));\n        dismissModal();\n      }\n    },\n    [dismissModal]\n  );\n\n  const modal = useMemo(\n    () => (\n      <ConfirmModal\n        isOpen={Boolean(ruleToDelete)}\n        title=\"Delete rule\"\n        body=\"Deleting this rule will permanently remove it from your alert rule list. Are you sure you want to delete this rule?\"\n        confirmText=\"Yes, delete\"\n        icon=\"exclamation-triangle\"\n        onConfirm={() => deleteRule(ruleToDelete)}\n        onDismiss={dismissModal}\n      />\n    ),\n    [deleteRule, dismissModal, ruleToDelete]\n  );\n\n  return [modal, showModal, dismissModal];\n};\n","import { isEmpty, truncate } from 'lodash';\nimport React from 'react';\n\nimport { AppEvents, NavModelItem, UrlQueryValue } from '@grafana/data';\nimport { Alert, Button, Dropdown, LinkButton, Menu, Stack, TabContent, Text, TextLink } from '@grafana/ui';\nimport { PageInfoItem } from 'app/core/components/Page/types';\nimport { appEvents } from 'app/core/core';\nimport { useQueryParams } from 'app/core/hooks/useQueryParams';\nimport { CombinedRule, RuleIdentifier } from 'app/types/unified-alerting';\nimport { PromAlertingRuleState } from 'app/types/unified-alerting-dto';\n\nimport { defaultPageNav } from '../../../RuleViewer';\nimport { AlertRuleAction, useAlertRuleAbility } from '../../../hooks/useAbilities';\nimport { Annotation } from '../../../utils/constants';\nimport {\n  createShareLink,\n  isLocalDevEnv,\n  isOpenSourceEdition,\n  makeDashboardLink,\n  makePanelLink,\n  makeRuleBasedSilenceLink,\n} from '../../../utils/misc';\nimport * as ruleId from '../../../utils/rule-id';\nimport { isAlertingRule, isFederatedRuleGroup, isGrafanaRulerRule } from '../../../utils/rules';\nimport { createUrl } from '../../../utils/url';\nimport { AlertLabels } from '../../AlertLabels';\nimport { AlertStateDot } from '../../AlertStateDot';\nimport { AlertingPageWrapper } from '../../AlertingPageWrapper';\nimport MoreButton from '../../MoreButton';\nimport { ProvisionedResource, ProvisioningAlert } from '../../Provisioning';\nimport { DeclareIncidentMenuItem } from '../../bridges/DeclareIncidentButton';\nimport { Details } from '../tabs/Details';\nimport { History } from '../tabs/History';\nimport { InstancesList } from '../tabs/Instances';\nimport { QueryResults } from '../tabs/Query';\nimport { Routing } from '../tabs/Routing';\n\nimport { useDeleteModal } from './DeleteModal';\n\ntype RuleViewerProps = {\n  rule: CombinedRule;\n  identifier: RuleIdentifier;\n};\n\nenum ActiveTab {\n  Query = 'query',\n  Instances = 'instances',\n  History = 'history',\n  Routing = 'routing',\n  Details = 'details',\n}\n\nconst RuleViewer = ({ rule, identifier }: RuleViewerProps) => {\n  const { pageNav, activeTab } = usePageNav(rule);\n  const [deleteModal, showDeleteModal] = useDeleteModal();\n\n  const [editSupported, editAllowed] = useAlertRuleAbility(rule, AlertRuleAction.Update);\n  const canEdit = editSupported && editAllowed;\n\n  const [deleteSupported, deleteAllowed] = useAlertRuleAbility(rule, AlertRuleAction.Delete);\n  const canDelete = deleteSupported && deleteAllowed;\n\n  const [duplicateSupported, duplicateAllowed] = useAlertRuleAbility(rule, AlertRuleAction.Duplicate);\n  const canDuplicate = duplicateSupported && duplicateAllowed;\n\n  const [silenceSupported, silenceAllowed] = useAlertRuleAbility(rule, AlertRuleAction.Silence);\n  const canSilence = silenceSupported && silenceAllowed;\n\n  const [exportSupported, exportAllowed] = useAlertRuleAbility(rule, AlertRuleAction.ModifyExport);\n  const canExport = exportSupported && exportAllowed;\n\n  const promRule = rule.promRule;\n\n  const isAlertType = isAlertingRule(promRule);\n\n  const isFederatedRule = isFederatedRuleGroup(rule.group);\n  const isProvisioned = isGrafanaRulerRule(rule.rulerRule) && Boolean(rule.rulerRule.grafana_alert.provenance);\n\n  /**\n   * Since Incident isn't available as an open-source product we shouldn't show it for Open-Source licenced editions of Grafana.\n   * We should show it in development mode\n   */\n  const shouldShowDeclareIncidentButton = !isOpenSourceEdition() || isLocalDevEnv();\n  const shareUrl = createShareLink(rule.namespace.rulesSource, rule);\n\n  const copyShareUrl = () => {\n    if (navigator.clipboard) {\n      navigator.clipboard.writeText(shareUrl);\n      appEvents.emit(AppEvents.alertSuccess, ['URL copied to clipboard']);\n    }\n  };\n\n  return (\n    <AlertingPageWrapper\n      pageNav={pageNav}\n      navId=\"alert-list\"\n      isLoading={false}\n      renderTitle={(title) => {\n        return <Title name={title} state={isAlertType ? promRule.state : undefined} />;\n      }}\n      actions={[\n        canEdit && <EditButton key=\"edit-action\" identifier={identifier} />,\n        <Dropdown\n          key=\"more-actions\"\n          overlay={\n            <Menu>\n              {canSilence && (\n                <Menu.Item\n                  label=\"Silence\"\n                  icon=\"bell-slash\"\n                  url={makeRuleBasedSilenceLink(identifier.ruleSourceName, rule)}\n                />\n              )}\n              {shouldShowDeclareIncidentButton && <DeclareIncidentMenuItem title={rule.name} url={''} />}\n              {canDuplicate && <Menu.Item label=\"Duplicate\" icon=\"copy\" />}\n              <Menu.Divider />\n              <Menu.Item label=\"Copy link\" icon=\"share-alt\" onClick={copyShareUrl} />\n              {canExport && (\n                <Menu.Item\n                  label=\"Export\"\n                  icon=\"download-alt\"\n                  childItems={[\n                    <Menu.Item key=\"no-modifications\" label=\"Without modifications\" icon=\"file-blank\" />,\n                    <Menu.Item key=\"with-modifications\" label=\"With modifications\" icon=\"file-alt\" />,\n                  ]}\n                />\n              )}\n              {canDelete && (\n                <>\n                  <Menu.Divider />\n                  <Menu.Item label=\"Delete\" icon=\"trash-alt\" destructive onClick={() => showDeleteModal(rule)} />\n                </>\n              )}\n            </Menu>\n          }\n        >\n          <MoreButton size=\"md\" />\n        </Dropdown>,\n      ]}\n      info={createMetadata(rule)}\n    >\n      <Stack direction=\"column\" gap={2}>\n        {/* actions */}\n        <Stack direction=\"column\" gap={2}>\n          {/* alerts and notifications and stuff */}\n          {isFederatedRule && (\n            <Alert severity=\"info\" title=\"This rule is part of a federated rule group.\">\n              <Stack direction=\"column\">\n                Federated rule groups are currently an experimental feature.\n                <Button fill=\"text\" icon=\"book\">\n                  <a href=\"https://grafana.com/docs/metrics-enterprise/latest/tenant-management/tenant-federation/#cross-tenant-alerting-and-recording-rule-federation\">\n                    Read documentation\n                  </a>\n                </Button>\n              </Stack>\n            </Alert>\n          )}\n          {isProvisioned && <ProvisioningAlert resource={ProvisionedResource.AlertRule} />}\n          {/* tabs and tab content */}\n          <TabContent>\n            {activeTab === ActiveTab.Query && <QueryResults rule={rule} />}\n            {activeTab === ActiveTab.Instances && <InstancesList rule={rule} />}\n            {activeTab === ActiveTab.History && isGrafanaRulerRule(rule.rulerRule) && <History rule={rule.rulerRule} />}\n            {activeTab === ActiveTab.Routing && <Routing />}\n            {activeTab === ActiveTab.Details && <Details rule={rule} />}\n          </TabContent>\n        </Stack>\n      </Stack>\n      {deleteModal}\n    </AlertingPageWrapper>\n  );\n};\n\ninterface EditButtonProps {\n  identifier: RuleIdentifier;\n}\n\nexport const EditButton = ({ identifier }: EditButtonProps) => {\n  const returnTo = location.pathname + location.search;\n  const ruleIdentifier = ruleId.stringifyIdentifier(identifier);\n  const editURL = createUrl(`/alerting/${encodeURIComponent(ruleIdentifier)}/edit`, { returnTo });\n\n  return (\n    <LinkButton variant=\"secondary\" icon=\"pen\" href={editURL}>\n      Edit\n    </LinkButton>\n  );\n};\n\nconst createMetadata = (rule: CombinedRule): PageInfoItem[] => {\n  const { labels, annotations, group } = rule;\n  const metadata: PageInfoItem[] = [];\n\n  const runbookUrl = annotations[Annotation.runbookURL];\n  const dashboardUID = annotations[Annotation.dashboardUID];\n  const panelID = annotations[Annotation.panelID];\n\n  const hasPanel = dashboardUID && panelID;\n  const hasDashboardWithoutPanel = dashboardUID && !panelID;\n  const hasLabels = !isEmpty(labels);\n\n  const interval = group.interval;\n\n  if (runbookUrl) {\n    metadata.push({\n      label: 'Runbook',\n      value: (\n        <TextLink variant=\"bodySmall\" href={runbookUrl} external>\n          {/* TODO instead of truncating the string, we should use flex and text overflow properly to allow it to take up all of the horizontal space available */}\n          {truncate(runbookUrl, { length: 42 })}\n        </TextLink>\n      ),\n    });\n  }\n\n  if (hasPanel) {\n    metadata.push({\n      label: 'Dashboard and panel',\n      value: (\n        <TextLink variant=\"bodySmall\" href={makePanelLink(dashboardUID, panelID)} external>\n          View panel\n        </TextLink>\n      ),\n    });\n  } else if (hasDashboardWithoutPanel) {\n    metadata.push({\n      label: 'Dashboard',\n      value: (\n        <TextLink variant=\"bodySmall\" href={makeDashboardLink(dashboardUID)} external>\n          View dashboard\n        </TextLink>\n      ),\n    });\n  }\n\n  if (interval) {\n    metadata.push({\n      label: 'Evaluation interval',\n      value: <Text color=\"primary\">Every {interval}</Text>,\n    });\n  }\n\n  if (hasLabels) {\n    metadata.push({\n      label: 'Labels',\n      /* TODO truncate number of labels, maybe build in to component? */\n      value: <AlertLabels labels={labels} size=\"sm\" />,\n    });\n  }\n\n  return metadata;\n};\n\n// TODO move somewhere else\nexport const createListFilterLink = (values: Array<[string, string]>) => {\n  const params = new URLSearchParams([['search', values.map(([key, value]) => `${key}:\"${value}\"`).join(' ')]]);\n  return createUrl(`/alerting/list?` + params.toString());\n};\n\ninterface TitleProps {\n  name: string;\n  // recording rules don't have a state\n  state?: PromAlertingRuleState;\n}\n\nexport const Title = ({ name, state }: TitleProps) => (\n  <div style={{ display: 'flex', alignItems: 'center', gap: 8, maxWidth: '100%' }}>\n    <LinkButton variant=\"secondary\" icon=\"angle-left\" href=\"/alerting/list\" />\n    <Text element=\"h1\" truncate>\n      {name}\n    </Text>\n    {/* recording rules won't have a state */}\n    {state && <StateBadge state={state} />}\n  </div>\n);\n\ninterface StateBadgeProps {\n  state: PromAlertingRuleState;\n}\n\n// TODO move to separate component\nconst StateBadge = ({ state }: StateBadgeProps) => {\n  let stateLabel: string;\n  let textColor: 'success' | 'error' | 'warning';\n\n  switch (state) {\n    case PromAlertingRuleState.Inactive:\n      textColor = 'success';\n      stateLabel = 'Normal';\n      break;\n    case PromAlertingRuleState.Firing:\n      textColor = 'error';\n      stateLabel = 'Firing';\n      break;\n    case PromAlertingRuleState.Pending:\n      textColor = 'warning';\n      stateLabel = 'Pending';\n      break;\n  }\n\n  return (\n    <Stack direction=\"row\" gap={0.5}>\n      <AlertStateDot size=\"md\" state={state} />\n      <Text variant=\"bodySmall\" color={textColor}>\n        {stateLabel}\n      </Text>\n    </Stack>\n  );\n};\n\nfunction useActiveTab(): [ActiveTab, (tab: ActiveTab) => void] {\n  const [queryParams, setQueryParams] = useQueryParams();\n  const tabFromQuery = queryParams['tab'];\n\n  const activeTab = isValidTab(tabFromQuery) ? tabFromQuery : ActiveTab.Query;\n\n  const setActiveTab = (tab: ActiveTab) => {\n    setQueryParams({ tab });\n  };\n\n  return [activeTab, setActiveTab];\n}\n\nfunction isValidTab(tab: UrlQueryValue): tab is ActiveTab {\n  const isString = typeof tab === 'string';\n  // @ts-ignore\n  return isString && Object.values(ActiveTab).includes(tab);\n}\n\nfunction usePageNav(rule: CombinedRule) {\n  const [activeTab, setActiveTab] = useActiveTab();\n\n  const { annotations, promRule } = rule;\n\n  const summary = annotations[Annotation.summary];\n  const isAlertType = isAlertingRule(promRule);\n  const numberOfInstance = isAlertType ? (promRule.alerts ?? []).length : undefined;\n\n  const pageNav: NavModelItem = {\n    ...defaultPageNav,\n    text: rule.name,\n    subTitle: summary,\n    children: [\n      {\n        text: 'Query and conditions',\n        active: activeTab === ActiveTab.Query,\n        onClick: () => {\n          setActiveTab(ActiveTab.Query);\n        },\n      },\n      {\n        text: 'Instances',\n        active: activeTab === ActiveTab.Instances,\n        onClick: () => {\n          setActiveTab(ActiveTab.Instances);\n        },\n        tabCounter: numberOfInstance,\n      },\n      {\n        text: 'History',\n        active: activeTab === ActiveTab.History,\n        onClick: () => {\n          setActiveTab(ActiveTab.History);\n        },\n      },\n      {\n        text: 'Details',\n        active: activeTab === ActiveTab.Details,\n        onClick: () => {\n          setActiveTab(ActiveTab.Details);\n        },\n      },\n    ],\n    parentItem: {\n      text: rule.group.name,\n      url: createListFilterLink([\n        ['namespace', rule.namespace.name],\n        ['group', rule.group.name],\n      ]),\n      parentItem: {\n        text: rule.namespace.name,\n        url: createListFilterLink([['namespace', rule.namespace.name]]),\n      },\n    },\n  };\n\n  return {\n    pageNav,\n    activeTab,\n  };\n}\n\nexport default RuleViewer;\n","export default function assign(target, object) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n  for (var property in object) {\n    if (Object.prototype.hasOwnProperty.call(object, property)) {\n      ;\n      target[property] = object[property];\n    }\n  }\n  return target;\n}","import assign from \"../assign/index.js\";\nexport default function cloneObject(object) {\n  return assign({}, object);\n}","import { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport cloneObject from \"../_lib/cloneObject/index.js\";\nimport assign from \"../_lib/assign/index.js\";\nimport defaultLocale from \"../_lib/defaultLocale/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 1000 * 60;\nvar MINUTES_IN_DAY = 60 * 24;\nvar MINUTES_IN_MONTH = MINUTES_IN_DAY * 30;\nvar MINUTES_IN_YEAR = MINUTES_IN_DAY * 365;\n\n/**\n * @name formatDistanceStrict\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.roundingMethod` must be 'floor', 'ceil' or 'round'\n * @throws {RangeError} `options.unit` must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistanceStrict(new Date(2014, 6, 2), new Date(2015, 0, 2))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00?\n * const result = formatDistanceStrict(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0)\n * )\n * //=> '15 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistanceStrict(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> '1 year ago'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, in minutes?\n * const result = formatDistanceStrict(new Date(2016, 0, 1), new Date(2015, 0, 1), {\n *   unit: 'minute'\n * })\n * //=> '525600 minutes'\n *\n * @example\n * // What is the distance from 1 January 2015\n * // to 28 January 2015, in months, rounded up?\n * const result = formatDistanceStrict(new Date(2015, 0, 28), new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistanceStrict(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> '1 jaro'\n */\n\nexport default function formatDistanceStrict(dirtyDate, dirtyBaseDate, options) {\n  var _ref, _options$locale, _options$roundingMeth;\n  requiredArgs(2, arguments);\n  var defaultOptions = getDefaultOptions();\n  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : defaultLocale;\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain localize.formatDistance property');\n  }\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n  var localizeOptions = assign(cloneObject(options), {\n    addSuffix: Boolean(options === null || options === void 0 ? void 0 : options.addSuffix),\n    comparison: comparison\n  });\n  var dateLeft;\n  var dateRight;\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n  var roundingMethod = String((_options$roundingMeth = options === null || options === void 0 ? void 0 : options.roundingMethod) !== null && _options$roundingMeth !== void 0 ? _options$roundingMeth : 'round');\n  var roundingMethodFn;\n  if (roundingMethod === 'floor') {\n    roundingMethodFn = Math.floor;\n  } else if (roundingMethod === 'ceil') {\n    roundingMethodFn = Math.ceil;\n  } else if (roundingMethod === 'round') {\n    roundingMethodFn = Math.round;\n  } else {\n    throw new RangeError(\"roundingMethod must be 'floor', 'ceil' or 'round'\");\n  }\n  var milliseconds = dateRight.getTime() - dateLeft.getTime();\n  var minutes = milliseconds / MILLISECONDS_IN_MINUTE;\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft);\n\n  // Use DST-normalized difference in minutes for years, months and days;\n  // use regular difference in minutes for hours, minutes and seconds.\n  var dstNormalizedMinutes = (milliseconds - timezoneOffset) / MILLISECONDS_IN_MINUTE;\n  var defaultUnit = options === null || options === void 0 ? void 0 : options.unit;\n  var unit;\n  if (!defaultUnit) {\n    if (minutes < 1) {\n      unit = 'second';\n    } else if (minutes < 60) {\n      unit = 'minute';\n    } else if (minutes < MINUTES_IN_DAY) {\n      unit = 'hour';\n    } else if (dstNormalizedMinutes < MINUTES_IN_MONTH) {\n      unit = 'day';\n    } else if (dstNormalizedMinutes < MINUTES_IN_YEAR) {\n      unit = 'month';\n    } else {\n      unit = 'year';\n    }\n  } else {\n    unit = String(defaultUnit);\n  }\n\n  // 0 up to 60 seconds\n  if (unit === 'second') {\n    var seconds = roundingMethodFn(milliseconds / 1000);\n    return locale.formatDistance('xSeconds', seconds, localizeOptions);\n\n    // 1 up to 60 mins\n  } else if (unit === 'minute') {\n    var roundedMinutes = roundingMethodFn(minutes);\n    return locale.formatDistance('xMinutes', roundedMinutes, localizeOptions);\n\n    // 1 up to 24 hours\n  } else if (unit === 'hour') {\n    var hours = roundingMethodFn(minutes / 60);\n    return locale.formatDistance('xHours', hours, localizeOptions);\n\n    // 1 up to 30 days\n  } else if (unit === 'day') {\n    var days = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions);\n\n    // 1 up to 12 months\n  } else if (unit === 'month') {\n    var months = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_MONTH);\n    return months === 12 && defaultUnit !== 'month' ? locale.formatDistance('xYears', 1, localizeOptions) : locale.formatDistance('xMonths', months, localizeOptions);\n\n    // 1 year up to max Date\n  } else if (unit === 'year') {\n    var years = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_YEAR);\n    return locale.formatDistance('xYears', years, localizeOptions);\n  }\n  throw new RangeError(\"unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\");\n}","import formatDistanceStrict from \"../formatDistanceStrict/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name formatDistanceToNowStrict\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * const result = formatDistanceToNowStrict(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * const result = formatDistanceToNowStrict(\n *   new Date(2015, 0, 1, 0, 0, 15)\n * )\n * //=> '15 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * const result = formatDistanceToNowStrict(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in 1 year'\n *\n * @example\n * // If today is 28 January 2015,\n * // what is the distance to 1 January 2015, in months, rounded up??\n * const result = formatDistanceToNowStrict(new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016 in Esperanto?\n * const eoLocale = require('date-fns/locale/eo')\n * const result = formatDistanceToNowStrict(\n *   new Date(2016, 0, 1),\n *   {locale: eoLocale}\n * )\n * //=> '1 jaro'\n */\nexport default function formatDistanceToNowStrict(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  return formatDistanceStrict(dirtyDate, Date.now(), options);\n}"],"names":["MetaText","children","icon","color","direction","rest","styles","getStyles","interactive","rowDirection","alignItems","gap","props","ref","AlertStateDot","getDotStyles","Stack","theme","size","outlineSize","RuleType","Details","rule","ruleType","evaluationDuration","evaluationTimestamp","copyRuleUID","annotations","Text","ClipboardButton","formatDistanceToNowStrict","name","value","AnnotationValue","needsExternalLink","tokenizeValue","Tokenize","TextLink","AnnotationsStateHistory","LokiStateHistory","History","stateHistoryBackend","config","stateHistoryPrimary","implementation","ruleID","ruleUID","InstancesList","RuleDetailsMatchingInstances","Routing","useDeleteModal","ruleToDelete","setRuleToDelete","dismissModal","showModal","deleteRule","identifier","ConfirmModal","ActiveTab","pageNav","activeTab","usePageNav","deleteModal","showDeleteModal","editSupported","editAllowed","canEdit","deleteSupported","deleteAllowed","canDelete","duplicateSupported","duplicateAllowed","canDuplicate","silenceSupported","silenceAllowed","canSilence","exportSupported","exportAllowed","canExport","promRule","isAlertType","isFederatedRule","isProvisioned","shouldShowDeclareIncidentButton","shareUrl","copyShareUrl","AlertingPageWrapper","title","Title","EditButton","Dropdown","Menu","MoreButton","createMetadata","Alert","Button","Provisioning","TabContent","Query","returnTo","ruleIdentifier","editURL","labels","group","metadata","runbookUrl","dashboardUID","panelID","hasPanel","hasDashboardWithoutPanel","hasLabels","interval","AlertLabels","createListFilterLink","values","params","key","state","StateBadge","stateLabel","textColor","useActiveTab","queryParams","setQueryParams","useQueryParams","tabFromQuery","isValidTab","tab","setActiveTab","summary","numberOfInstance","assign","target","object","property","cloneObject","MILLISECONDS_IN_MINUTE","MINUTES_IN_DAY","MINUTES_IN_MONTH","MINUTES_IN_YEAR","formatDistanceStrict","dirtyDate","dirtyBaseDate","options","_ref","_options$locale","_options$roundingMeth","requiredArgs","defaultOptions","locale","defaultLocale","comparison","compareAsc","localizeOptions","dateLeft","dateRight","toDate","roundingMethod","roundingMethodFn","milliseconds","minutes","timezoneOffset","getTimezoneOffsetInMilliseconds","dstNormalizedMinutes","defaultUnit","unit","seconds","roundedMinutes","hours","days","months","years"],"sourceRoot":""}